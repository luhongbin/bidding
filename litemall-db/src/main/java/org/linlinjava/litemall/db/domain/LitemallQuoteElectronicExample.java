package org.linlinjava.litemall.db.domain;

import java.math.BigDecimal;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;

public class LitemallQuoteElectronicExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table litemall_quote_electronic
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table litemall_quote_electronic
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table litemall_quote_electronic
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_quote_electronic
     *
     * @mbg.generated
     */
    public LitemallQuoteElectronicExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_quote_electronic
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_quote_electronic
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_quote_electronic
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_quote_electronic
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_quote_electronic
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_quote_electronic
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_quote_electronic
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_quote_electronic
     *
     * @mbg.generated
     */
    public LitemallQuoteElectronicExample orderBy(String orderByClause) {
        this.setOrderByClause(orderByClause);
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_quote_electronic
     *
     * @mbg.generated
     */
    public LitemallQuoteElectronicExample orderBy(String ... orderByClauses) {
        StringBuffer sb = new StringBuffer();
        for (int i = 0; i < orderByClauses.length; i++) {
            sb.append(orderByClauses[i]);
            if (i < orderByClauses.length - 1) {
                sb.append(" , ");
            }
        }
        this.setOrderByClause(sb.toString());
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_quote_electronic
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_quote_electronic
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria(this);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_quote_electronic
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_quote_electronic
     *
     * @mbg.generated
     */
    public static Criteria newAndCreateCriteria() {
        LitemallQuoteElectronicExample example = new LitemallQuoteElectronicExample();
        return example.createCriteria();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_quote_electronic
     *
     * @mbg.generated
     */
    public LitemallQuoteElectronicExample when(boolean condition, IExampleWhen then) {
        if (condition) {
            then.example(this);
        }
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_quote_electronic
     *
     * @mbg.generated
     */
    public LitemallQuoteElectronicExample when(boolean condition, IExampleWhen then, IExampleWhen otherwise) {
        if (condition) {
            then.example(this);
        } else {
            otherwise.example(this);
        }
        return this;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table litemall_quote_electronic
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_electronic
         *
         * @mbg.generated
         */
        public Criteria andIdEqualToColumn(LitemallQuoteElectronic.Column column) {
            addCriterion(new StringBuilder("id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_electronic
         *
         * @mbg.generated
         */
        public Criteria andIdNotEqualToColumn(LitemallQuoteElectronic.Column column) {
            addCriterion(new StringBuilder("id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_electronic
         *
         * @mbg.generated
         */
        public Criteria andIdGreaterThanColumn(LitemallQuoteElectronic.Column column) {
            addCriterion(new StringBuilder("id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_electronic
         *
         * @mbg.generated
         */
        public Criteria andIdGreaterThanOrEqualToColumn(LitemallQuoteElectronic.Column column) {
            addCriterion(new StringBuilder("id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_electronic
         *
         * @mbg.generated
         */
        public Criteria andIdLessThanColumn(LitemallQuoteElectronic.Column column) {
            addCriterion(new StringBuilder("id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_electronic
         *
         * @mbg.generated
         */
        public Criteria andIdLessThanOrEqualToColumn(LitemallQuoteElectronic.Column column) {
            addCriterion(new StringBuilder("id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andQuoteIdIsNull() {
            addCriterion("quote_id is null");
            return (Criteria) this;
        }

        public Criteria andQuoteIdIsNotNull() {
            addCriterion("quote_id is not null");
            return (Criteria) this;
        }

        public Criteria andQuoteIdEqualTo(Integer value) {
            addCriterion("quote_id =", value, "quoteId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_electronic
         *
         * @mbg.generated
         */
        public Criteria andQuoteIdEqualToColumn(LitemallQuoteElectronic.Column column) {
            addCriterion(new StringBuilder("quote_id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andQuoteIdNotEqualTo(Integer value) {
            addCriterion("quote_id <>", value, "quoteId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_electronic
         *
         * @mbg.generated
         */
        public Criteria andQuoteIdNotEqualToColumn(LitemallQuoteElectronic.Column column) {
            addCriterion(new StringBuilder("quote_id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andQuoteIdGreaterThan(Integer value) {
            addCriterion("quote_id >", value, "quoteId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_electronic
         *
         * @mbg.generated
         */
        public Criteria andQuoteIdGreaterThanColumn(LitemallQuoteElectronic.Column column) {
            addCriterion(new StringBuilder("quote_id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andQuoteIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("quote_id >=", value, "quoteId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_electronic
         *
         * @mbg.generated
         */
        public Criteria andQuoteIdGreaterThanOrEqualToColumn(LitemallQuoteElectronic.Column column) {
            addCriterion(new StringBuilder("quote_id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andQuoteIdLessThan(Integer value) {
            addCriterion("quote_id <", value, "quoteId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_electronic
         *
         * @mbg.generated
         */
        public Criteria andQuoteIdLessThanColumn(LitemallQuoteElectronic.Column column) {
            addCriterion(new StringBuilder("quote_id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andQuoteIdLessThanOrEqualTo(Integer value) {
            addCriterion("quote_id <=", value, "quoteId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_electronic
         *
         * @mbg.generated
         */
        public Criteria andQuoteIdLessThanOrEqualToColumn(LitemallQuoteElectronic.Column column) {
            addCriterion(new StringBuilder("quote_id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andQuoteIdIn(List<Integer> values) {
            addCriterion("quote_id in", values, "quoteId");
            return (Criteria) this;
        }

        public Criteria andQuoteIdNotIn(List<Integer> values) {
            addCriterion("quote_id not in", values, "quoteId");
            return (Criteria) this;
        }

        public Criteria andQuoteIdBetween(Integer value1, Integer value2) {
            addCriterion("quote_id between", value1, value2, "quoteId");
            return (Criteria) this;
        }

        public Criteria andQuoteIdNotBetween(Integer value1, Integer value2) {
            addCriterion("quote_id not between", value1, value2, "quoteId");
            return (Criteria) this;
        }

        public Criteria andCodeIsNull() {
            addCriterion("code is null");
            return (Criteria) this;
        }

        public Criteria andCodeIsNotNull() {
            addCriterion("code is not null");
            return (Criteria) this;
        }

        public Criteria andCodeEqualTo(String value) {
            addCriterion("code =", value, "code");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_electronic
         *
         * @mbg.generated
         */
        public Criteria andCodeEqualToColumn(LitemallQuoteElectronic.Column column) {
            addCriterion(new StringBuilder("code = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCodeNotEqualTo(String value) {
            addCriterion("code <>", value, "code");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_electronic
         *
         * @mbg.generated
         */
        public Criteria andCodeNotEqualToColumn(LitemallQuoteElectronic.Column column) {
            addCriterion(new StringBuilder("code <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCodeGreaterThan(String value) {
            addCriterion("code >", value, "code");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_electronic
         *
         * @mbg.generated
         */
        public Criteria andCodeGreaterThanColumn(LitemallQuoteElectronic.Column column) {
            addCriterion(new StringBuilder("code > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCodeGreaterThanOrEqualTo(String value) {
            addCriterion("code >=", value, "code");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_electronic
         *
         * @mbg.generated
         */
        public Criteria andCodeGreaterThanOrEqualToColumn(LitemallQuoteElectronic.Column column) {
            addCriterion(new StringBuilder("code >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCodeLessThan(String value) {
            addCriterion("code <", value, "code");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_electronic
         *
         * @mbg.generated
         */
        public Criteria andCodeLessThanColumn(LitemallQuoteElectronic.Column column) {
            addCriterion(new StringBuilder("code < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCodeLessThanOrEqualTo(String value) {
            addCriterion("code <=", value, "code");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_electronic
         *
         * @mbg.generated
         */
        public Criteria andCodeLessThanOrEqualToColumn(LitemallQuoteElectronic.Column column) {
            addCriterion(new StringBuilder("code <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCodeLike(String value) {
            addCriterion("code like", value, "code");
            return (Criteria) this;
        }

        public Criteria andCodeNotLike(String value) {
            addCriterion("code not like", value, "code");
            return (Criteria) this;
        }

        public Criteria andCodeIn(List<String> values) {
            addCriterion("code in", values, "code");
            return (Criteria) this;
        }

        public Criteria andCodeNotIn(List<String> values) {
            addCriterion("code not in", values, "code");
            return (Criteria) this;
        }

        public Criteria andCodeBetween(String value1, String value2) {
            addCriterion("code between", value1, value2, "code");
            return (Criteria) this;
        }

        public Criteria andCodeNotBetween(String value1, String value2) {
            addCriterion("code not between", value1, value2, "code");
            return (Criteria) this;
        }

        public Criteria andNameIsNull() {
            addCriterion("`name` is null");
            return (Criteria) this;
        }

        public Criteria andNameIsNotNull() {
            addCriterion("`name` is not null");
            return (Criteria) this;
        }

        public Criteria andNameEqualTo(String value) {
            addCriterion("`name` =", value, "name");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_electronic
         *
         * @mbg.generated
         */
        public Criteria andNameEqualToColumn(LitemallQuoteElectronic.Column column) {
            addCriterion(new StringBuilder("`name` = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNameNotEqualTo(String value) {
            addCriterion("`name` <>", value, "name");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_electronic
         *
         * @mbg.generated
         */
        public Criteria andNameNotEqualToColumn(LitemallQuoteElectronic.Column column) {
            addCriterion(new StringBuilder("`name` <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNameGreaterThan(String value) {
            addCriterion("`name` >", value, "name");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_electronic
         *
         * @mbg.generated
         */
        public Criteria andNameGreaterThanColumn(LitemallQuoteElectronic.Column column) {
            addCriterion(new StringBuilder("`name` > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNameGreaterThanOrEqualTo(String value) {
            addCriterion("`name` >=", value, "name");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_electronic
         *
         * @mbg.generated
         */
        public Criteria andNameGreaterThanOrEqualToColumn(LitemallQuoteElectronic.Column column) {
            addCriterion(new StringBuilder("`name` >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNameLessThan(String value) {
            addCriterion("`name` <", value, "name");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_electronic
         *
         * @mbg.generated
         */
        public Criteria andNameLessThanColumn(LitemallQuoteElectronic.Column column) {
            addCriterion(new StringBuilder("`name` < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNameLessThanOrEqualTo(String value) {
            addCriterion("`name` <=", value, "name");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_electronic
         *
         * @mbg.generated
         */
        public Criteria andNameLessThanOrEqualToColumn(LitemallQuoteElectronic.Column column) {
            addCriterion(new StringBuilder("`name` <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNameLike(String value) {
            addCriterion("`name` like", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotLike(String value) {
            addCriterion("`name` not like", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameIn(List<String> values) {
            addCriterion("`name` in", values, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotIn(List<String> values) {
            addCriterion("`name` not in", values, "name");
            return (Criteria) this;
        }

        public Criteria andNameBetween(String value1, String value2) {
            addCriterion("`name` between", value1, value2, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotBetween(String value1, String value2) {
            addCriterion("`name` not between", value1, value2, "name");
            return (Criteria) this;
        }

        public Criteria andSpecIsNull() {
            addCriterion("spec is null");
            return (Criteria) this;
        }

        public Criteria andSpecIsNotNull() {
            addCriterion("spec is not null");
            return (Criteria) this;
        }

        public Criteria andSpecEqualTo(String value) {
            addCriterion("spec =", value, "spec");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_electronic
         *
         * @mbg.generated
         */
        public Criteria andSpecEqualToColumn(LitemallQuoteElectronic.Column column) {
            addCriterion(new StringBuilder("spec = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSpecNotEqualTo(String value) {
            addCriterion("spec <>", value, "spec");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_electronic
         *
         * @mbg.generated
         */
        public Criteria andSpecNotEqualToColumn(LitemallQuoteElectronic.Column column) {
            addCriterion(new StringBuilder("spec <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSpecGreaterThan(String value) {
            addCriterion("spec >", value, "spec");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_electronic
         *
         * @mbg.generated
         */
        public Criteria andSpecGreaterThanColumn(LitemallQuoteElectronic.Column column) {
            addCriterion(new StringBuilder("spec > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSpecGreaterThanOrEqualTo(String value) {
            addCriterion("spec >=", value, "spec");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_electronic
         *
         * @mbg.generated
         */
        public Criteria andSpecGreaterThanOrEqualToColumn(LitemallQuoteElectronic.Column column) {
            addCriterion(new StringBuilder("spec >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSpecLessThan(String value) {
            addCriterion("spec <", value, "spec");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_electronic
         *
         * @mbg.generated
         */
        public Criteria andSpecLessThanColumn(LitemallQuoteElectronic.Column column) {
            addCriterion(new StringBuilder("spec < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSpecLessThanOrEqualTo(String value) {
            addCriterion("spec <=", value, "spec");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_electronic
         *
         * @mbg.generated
         */
        public Criteria andSpecLessThanOrEqualToColumn(LitemallQuoteElectronic.Column column) {
            addCriterion(new StringBuilder("spec <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSpecLike(String value) {
            addCriterion("spec like", value, "spec");
            return (Criteria) this;
        }

        public Criteria andSpecNotLike(String value) {
            addCriterion("spec not like", value, "spec");
            return (Criteria) this;
        }

        public Criteria andSpecIn(List<String> values) {
            addCriterion("spec in", values, "spec");
            return (Criteria) this;
        }

        public Criteria andSpecNotIn(List<String> values) {
            addCriterion("spec not in", values, "spec");
            return (Criteria) this;
        }

        public Criteria andSpecBetween(String value1, String value2) {
            addCriterion("spec between", value1, value2, "spec");
            return (Criteria) this;
        }

        public Criteria andSpecNotBetween(String value1, String value2) {
            addCriterion("spec not between", value1, value2, "spec");
            return (Criteria) this;
        }

        public Criteria andQuantityYearIsNull() {
            addCriterion("quantity_year is null");
            return (Criteria) this;
        }

        public Criteria andQuantityYearIsNotNull() {
            addCriterion("quantity_year is not null");
            return (Criteria) this;
        }

        public Criteria andQuantityYearEqualTo(String value) {
            addCriterion("quantity_year =", value, "quantityYear");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_electronic
         *
         * @mbg.generated
         */
        public Criteria andQuantityYearEqualToColumn(LitemallQuoteElectronic.Column column) {
            addCriterion(new StringBuilder("quantity_year = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andQuantityYearNotEqualTo(String value) {
            addCriterion("quantity_year <>", value, "quantityYear");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_electronic
         *
         * @mbg.generated
         */
        public Criteria andQuantityYearNotEqualToColumn(LitemallQuoteElectronic.Column column) {
            addCriterion(new StringBuilder("quantity_year <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andQuantityYearGreaterThan(String value) {
            addCriterion("quantity_year >", value, "quantityYear");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_electronic
         *
         * @mbg.generated
         */
        public Criteria andQuantityYearGreaterThanColumn(LitemallQuoteElectronic.Column column) {
            addCriterion(new StringBuilder("quantity_year > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andQuantityYearGreaterThanOrEqualTo(String value) {
            addCriterion("quantity_year >=", value, "quantityYear");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_electronic
         *
         * @mbg.generated
         */
        public Criteria andQuantityYearGreaterThanOrEqualToColumn(LitemallQuoteElectronic.Column column) {
            addCriterion(new StringBuilder("quantity_year >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andQuantityYearLessThan(String value) {
            addCriterion("quantity_year <", value, "quantityYear");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_electronic
         *
         * @mbg.generated
         */
        public Criteria andQuantityYearLessThanColumn(LitemallQuoteElectronic.Column column) {
            addCriterion(new StringBuilder("quantity_year < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andQuantityYearLessThanOrEqualTo(String value) {
            addCriterion("quantity_year <=", value, "quantityYear");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_electronic
         *
         * @mbg.generated
         */
        public Criteria andQuantityYearLessThanOrEqualToColumn(LitemallQuoteElectronic.Column column) {
            addCriterion(new StringBuilder("quantity_year <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andQuantityYearLike(String value) {
            addCriterion("quantity_year like", value, "quantityYear");
            return (Criteria) this;
        }

        public Criteria andQuantityYearNotLike(String value) {
            addCriterion("quantity_year not like", value, "quantityYear");
            return (Criteria) this;
        }

        public Criteria andQuantityYearIn(List<String> values) {
            addCriterion("quantity_year in", values, "quantityYear");
            return (Criteria) this;
        }

        public Criteria andQuantityYearNotIn(List<String> values) {
            addCriterion("quantity_year not in", values, "quantityYear");
            return (Criteria) this;
        }

        public Criteria andQuantityYearBetween(String value1, String value2) {
            addCriterion("quantity_year between", value1, value2, "quantityYear");
            return (Criteria) this;
        }

        public Criteria andQuantityYearNotBetween(String value1, String value2) {
            addCriterion("quantity_year not between", value1, value2, "quantityYear");
            return (Criteria) this;
        }

        public Criteria andPriceIsNull() {
            addCriterion("price is null");
            return (Criteria) this;
        }

        public Criteria andPriceIsNotNull() {
            addCriterion("price is not null");
            return (Criteria) this;
        }

        public Criteria andPriceEqualTo(BigDecimal value) {
            addCriterion("price =", value, "price");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_electronic
         *
         * @mbg.generated
         */
        public Criteria andPriceEqualToColumn(LitemallQuoteElectronic.Column column) {
            addCriterion(new StringBuilder("price = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPriceNotEqualTo(BigDecimal value) {
            addCriterion("price <>", value, "price");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_electronic
         *
         * @mbg.generated
         */
        public Criteria andPriceNotEqualToColumn(LitemallQuoteElectronic.Column column) {
            addCriterion(new StringBuilder("price <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPriceGreaterThan(BigDecimal value) {
            addCriterion("price >", value, "price");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_electronic
         *
         * @mbg.generated
         */
        public Criteria andPriceGreaterThanColumn(LitemallQuoteElectronic.Column column) {
            addCriterion(new StringBuilder("price > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPriceGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("price >=", value, "price");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_electronic
         *
         * @mbg.generated
         */
        public Criteria andPriceGreaterThanOrEqualToColumn(LitemallQuoteElectronic.Column column) {
            addCriterion(new StringBuilder("price >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPriceLessThan(BigDecimal value) {
            addCriterion("price <", value, "price");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_electronic
         *
         * @mbg.generated
         */
        public Criteria andPriceLessThanColumn(LitemallQuoteElectronic.Column column) {
            addCriterion(new StringBuilder("price < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPriceLessThanOrEqualTo(BigDecimal value) {
            addCriterion("price <=", value, "price");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_electronic
         *
         * @mbg.generated
         */
        public Criteria andPriceLessThanOrEqualToColumn(LitemallQuoteElectronic.Column column) {
            addCriterion(new StringBuilder("price <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPriceIn(List<BigDecimal> values) {
            addCriterion("price in", values, "price");
            return (Criteria) this;
        }

        public Criteria andPriceNotIn(List<BigDecimal> values) {
            addCriterion("price not in", values, "price");
            return (Criteria) this;
        }

        public Criteria andPriceBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("price between", value1, value2, "price");
            return (Criteria) this;
        }

        public Criteria andPriceNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("price not between", value1, value2, "price");
            return (Criteria) this;
        }

        public Criteria andDeliveryIsNull() {
            addCriterion("delivery is null");
            return (Criteria) this;
        }

        public Criteria andDeliveryIsNotNull() {
            addCriterion("delivery is not null");
            return (Criteria) this;
        }

        public Criteria andDeliveryEqualTo(String value) {
            addCriterion("delivery =", value, "delivery");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_electronic
         *
         * @mbg.generated
         */
        public Criteria andDeliveryEqualToColumn(LitemallQuoteElectronic.Column column) {
            addCriterion(new StringBuilder("delivery = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeliveryNotEqualTo(String value) {
            addCriterion("delivery <>", value, "delivery");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_electronic
         *
         * @mbg.generated
         */
        public Criteria andDeliveryNotEqualToColumn(LitemallQuoteElectronic.Column column) {
            addCriterion(new StringBuilder("delivery <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeliveryGreaterThan(String value) {
            addCriterion("delivery >", value, "delivery");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_electronic
         *
         * @mbg.generated
         */
        public Criteria andDeliveryGreaterThanColumn(LitemallQuoteElectronic.Column column) {
            addCriterion(new StringBuilder("delivery > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeliveryGreaterThanOrEqualTo(String value) {
            addCriterion("delivery >=", value, "delivery");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_electronic
         *
         * @mbg.generated
         */
        public Criteria andDeliveryGreaterThanOrEqualToColumn(LitemallQuoteElectronic.Column column) {
            addCriterion(new StringBuilder("delivery >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeliveryLessThan(String value) {
            addCriterion("delivery <", value, "delivery");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_electronic
         *
         * @mbg.generated
         */
        public Criteria andDeliveryLessThanColumn(LitemallQuoteElectronic.Column column) {
            addCriterion(new StringBuilder("delivery < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeliveryLessThanOrEqualTo(String value) {
            addCriterion("delivery <=", value, "delivery");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_electronic
         *
         * @mbg.generated
         */
        public Criteria andDeliveryLessThanOrEqualToColumn(LitemallQuoteElectronic.Column column) {
            addCriterion(new StringBuilder("delivery <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeliveryLike(String value) {
            addCriterion("delivery like", value, "delivery");
            return (Criteria) this;
        }

        public Criteria andDeliveryNotLike(String value) {
            addCriterion("delivery not like", value, "delivery");
            return (Criteria) this;
        }

        public Criteria andDeliveryIn(List<String> values) {
            addCriterion("delivery in", values, "delivery");
            return (Criteria) this;
        }

        public Criteria andDeliveryNotIn(List<String> values) {
            addCriterion("delivery not in", values, "delivery");
            return (Criteria) this;
        }

        public Criteria andDeliveryBetween(String value1, String value2) {
            addCriterion("delivery between", value1, value2, "delivery");
            return (Criteria) this;
        }

        public Criteria andDeliveryNotBetween(String value1, String value2) {
            addCriterion("delivery not between", value1, value2, "delivery");
            return (Criteria) this;
        }

        public Criteria andMoqIsNull() {
            addCriterion("moq is null");
            return (Criteria) this;
        }

        public Criteria andMoqIsNotNull() {
            addCriterion("moq is not null");
            return (Criteria) this;
        }

        public Criteria andMoqEqualTo(String value) {
            addCriterion("moq =", value, "moq");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_electronic
         *
         * @mbg.generated
         */
        public Criteria andMoqEqualToColumn(LitemallQuoteElectronic.Column column) {
            addCriterion(new StringBuilder("moq = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMoqNotEqualTo(String value) {
            addCriterion("moq <>", value, "moq");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_electronic
         *
         * @mbg.generated
         */
        public Criteria andMoqNotEqualToColumn(LitemallQuoteElectronic.Column column) {
            addCriterion(new StringBuilder("moq <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMoqGreaterThan(String value) {
            addCriterion("moq >", value, "moq");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_electronic
         *
         * @mbg.generated
         */
        public Criteria andMoqGreaterThanColumn(LitemallQuoteElectronic.Column column) {
            addCriterion(new StringBuilder("moq > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMoqGreaterThanOrEqualTo(String value) {
            addCriterion("moq >=", value, "moq");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_electronic
         *
         * @mbg.generated
         */
        public Criteria andMoqGreaterThanOrEqualToColumn(LitemallQuoteElectronic.Column column) {
            addCriterion(new StringBuilder("moq >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMoqLessThan(String value) {
            addCriterion("moq <", value, "moq");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_electronic
         *
         * @mbg.generated
         */
        public Criteria andMoqLessThanColumn(LitemallQuoteElectronic.Column column) {
            addCriterion(new StringBuilder("moq < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMoqLessThanOrEqualTo(String value) {
            addCriterion("moq <=", value, "moq");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_electronic
         *
         * @mbg.generated
         */
        public Criteria andMoqLessThanOrEqualToColumn(LitemallQuoteElectronic.Column column) {
            addCriterion(new StringBuilder("moq <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMoqLike(String value) {
            addCriterion("moq like", value, "moq");
            return (Criteria) this;
        }

        public Criteria andMoqNotLike(String value) {
            addCriterion("moq not like", value, "moq");
            return (Criteria) this;
        }

        public Criteria andMoqIn(List<String> values) {
            addCriterion("moq in", values, "moq");
            return (Criteria) this;
        }

        public Criteria andMoqNotIn(List<String> values) {
            addCriterion("moq not in", values, "moq");
            return (Criteria) this;
        }

        public Criteria andMoqBetween(String value1, String value2) {
            addCriterion("moq between", value1, value2, "moq");
            return (Criteria) this;
        }

        public Criteria andMoqNotBetween(String value1, String value2) {
            addCriterion("moq not between", value1, value2, "moq");
            return (Criteria) this;
        }

        public Criteria andMpqIsNull() {
            addCriterion("mpq is null");
            return (Criteria) this;
        }

        public Criteria andMpqIsNotNull() {
            addCriterion("mpq is not null");
            return (Criteria) this;
        }

        public Criteria andMpqEqualTo(String value) {
            addCriterion("mpq =", value, "mpq");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_electronic
         *
         * @mbg.generated
         */
        public Criteria andMpqEqualToColumn(LitemallQuoteElectronic.Column column) {
            addCriterion(new StringBuilder("mpq = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMpqNotEqualTo(String value) {
            addCriterion("mpq <>", value, "mpq");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_electronic
         *
         * @mbg.generated
         */
        public Criteria andMpqNotEqualToColumn(LitemallQuoteElectronic.Column column) {
            addCriterion(new StringBuilder("mpq <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMpqGreaterThan(String value) {
            addCriterion("mpq >", value, "mpq");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_electronic
         *
         * @mbg.generated
         */
        public Criteria andMpqGreaterThanColumn(LitemallQuoteElectronic.Column column) {
            addCriterion(new StringBuilder("mpq > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMpqGreaterThanOrEqualTo(String value) {
            addCriterion("mpq >=", value, "mpq");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_electronic
         *
         * @mbg.generated
         */
        public Criteria andMpqGreaterThanOrEqualToColumn(LitemallQuoteElectronic.Column column) {
            addCriterion(new StringBuilder("mpq >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMpqLessThan(String value) {
            addCriterion("mpq <", value, "mpq");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_electronic
         *
         * @mbg.generated
         */
        public Criteria andMpqLessThanColumn(LitemallQuoteElectronic.Column column) {
            addCriterion(new StringBuilder("mpq < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMpqLessThanOrEqualTo(String value) {
            addCriterion("mpq <=", value, "mpq");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_electronic
         *
         * @mbg.generated
         */
        public Criteria andMpqLessThanOrEqualToColumn(LitemallQuoteElectronic.Column column) {
            addCriterion(new StringBuilder("mpq <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMpqLike(String value) {
            addCriterion("mpq like", value, "mpq");
            return (Criteria) this;
        }

        public Criteria andMpqNotLike(String value) {
            addCriterion("mpq not like", value, "mpq");
            return (Criteria) this;
        }

        public Criteria andMpqIn(List<String> values) {
            addCriterion("mpq in", values, "mpq");
            return (Criteria) this;
        }

        public Criteria andMpqNotIn(List<String> values) {
            addCriterion("mpq not in", values, "mpq");
            return (Criteria) this;
        }

        public Criteria andMpqBetween(String value1, String value2) {
            addCriterion("mpq between", value1, value2, "mpq");
            return (Criteria) this;
        }

        public Criteria andMpqNotBetween(String value1, String value2) {
            addCriterion("mpq not between", value1, value2, "mpq");
            return (Criteria) this;
        }

        public Criteria andPackageSizeIsNull() {
            addCriterion("package_size is null");
            return (Criteria) this;
        }

        public Criteria andPackageSizeIsNotNull() {
            addCriterion("package_size is not null");
            return (Criteria) this;
        }

        public Criteria andPackageSizeEqualTo(String value) {
            addCriterion("package_size =", value, "packageSize");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_electronic
         *
         * @mbg.generated
         */
        public Criteria andPackageSizeEqualToColumn(LitemallQuoteElectronic.Column column) {
            addCriterion(new StringBuilder("package_size = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPackageSizeNotEqualTo(String value) {
            addCriterion("package_size <>", value, "packageSize");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_electronic
         *
         * @mbg.generated
         */
        public Criteria andPackageSizeNotEqualToColumn(LitemallQuoteElectronic.Column column) {
            addCriterion(new StringBuilder("package_size <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPackageSizeGreaterThan(String value) {
            addCriterion("package_size >", value, "packageSize");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_electronic
         *
         * @mbg.generated
         */
        public Criteria andPackageSizeGreaterThanColumn(LitemallQuoteElectronic.Column column) {
            addCriterion(new StringBuilder("package_size > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPackageSizeGreaterThanOrEqualTo(String value) {
            addCriterion("package_size >=", value, "packageSize");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_electronic
         *
         * @mbg.generated
         */
        public Criteria andPackageSizeGreaterThanOrEqualToColumn(LitemallQuoteElectronic.Column column) {
            addCriterion(new StringBuilder("package_size >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPackageSizeLessThan(String value) {
            addCriterion("package_size <", value, "packageSize");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_electronic
         *
         * @mbg.generated
         */
        public Criteria andPackageSizeLessThanColumn(LitemallQuoteElectronic.Column column) {
            addCriterion(new StringBuilder("package_size < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPackageSizeLessThanOrEqualTo(String value) {
            addCriterion("package_size <=", value, "packageSize");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_electronic
         *
         * @mbg.generated
         */
        public Criteria andPackageSizeLessThanOrEqualToColumn(LitemallQuoteElectronic.Column column) {
            addCriterion(new StringBuilder("package_size <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPackageSizeLike(String value) {
            addCriterion("package_size like", value, "packageSize");
            return (Criteria) this;
        }

        public Criteria andPackageSizeNotLike(String value) {
            addCriterion("package_size not like", value, "packageSize");
            return (Criteria) this;
        }

        public Criteria andPackageSizeIn(List<String> values) {
            addCriterion("package_size in", values, "packageSize");
            return (Criteria) this;
        }

        public Criteria andPackageSizeNotIn(List<String> values) {
            addCriterion("package_size not in", values, "packageSize");
            return (Criteria) this;
        }

        public Criteria andPackageSizeBetween(String value1, String value2) {
            addCriterion("package_size between", value1, value2, "packageSize");
            return (Criteria) this;
        }

        public Criteria andPackageSizeNotBetween(String value1, String value2) {
            addCriterion("package_size not between", value1, value2, "packageSize");
            return (Criteria) this;
        }

        public Criteria andBrandIsNull() {
            addCriterion("brand is null");
            return (Criteria) this;
        }

        public Criteria andBrandIsNotNull() {
            addCriterion("brand is not null");
            return (Criteria) this;
        }

        public Criteria andBrandEqualTo(String value) {
            addCriterion("brand =", value, "brand");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_electronic
         *
         * @mbg.generated
         */
        public Criteria andBrandEqualToColumn(LitemallQuoteElectronic.Column column) {
            addCriterion(new StringBuilder("brand = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBrandNotEqualTo(String value) {
            addCriterion("brand <>", value, "brand");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_electronic
         *
         * @mbg.generated
         */
        public Criteria andBrandNotEqualToColumn(LitemallQuoteElectronic.Column column) {
            addCriterion(new StringBuilder("brand <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBrandGreaterThan(String value) {
            addCriterion("brand >", value, "brand");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_electronic
         *
         * @mbg.generated
         */
        public Criteria andBrandGreaterThanColumn(LitemallQuoteElectronic.Column column) {
            addCriterion(new StringBuilder("brand > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBrandGreaterThanOrEqualTo(String value) {
            addCriterion("brand >=", value, "brand");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_electronic
         *
         * @mbg.generated
         */
        public Criteria andBrandGreaterThanOrEqualToColumn(LitemallQuoteElectronic.Column column) {
            addCriterion(new StringBuilder("brand >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBrandLessThan(String value) {
            addCriterion("brand <", value, "brand");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_electronic
         *
         * @mbg.generated
         */
        public Criteria andBrandLessThanColumn(LitemallQuoteElectronic.Column column) {
            addCriterion(new StringBuilder("brand < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBrandLessThanOrEqualTo(String value) {
            addCriterion("brand <=", value, "brand");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_electronic
         *
         * @mbg.generated
         */
        public Criteria andBrandLessThanOrEqualToColumn(LitemallQuoteElectronic.Column column) {
            addCriterion(new StringBuilder("brand <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBrandLike(String value) {
            addCriterion("brand like", value, "brand");
            return (Criteria) this;
        }

        public Criteria andBrandNotLike(String value) {
            addCriterion("brand not like", value, "brand");
            return (Criteria) this;
        }

        public Criteria andBrandIn(List<String> values) {
            addCriterion("brand in", values, "brand");
            return (Criteria) this;
        }

        public Criteria andBrandNotIn(List<String> values) {
            addCriterion("brand not in", values, "brand");
            return (Criteria) this;
        }

        public Criteria andBrandBetween(String value1, String value2) {
            addCriterion("brand between", value1, value2, "brand");
            return (Criteria) this;
        }

        public Criteria andBrandNotBetween(String value1, String value2) {
            addCriterion("brand not between", value1, value2, "brand");
            return (Criteria) this;
        }

        public Criteria andCertificateIsNull() {
            addCriterion("certificate is null");
            return (Criteria) this;
        }

        public Criteria andCertificateIsNotNull() {
            addCriterion("certificate is not null");
            return (Criteria) this;
        }

        public Criteria andCertificateEqualTo(String value) {
            addCriterion("certificate =", value, "certificate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_electronic
         *
         * @mbg.generated
         */
        public Criteria andCertificateEqualToColumn(LitemallQuoteElectronic.Column column) {
            addCriterion(new StringBuilder("certificate = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCertificateNotEqualTo(String value) {
            addCriterion("certificate <>", value, "certificate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_electronic
         *
         * @mbg.generated
         */
        public Criteria andCertificateNotEqualToColumn(LitemallQuoteElectronic.Column column) {
            addCriterion(new StringBuilder("certificate <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCertificateGreaterThan(String value) {
            addCriterion("certificate >", value, "certificate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_electronic
         *
         * @mbg.generated
         */
        public Criteria andCertificateGreaterThanColumn(LitemallQuoteElectronic.Column column) {
            addCriterion(new StringBuilder("certificate > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCertificateGreaterThanOrEqualTo(String value) {
            addCriterion("certificate >=", value, "certificate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_electronic
         *
         * @mbg.generated
         */
        public Criteria andCertificateGreaterThanOrEqualToColumn(LitemallQuoteElectronic.Column column) {
            addCriterion(new StringBuilder("certificate >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCertificateLessThan(String value) {
            addCriterion("certificate <", value, "certificate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_electronic
         *
         * @mbg.generated
         */
        public Criteria andCertificateLessThanColumn(LitemallQuoteElectronic.Column column) {
            addCriterion(new StringBuilder("certificate < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCertificateLessThanOrEqualTo(String value) {
            addCriterion("certificate <=", value, "certificate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_electronic
         *
         * @mbg.generated
         */
        public Criteria andCertificateLessThanOrEqualToColumn(LitemallQuoteElectronic.Column column) {
            addCriterion(new StringBuilder("certificate <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCertificateLike(String value) {
            addCriterion("certificate like", value, "certificate");
            return (Criteria) this;
        }

        public Criteria andCertificateNotLike(String value) {
            addCriterion("certificate not like", value, "certificate");
            return (Criteria) this;
        }

        public Criteria andCertificateIn(List<String> values) {
            addCriterion("certificate in", values, "certificate");
            return (Criteria) this;
        }

        public Criteria andCertificateNotIn(List<String> values) {
            addCriterion("certificate not in", values, "certificate");
            return (Criteria) this;
        }

        public Criteria andCertificateBetween(String value1, String value2) {
            addCriterion("certificate between", value1, value2, "certificate");
            return (Criteria) this;
        }

        public Criteria andCertificateNotBetween(String value1, String value2) {
            addCriterion("certificate not between", value1, value2, "certificate");
            return (Criteria) this;
        }

        public Criteria andStatusIsNull() {
            addCriterion("`status` is null");
            return (Criteria) this;
        }

        public Criteria andStatusIsNotNull() {
            addCriterion("`status` is not null");
            return (Criteria) this;
        }

        public Criteria andStatusEqualTo(Short value) {
            addCriterion("`status` =", value, "status");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_electronic
         *
         * @mbg.generated
         */
        public Criteria andStatusEqualToColumn(LitemallQuoteElectronic.Column column) {
            addCriterion(new StringBuilder("`status` = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStatusNotEqualTo(Short value) {
            addCriterion("`status` <>", value, "status");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_electronic
         *
         * @mbg.generated
         */
        public Criteria andStatusNotEqualToColumn(LitemallQuoteElectronic.Column column) {
            addCriterion(new StringBuilder("`status` <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStatusGreaterThan(Short value) {
            addCriterion("`status` >", value, "status");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_electronic
         *
         * @mbg.generated
         */
        public Criteria andStatusGreaterThanColumn(LitemallQuoteElectronic.Column column) {
            addCriterion(new StringBuilder("`status` > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStatusGreaterThanOrEqualTo(Short value) {
            addCriterion("`status` >=", value, "status");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_electronic
         *
         * @mbg.generated
         */
        public Criteria andStatusGreaterThanOrEqualToColumn(LitemallQuoteElectronic.Column column) {
            addCriterion(new StringBuilder("`status` >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStatusLessThan(Short value) {
            addCriterion("`status` <", value, "status");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_electronic
         *
         * @mbg.generated
         */
        public Criteria andStatusLessThanColumn(LitemallQuoteElectronic.Column column) {
            addCriterion(new StringBuilder("`status` < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStatusLessThanOrEqualTo(Short value) {
            addCriterion("`status` <=", value, "status");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_electronic
         *
         * @mbg.generated
         */
        public Criteria andStatusLessThanOrEqualToColumn(LitemallQuoteElectronic.Column column) {
            addCriterion(new StringBuilder("`status` <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStatusIn(List<Short> values) {
            addCriterion("`status` in", values, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotIn(List<Short> values) {
            addCriterion("`status` not in", values, "status");
            return (Criteria) this;
        }

        public Criteria andStatusBetween(Short value1, Short value2) {
            addCriterion("`status` between", value1, value2, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotBetween(Short value1, Short value2) {
            addCriterion("`status` not between", value1, value2, "status");
            return (Criteria) this;
        }

        public Criteria andNoteIsNull() {
            addCriterion("note is null");
            return (Criteria) this;
        }

        public Criteria andNoteIsNotNull() {
            addCriterion("note is not null");
            return (Criteria) this;
        }

        public Criteria andNoteEqualTo(String value) {
            addCriterion("note =", value, "note");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_electronic
         *
         * @mbg.generated
         */
        public Criteria andNoteEqualToColumn(LitemallQuoteElectronic.Column column) {
            addCriterion(new StringBuilder("note = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNoteNotEqualTo(String value) {
            addCriterion("note <>", value, "note");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_electronic
         *
         * @mbg.generated
         */
        public Criteria andNoteNotEqualToColumn(LitemallQuoteElectronic.Column column) {
            addCriterion(new StringBuilder("note <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNoteGreaterThan(String value) {
            addCriterion("note >", value, "note");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_electronic
         *
         * @mbg.generated
         */
        public Criteria andNoteGreaterThanColumn(LitemallQuoteElectronic.Column column) {
            addCriterion(new StringBuilder("note > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNoteGreaterThanOrEqualTo(String value) {
            addCriterion("note >=", value, "note");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_electronic
         *
         * @mbg.generated
         */
        public Criteria andNoteGreaterThanOrEqualToColumn(LitemallQuoteElectronic.Column column) {
            addCriterion(new StringBuilder("note >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNoteLessThan(String value) {
            addCriterion("note <", value, "note");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_electronic
         *
         * @mbg.generated
         */
        public Criteria andNoteLessThanColumn(LitemallQuoteElectronic.Column column) {
            addCriterion(new StringBuilder("note < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNoteLessThanOrEqualTo(String value) {
            addCriterion("note <=", value, "note");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_electronic
         *
         * @mbg.generated
         */
        public Criteria andNoteLessThanOrEqualToColumn(LitemallQuoteElectronic.Column column) {
            addCriterion(new StringBuilder("note <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNoteLike(String value) {
            addCriterion("note like", value, "note");
            return (Criteria) this;
        }

        public Criteria andNoteNotLike(String value) {
            addCriterion("note not like", value, "note");
            return (Criteria) this;
        }

        public Criteria andNoteIn(List<String> values) {
            addCriterion("note in", values, "note");
            return (Criteria) this;
        }

        public Criteria andNoteNotIn(List<String> values) {
            addCriterion("note not in", values, "note");
            return (Criteria) this;
        }

        public Criteria andNoteBetween(String value1, String value2) {
            addCriterion("note between", value1, value2, "note");
            return (Criteria) this;
        }

        public Criteria andNoteNotBetween(String value1, String value2) {
            addCriterion("note not between", value1, value2, "note");
            return (Criteria) this;
        }

        public Criteria andAddTimeIsNull() {
            addCriterion("add_time is null");
            return (Criteria) this;
        }

        public Criteria andAddTimeIsNotNull() {
            addCriterion("add_time is not null");
            return (Criteria) this;
        }

        public Criteria andAddTimeEqualTo(LocalDateTime value) {
            addCriterion("add_time =", value, "addTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_electronic
         *
         * @mbg.generated
         */
        public Criteria andAddTimeEqualToColumn(LitemallQuoteElectronic.Column column) {
            addCriterion(new StringBuilder("add_time = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddTimeNotEqualTo(LocalDateTime value) {
            addCriterion("add_time <>", value, "addTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_electronic
         *
         * @mbg.generated
         */
        public Criteria andAddTimeNotEqualToColumn(LitemallQuoteElectronic.Column column) {
            addCriterion(new StringBuilder("add_time <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddTimeGreaterThan(LocalDateTime value) {
            addCriterion("add_time >", value, "addTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_electronic
         *
         * @mbg.generated
         */
        public Criteria andAddTimeGreaterThanColumn(LitemallQuoteElectronic.Column column) {
            addCriterion(new StringBuilder("add_time > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddTimeGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("add_time >=", value, "addTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_electronic
         *
         * @mbg.generated
         */
        public Criteria andAddTimeGreaterThanOrEqualToColumn(LitemallQuoteElectronic.Column column) {
            addCriterion(new StringBuilder("add_time >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddTimeLessThan(LocalDateTime value) {
            addCriterion("add_time <", value, "addTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_electronic
         *
         * @mbg.generated
         */
        public Criteria andAddTimeLessThanColumn(LitemallQuoteElectronic.Column column) {
            addCriterion(new StringBuilder("add_time < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddTimeLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("add_time <=", value, "addTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_electronic
         *
         * @mbg.generated
         */
        public Criteria andAddTimeLessThanOrEqualToColumn(LitemallQuoteElectronic.Column column) {
            addCriterion(new StringBuilder("add_time <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddTimeIn(List<LocalDateTime> values) {
            addCriterion("add_time in", values, "addTime");
            return (Criteria) this;
        }

        public Criteria andAddTimeNotIn(List<LocalDateTime> values) {
            addCriterion("add_time not in", values, "addTime");
            return (Criteria) this;
        }

        public Criteria andAddTimeBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("add_time between", value1, value2, "addTime");
            return (Criteria) this;
        }

        public Criteria andAddTimeNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("add_time not between", value1, value2, "addTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIsNull() {
            addCriterion("update_time is null");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIsNotNull() {
            addCriterion("update_time is not null");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeEqualTo(LocalDateTime value) {
            addCriterion("update_time =", value, "updateTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_electronic
         *
         * @mbg.generated
         */
        public Criteria andUpdateTimeEqualToColumn(LitemallQuoteElectronic.Column column) {
            addCriterion(new StringBuilder("update_time = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotEqualTo(LocalDateTime value) {
            addCriterion("update_time <>", value, "updateTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_electronic
         *
         * @mbg.generated
         */
        public Criteria andUpdateTimeNotEqualToColumn(LitemallQuoteElectronic.Column column) {
            addCriterion(new StringBuilder("update_time <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeGreaterThan(LocalDateTime value) {
            addCriterion("update_time >", value, "updateTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_electronic
         *
         * @mbg.generated
         */
        public Criteria andUpdateTimeGreaterThanColumn(LitemallQuoteElectronic.Column column) {
            addCriterion(new StringBuilder("update_time > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("update_time >=", value, "updateTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_electronic
         *
         * @mbg.generated
         */
        public Criteria andUpdateTimeGreaterThanOrEqualToColumn(LitemallQuoteElectronic.Column column) {
            addCriterion(new StringBuilder("update_time >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeLessThan(LocalDateTime value) {
            addCriterion("update_time <", value, "updateTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_electronic
         *
         * @mbg.generated
         */
        public Criteria andUpdateTimeLessThanColumn(LitemallQuoteElectronic.Column column) {
            addCriterion(new StringBuilder("update_time < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("update_time <=", value, "updateTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_electronic
         *
         * @mbg.generated
         */
        public Criteria andUpdateTimeLessThanOrEqualToColumn(LitemallQuoteElectronic.Column column) {
            addCriterion(new StringBuilder("update_time <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIn(List<LocalDateTime> values) {
            addCriterion("update_time in", values, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotIn(List<LocalDateTime> values) {
            addCriterion("update_time not in", values, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("update_time between", value1, value2, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("update_time not between", value1, value2, "updateTime");
            return (Criteria) this;
        }

        public Criteria andDeletedIsNull() {
            addCriterion("deleted is null");
            return (Criteria) this;
        }

        public Criteria andDeletedIsNotNull() {
            addCriterion("deleted is not null");
            return (Criteria) this;
        }

        public Criteria andDeletedEqualTo(Boolean value) {
            addCriterion("deleted =", value, "deleted");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_electronic
         *
         * @mbg.generated
         */
        public Criteria andDeletedEqualToColumn(LitemallQuoteElectronic.Column column) {
            addCriterion(new StringBuilder("deleted = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeletedNotEqualTo(Boolean value) {
            addCriterion("deleted <>", value, "deleted");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_electronic
         *
         * @mbg.generated
         */
        public Criteria andDeletedNotEqualToColumn(LitemallQuoteElectronic.Column column) {
            addCriterion(new StringBuilder("deleted <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeletedGreaterThan(Boolean value) {
            addCriterion("deleted >", value, "deleted");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_electronic
         *
         * @mbg.generated
         */
        public Criteria andDeletedGreaterThanColumn(LitemallQuoteElectronic.Column column) {
            addCriterion(new StringBuilder("deleted > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeletedGreaterThanOrEqualTo(Boolean value) {
            addCriterion("deleted >=", value, "deleted");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_electronic
         *
         * @mbg.generated
         */
        public Criteria andDeletedGreaterThanOrEqualToColumn(LitemallQuoteElectronic.Column column) {
            addCriterion(new StringBuilder("deleted >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeletedLessThan(Boolean value) {
            addCriterion("deleted <", value, "deleted");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_electronic
         *
         * @mbg.generated
         */
        public Criteria andDeletedLessThanColumn(LitemallQuoteElectronic.Column column) {
            addCriterion(new StringBuilder("deleted < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeletedLessThanOrEqualTo(Boolean value) {
            addCriterion("deleted <=", value, "deleted");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_electronic
         *
         * @mbg.generated
         */
        public Criteria andDeletedLessThanOrEqualToColumn(LitemallQuoteElectronic.Column column) {
            addCriterion(new StringBuilder("deleted <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeletedIn(List<Boolean> values) {
            addCriterion("deleted in", values, "deleted");
            return (Criteria) this;
        }

        public Criteria andDeletedNotIn(List<Boolean> values) {
            addCriterion("deleted not in", values, "deleted");
            return (Criteria) this;
        }

        public Criteria andDeletedBetween(Boolean value1, Boolean value2) {
            addCriterion("deleted between", value1, value2, "deleted");
            return (Criteria) this;
        }

        public Criteria andDeletedNotBetween(Boolean value1, Boolean value2) {
            addCriterion("deleted not between", value1, value2, "deleted");
            return (Criteria) this;
        }

        public Criteria andBillIdIsNull() {
            addCriterion("bill_id is null");
            return (Criteria) this;
        }

        public Criteria andBillIdIsNotNull() {
            addCriterion("bill_id is not null");
            return (Criteria) this;
        }

        public Criteria andBillIdEqualTo(Boolean value) {
            addCriterion("bill_id =", value, "billId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_electronic
         *
         * @mbg.generated
         */
        public Criteria andBillIdEqualToColumn(LitemallQuoteElectronic.Column column) {
            addCriterion(new StringBuilder("bill_id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBillIdNotEqualTo(Boolean value) {
            addCriterion("bill_id <>", value, "billId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_electronic
         *
         * @mbg.generated
         */
        public Criteria andBillIdNotEqualToColumn(LitemallQuoteElectronic.Column column) {
            addCriterion(new StringBuilder("bill_id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBillIdGreaterThan(Boolean value) {
            addCriterion("bill_id >", value, "billId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_electronic
         *
         * @mbg.generated
         */
        public Criteria andBillIdGreaterThanColumn(LitemallQuoteElectronic.Column column) {
            addCriterion(new StringBuilder("bill_id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBillIdGreaterThanOrEqualTo(Boolean value) {
            addCriterion("bill_id >=", value, "billId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_electronic
         *
         * @mbg.generated
         */
        public Criteria andBillIdGreaterThanOrEqualToColumn(LitemallQuoteElectronic.Column column) {
            addCriterion(new StringBuilder("bill_id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBillIdLessThan(Boolean value) {
            addCriterion("bill_id <", value, "billId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_electronic
         *
         * @mbg.generated
         */
        public Criteria andBillIdLessThanColumn(LitemallQuoteElectronic.Column column) {
            addCriterion(new StringBuilder("bill_id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBillIdLessThanOrEqualTo(Boolean value) {
            addCriterion("bill_id <=", value, "billId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_electronic
         *
         * @mbg.generated
         */
        public Criteria andBillIdLessThanOrEqualToColumn(LitemallQuoteElectronic.Column column) {
            addCriterion(new StringBuilder("bill_id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBillIdIn(List<Boolean> values) {
            addCriterion("bill_id in", values, "billId");
            return (Criteria) this;
        }

        public Criteria andBillIdNotIn(List<Boolean> values) {
            addCriterion("bill_id not in", values, "billId");
            return (Criteria) this;
        }

        public Criteria andBillIdBetween(Boolean value1, Boolean value2) {
            addCriterion("bill_id between", value1, value2, "billId");
            return (Criteria) this;
        }

        public Criteria andBillIdNotBetween(Boolean value1, Boolean value2) {
            addCriterion("bill_id not between", value1, value2, "billId");
            return (Criteria) this;
        }

        public Criteria andIsDutyIsNull() {
            addCriterion("is_duty is null");
            return (Criteria) this;
        }

        public Criteria andIsDutyIsNotNull() {
            addCriterion("is_duty is not null");
            return (Criteria) this;
        }

        public Criteria andIsDutyEqualTo(Boolean value) {
            addCriterion("is_duty =", value, "isDuty");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_electronic
         *
         * @mbg.generated
         */
        public Criteria andIsDutyEqualToColumn(LitemallQuoteElectronic.Column column) {
            addCriterion(new StringBuilder("is_duty = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIsDutyNotEqualTo(Boolean value) {
            addCriterion("is_duty <>", value, "isDuty");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_electronic
         *
         * @mbg.generated
         */
        public Criteria andIsDutyNotEqualToColumn(LitemallQuoteElectronic.Column column) {
            addCriterion(new StringBuilder("is_duty <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIsDutyGreaterThan(Boolean value) {
            addCriterion("is_duty >", value, "isDuty");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_electronic
         *
         * @mbg.generated
         */
        public Criteria andIsDutyGreaterThanColumn(LitemallQuoteElectronic.Column column) {
            addCriterion(new StringBuilder("is_duty > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIsDutyGreaterThanOrEqualTo(Boolean value) {
            addCriterion("is_duty >=", value, "isDuty");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_electronic
         *
         * @mbg.generated
         */
        public Criteria andIsDutyGreaterThanOrEqualToColumn(LitemallQuoteElectronic.Column column) {
            addCriterion(new StringBuilder("is_duty >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIsDutyLessThan(Boolean value) {
            addCriterion("is_duty <", value, "isDuty");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_electronic
         *
         * @mbg.generated
         */
        public Criteria andIsDutyLessThanColumn(LitemallQuoteElectronic.Column column) {
            addCriterion(new StringBuilder("is_duty < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIsDutyLessThanOrEqualTo(Boolean value) {
            addCriterion("is_duty <=", value, "isDuty");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_electronic
         *
         * @mbg.generated
         */
        public Criteria andIsDutyLessThanOrEqualToColumn(LitemallQuoteElectronic.Column column) {
            addCriterion(new StringBuilder("is_duty <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIsDutyIn(List<Boolean> values) {
            addCriterion("is_duty in", values, "isDuty");
            return (Criteria) this;
        }

        public Criteria andIsDutyNotIn(List<Boolean> values) {
            addCriterion("is_duty not in", values, "isDuty");
            return (Criteria) this;
        }

        public Criteria andIsDutyBetween(Boolean value1, Boolean value2) {
            addCriterion("is_duty between", value1, value2, "isDuty");
            return (Criteria) this;
        }

        public Criteria andIsDutyNotBetween(Boolean value1, Boolean value2) {
            addCriterion("is_duty not between", value1, value2, "isDuty");
            return (Criteria) this;
        }

        public Criteria andIsCeoIsNull() {
            addCriterion("is_ceo is null");
            return (Criteria) this;
        }

        public Criteria andIsCeoIsNotNull() {
            addCriterion("is_ceo is not null");
            return (Criteria) this;
        }

        public Criteria andIsCeoEqualTo(Boolean value) {
            addCriterion("is_ceo =", value, "isCeo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_electronic
         *
         * @mbg.generated
         */
        public Criteria andIsCeoEqualToColumn(LitemallQuoteElectronic.Column column) {
            addCriterion(new StringBuilder("is_ceo = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIsCeoNotEqualTo(Boolean value) {
            addCriterion("is_ceo <>", value, "isCeo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_electronic
         *
         * @mbg.generated
         */
        public Criteria andIsCeoNotEqualToColumn(LitemallQuoteElectronic.Column column) {
            addCriterion(new StringBuilder("is_ceo <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIsCeoGreaterThan(Boolean value) {
            addCriterion("is_ceo >", value, "isCeo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_electronic
         *
         * @mbg.generated
         */
        public Criteria andIsCeoGreaterThanColumn(LitemallQuoteElectronic.Column column) {
            addCriterion(new StringBuilder("is_ceo > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIsCeoGreaterThanOrEqualTo(Boolean value) {
            addCriterion("is_ceo >=", value, "isCeo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_electronic
         *
         * @mbg.generated
         */
        public Criteria andIsCeoGreaterThanOrEqualToColumn(LitemallQuoteElectronic.Column column) {
            addCriterion(new StringBuilder("is_ceo >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIsCeoLessThan(Boolean value) {
            addCriterion("is_ceo <", value, "isCeo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_electronic
         *
         * @mbg.generated
         */
        public Criteria andIsCeoLessThanColumn(LitemallQuoteElectronic.Column column) {
            addCriterion(new StringBuilder("is_ceo < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIsCeoLessThanOrEqualTo(Boolean value) {
            addCriterion("is_ceo <=", value, "isCeo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_electronic
         *
         * @mbg.generated
         */
        public Criteria andIsCeoLessThanOrEqualToColumn(LitemallQuoteElectronic.Column column) {
            addCriterion(new StringBuilder("is_ceo <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIsCeoIn(List<Boolean> values) {
            addCriterion("is_ceo in", values, "isCeo");
            return (Criteria) this;
        }

        public Criteria andIsCeoNotIn(List<Boolean> values) {
            addCriterion("is_ceo not in", values, "isCeo");
            return (Criteria) this;
        }

        public Criteria andIsCeoBetween(Boolean value1, Boolean value2) {
            addCriterion("is_ceo between", value1, value2, "isCeo");
            return (Criteria) this;
        }

        public Criteria andIsCeoNotBetween(Boolean value1, Boolean value2) {
            addCriterion("is_ceo not between", value1, value2, "isCeo");
            return (Criteria) this;
        }

        public Criteria andIsRecheckIsNull() {
            addCriterion("is_recheck is null");
            return (Criteria) this;
        }

        public Criteria andIsRecheckIsNotNull() {
            addCriterion("is_recheck is not null");
            return (Criteria) this;
        }

        public Criteria andIsRecheckEqualTo(Boolean value) {
            addCriterion("is_recheck =", value, "isRecheck");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_electronic
         *
         * @mbg.generated
         */
        public Criteria andIsRecheckEqualToColumn(LitemallQuoteElectronic.Column column) {
            addCriterion(new StringBuilder("is_recheck = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIsRecheckNotEqualTo(Boolean value) {
            addCriterion("is_recheck <>", value, "isRecheck");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_electronic
         *
         * @mbg.generated
         */
        public Criteria andIsRecheckNotEqualToColumn(LitemallQuoteElectronic.Column column) {
            addCriterion(new StringBuilder("is_recheck <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIsRecheckGreaterThan(Boolean value) {
            addCriterion("is_recheck >", value, "isRecheck");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_electronic
         *
         * @mbg.generated
         */
        public Criteria andIsRecheckGreaterThanColumn(LitemallQuoteElectronic.Column column) {
            addCriterion(new StringBuilder("is_recheck > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIsRecheckGreaterThanOrEqualTo(Boolean value) {
            addCriterion("is_recheck >=", value, "isRecheck");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_electronic
         *
         * @mbg.generated
         */
        public Criteria andIsRecheckGreaterThanOrEqualToColumn(LitemallQuoteElectronic.Column column) {
            addCriterion(new StringBuilder("is_recheck >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIsRecheckLessThan(Boolean value) {
            addCriterion("is_recheck <", value, "isRecheck");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_electronic
         *
         * @mbg.generated
         */
        public Criteria andIsRecheckLessThanColumn(LitemallQuoteElectronic.Column column) {
            addCriterion(new StringBuilder("is_recheck < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIsRecheckLessThanOrEqualTo(Boolean value) {
            addCriterion("is_recheck <=", value, "isRecheck");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_electronic
         *
         * @mbg.generated
         */
        public Criteria andIsRecheckLessThanOrEqualToColumn(LitemallQuoteElectronic.Column column) {
            addCriterion(new StringBuilder("is_recheck <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIsRecheckIn(List<Boolean> values) {
            addCriterion("is_recheck in", values, "isRecheck");
            return (Criteria) this;
        }

        public Criteria andIsRecheckNotIn(List<Boolean> values) {
            addCriterion("is_recheck not in", values, "isRecheck");
            return (Criteria) this;
        }

        public Criteria andIsRecheckBetween(Boolean value1, Boolean value2) {
            addCriterion("is_recheck between", value1, value2, "isRecheck");
            return (Criteria) this;
        }

        public Criteria andIsRecheckNotBetween(Boolean value1, Boolean value2) {
            addCriterion("is_recheck not between", value1, value2, "isRecheck");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table litemall_quote_electronic
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {
        /**
         * This field was generated by MyBatis Generator.
         * This field corresponds to the database table litemall_quote_electronic
         *
         * @mbg.generated
         */
        private LitemallQuoteElectronicExample example;

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_electronic
         *
         * @mbg.generated
         */
        protected Criteria(LitemallQuoteElectronicExample example) {
            super();
            this.example = example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_electronic
         *
         * @mbg.generated
         */
        public LitemallQuoteElectronicExample example() {
            return this.example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_electronic
         *
         * @mbg.generated
         */
        @Deprecated
        public Criteria andIf(boolean ifAdd, ICriteriaAdd add) {
            if (ifAdd) {
                add.add(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_electronic
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then) {
            if (condition) {
                then.criteria(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_electronic
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then, ICriteriaWhen otherwise) {
            if (condition) {
                then.criteria(this);
            } else {
                otherwise.criteria(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_electronic
         *
         * @mbg.generated
         */
        public Criteria andLogicalDeleted(boolean deleted) {
            return deleted ? andDeletedEqualTo(LitemallQuoteElectronic.Deleted.IS_DELETED.value()) : andDeletedNotEqualTo(LitemallQuoteElectronic.Deleted.IS_DELETED.value());
        }

        @Deprecated
        public interface ICriteriaAdd {
            /**
             * This method was generated by MyBatis Generator.
             * This method corresponds to the database table litemall_quote_electronic
             *
             * @mbg.generated
             */
            Criteria add(Criteria add);
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table litemall_quote_electronic
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }

    public interface ICriteriaWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_electronic
         *
         * @mbg.generated
         */
        void criteria(Criteria criteria);
    }

    public interface IExampleWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_electronic
         *
         * @mbg.generated
         */
        void example(org.linlinjava.litemall.db.domain.LitemallQuoteElectronicExample example);
    }
}