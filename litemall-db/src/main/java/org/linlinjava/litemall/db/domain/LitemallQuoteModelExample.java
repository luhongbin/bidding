package org.linlinjava.litemall.db.domain;

import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;

public class LitemallQuoteModelExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table litemall_quote_model
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table litemall_quote_model
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table litemall_quote_model
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_quote_model
     *
     * @mbg.generated
     */
    public LitemallQuoteModelExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_quote_model
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_quote_model
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_quote_model
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_quote_model
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_quote_model
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_quote_model
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_quote_model
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_quote_model
     *
     * @mbg.generated
     */
    public LitemallQuoteModelExample orderBy(String orderByClause) {
        this.setOrderByClause(orderByClause);
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_quote_model
     *
     * @mbg.generated
     */
    public LitemallQuoteModelExample orderBy(String ... orderByClauses) {
        StringBuffer sb = new StringBuffer();
        for (int i = 0; i < orderByClauses.length; i++) {
            sb.append(orderByClauses[i]);
            if (i < orderByClauses.length - 1) {
                sb.append(" , ");
            }
        }
        this.setOrderByClause(sb.toString());
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_quote_model
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_quote_model
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria(this);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_quote_model
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_quote_model
     *
     * @mbg.generated
     */
    public static Criteria newAndCreateCriteria() {
        LitemallQuoteModelExample example = new LitemallQuoteModelExample();
        return example.createCriteria();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_quote_model
     *
     * @mbg.generated
     */
    public LitemallQuoteModelExample when(boolean condition, IExampleWhen then) {
        if (condition) {
            then.example(this);
        }
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_quote_model
     *
     * @mbg.generated
     */
    public LitemallQuoteModelExample when(boolean condition, IExampleWhen then, IExampleWhen otherwise) {
        if (condition) {
            then.example(this);
        } else {
            otherwise.example(this);
        }
        return this;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table litemall_quote_model
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> codeCriteria;

        protected List<Criterion> approveCodeCriteria;

        protected List<Criterion> noticeCriteria;

        protected List<Criterion> allCriteria;

        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
            codeCriteria = new ArrayList<Criterion>();
            approveCodeCriteria = new ArrayList<Criterion>();
            noticeCriteria = new ArrayList<Criterion>();
        }

        public List<Criterion> getCodeCriteria() {
            return codeCriteria;
        }

        protected void addCodeCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            codeCriteria.add(new Criterion(condition, value, "org.linlinjava.litemall.db.mybatis.JsonIntegerArrayTypeHandler"));
            allCriteria = null;
        }

        protected void addCodeCriterion(String condition, Integer[] value1, Integer[] value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            codeCriteria.add(new Criterion(condition, value1, value2, "org.linlinjava.litemall.db.mybatis.JsonIntegerArrayTypeHandler"));
            allCriteria = null;
        }

        public List<Criterion> getApproveCodeCriteria() {
            return approveCodeCriteria;
        }

        protected void addApproveCodeCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            approveCodeCriteria.add(new Criterion(condition, value, "org.linlinjava.litemall.db.mybatis.JsonIntegerArrayTypeHandler"));
            allCriteria = null;
        }

        protected void addApproveCodeCriterion(String condition, Integer[] value1, Integer[] value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            approveCodeCriteria.add(new Criterion(condition, value1, value2, "org.linlinjava.litemall.db.mybatis.JsonIntegerArrayTypeHandler"));
            allCriteria = null;
        }

        public List<Criterion> getNoticeCriteria() {
            return noticeCriteria;
        }

        protected void addNoticeCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            noticeCriteria.add(new Criterion(condition, value, "org.linlinjava.litemall.db.mybatis.JsonIntegerArrayTypeHandler"));
            allCriteria = null;
        }

        protected void addNoticeCriterion(String condition, Integer[] value1, Integer[] value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            noticeCriteria.add(new Criterion(condition, value1, value2, "org.linlinjava.litemall.db.mybatis.JsonIntegerArrayTypeHandler"));
            allCriteria = null;
        }

        public boolean isValid() {
            return criteria.size() > 0
                || codeCriteria.size() > 0
                || approveCodeCriteria.size() > 0
                || noticeCriteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            if (allCriteria == null) {
                allCriteria = new ArrayList<Criterion>();
                allCriteria.addAll(criteria);
                allCriteria.addAll(codeCriteria);
                allCriteria.addAll(approveCodeCriteria);
                allCriteria.addAll(noticeCriteria);
            }
            return allCriteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
            allCriteria = null;
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
            allCriteria = null;
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
            allCriteria = null;
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_model
         *
         * @mbg.generated
         */
        public Criteria andIdEqualToColumn(LitemallQuoteModel.Column column) {
            addCriterion(new StringBuilder("id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_model
         *
         * @mbg.generated
         */
        public Criteria andIdNotEqualToColumn(LitemallQuoteModel.Column column) {
            addCriterion(new StringBuilder("id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_model
         *
         * @mbg.generated
         */
        public Criteria andIdGreaterThanColumn(LitemallQuoteModel.Column column) {
            addCriterion(new StringBuilder("id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_model
         *
         * @mbg.generated
         */
        public Criteria andIdGreaterThanOrEqualToColumn(LitemallQuoteModel.Column column) {
            addCriterion(new StringBuilder("id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_model
         *
         * @mbg.generated
         */
        public Criteria andIdLessThanColumn(LitemallQuoteModel.Column column) {
            addCriterion(new StringBuilder("id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_model
         *
         * @mbg.generated
         */
        public Criteria andIdLessThanOrEqualToColumn(LitemallQuoteModel.Column column) {
            addCriterion(new StringBuilder("id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andNameIsNull() {
            addCriterion("`name` is null");
            return (Criteria) this;
        }

        public Criteria andNameIsNotNull() {
            addCriterion("`name` is not null");
            return (Criteria) this;
        }

        public Criteria andNameEqualTo(String value) {
            addCriterion("`name` =", value, "name");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_model
         *
         * @mbg.generated
         */
        public Criteria andNameEqualToColumn(LitemallQuoteModel.Column column) {
            addCriterion(new StringBuilder("`name` = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNameNotEqualTo(String value) {
            addCriterion("`name` <>", value, "name");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_model
         *
         * @mbg.generated
         */
        public Criteria andNameNotEqualToColumn(LitemallQuoteModel.Column column) {
            addCriterion(new StringBuilder("`name` <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNameGreaterThan(String value) {
            addCriterion("`name` >", value, "name");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_model
         *
         * @mbg.generated
         */
        public Criteria andNameGreaterThanColumn(LitemallQuoteModel.Column column) {
            addCriterion(new StringBuilder("`name` > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNameGreaterThanOrEqualTo(String value) {
            addCriterion("`name` >=", value, "name");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_model
         *
         * @mbg.generated
         */
        public Criteria andNameGreaterThanOrEqualToColumn(LitemallQuoteModel.Column column) {
            addCriterion(new StringBuilder("`name` >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNameLessThan(String value) {
            addCriterion("`name` <", value, "name");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_model
         *
         * @mbg.generated
         */
        public Criteria andNameLessThanColumn(LitemallQuoteModel.Column column) {
            addCriterion(new StringBuilder("`name` < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNameLessThanOrEqualTo(String value) {
            addCriterion("`name` <=", value, "name");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_model
         *
         * @mbg.generated
         */
        public Criteria andNameLessThanOrEqualToColumn(LitemallQuoteModel.Column column) {
            addCriterion(new StringBuilder("`name` <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNameLike(String value) {
            addCriterion("`name` like", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotLike(String value) {
            addCriterion("`name` not like", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameIn(List<String> values) {
            addCriterion("`name` in", values, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotIn(List<String> values) {
            addCriterion("`name` not in", values, "name");
            return (Criteria) this;
        }

        public Criteria andNameBetween(String value1, String value2) {
            addCriterion("`name` between", value1, value2, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotBetween(String value1, String value2) {
            addCriterion("`name` not between", value1, value2, "name");
            return (Criteria) this;
        }

        public Criteria andVersionIsNull() {
            addCriterion("version is null");
            return (Criteria) this;
        }

        public Criteria andVersionIsNotNull() {
            addCriterion("version is not null");
            return (Criteria) this;
        }

        public Criteria andVersionEqualTo(String value) {
            addCriterion("version =", value, "version");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_model
         *
         * @mbg.generated
         */
        public Criteria andVersionEqualToColumn(LitemallQuoteModel.Column column) {
            addCriterion(new StringBuilder("version = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andVersionNotEqualTo(String value) {
            addCriterion("version <>", value, "version");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_model
         *
         * @mbg.generated
         */
        public Criteria andVersionNotEqualToColumn(LitemallQuoteModel.Column column) {
            addCriterion(new StringBuilder("version <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andVersionGreaterThan(String value) {
            addCriterion("version >", value, "version");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_model
         *
         * @mbg.generated
         */
        public Criteria andVersionGreaterThanColumn(LitemallQuoteModel.Column column) {
            addCriterion(new StringBuilder("version > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andVersionGreaterThanOrEqualTo(String value) {
            addCriterion("version >=", value, "version");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_model
         *
         * @mbg.generated
         */
        public Criteria andVersionGreaterThanOrEqualToColumn(LitemallQuoteModel.Column column) {
            addCriterion(new StringBuilder("version >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andVersionLessThan(String value) {
            addCriterion("version <", value, "version");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_model
         *
         * @mbg.generated
         */
        public Criteria andVersionLessThanColumn(LitemallQuoteModel.Column column) {
            addCriterion(new StringBuilder("version < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andVersionLessThanOrEqualTo(String value) {
            addCriterion("version <=", value, "version");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_model
         *
         * @mbg.generated
         */
        public Criteria andVersionLessThanOrEqualToColumn(LitemallQuoteModel.Column column) {
            addCriterion(new StringBuilder("version <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andVersionLike(String value) {
            addCriterion("version like", value, "version");
            return (Criteria) this;
        }

        public Criteria andVersionNotLike(String value) {
            addCriterion("version not like", value, "version");
            return (Criteria) this;
        }

        public Criteria andVersionIn(List<String> values) {
            addCriterion("version in", values, "version");
            return (Criteria) this;
        }

        public Criteria andVersionNotIn(List<String> values) {
            addCriterion("version not in", values, "version");
            return (Criteria) this;
        }

        public Criteria andVersionBetween(String value1, String value2) {
            addCriterion("version between", value1, value2, "version");
            return (Criteria) this;
        }

        public Criteria andVersionNotBetween(String value1, String value2) {
            addCriterion("version not between", value1, value2, "version");
            return (Criteria) this;
        }

        public Criteria andExcelIsNull() {
            addCriterion("excel is null");
            return (Criteria) this;
        }

        public Criteria andExcelIsNotNull() {
            addCriterion("excel is not null");
            return (Criteria) this;
        }

        public Criteria andExcelEqualTo(String value) {
            addCriterion("excel =", value, "excel");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_model
         *
         * @mbg.generated
         */
        public Criteria andExcelEqualToColumn(LitemallQuoteModel.Column column) {
            addCriterion(new StringBuilder("excel = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andExcelNotEqualTo(String value) {
            addCriterion("excel <>", value, "excel");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_model
         *
         * @mbg.generated
         */
        public Criteria andExcelNotEqualToColumn(LitemallQuoteModel.Column column) {
            addCriterion(new StringBuilder("excel <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andExcelGreaterThan(String value) {
            addCriterion("excel >", value, "excel");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_model
         *
         * @mbg.generated
         */
        public Criteria andExcelGreaterThanColumn(LitemallQuoteModel.Column column) {
            addCriterion(new StringBuilder("excel > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andExcelGreaterThanOrEqualTo(String value) {
            addCriterion("excel >=", value, "excel");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_model
         *
         * @mbg.generated
         */
        public Criteria andExcelGreaterThanOrEqualToColumn(LitemallQuoteModel.Column column) {
            addCriterion(new StringBuilder("excel >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andExcelLessThan(String value) {
            addCriterion("excel <", value, "excel");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_model
         *
         * @mbg.generated
         */
        public Criteria andExcelLessThanColumn(LitemallQuoteModel.Column column) {
            addCriterion(new StringBuilder("excel < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andExcelLessThanOrEqualTo(String value) {
            addCriterion("excel <=", value, "excel");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_model
         *
         * @mbg.generated
         */
        public Criteria andExcelLessThanOrEqualToColumn(LitemallQuoteModel.Column column) {
            addCriterion(new StringBuilder("excel <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andExcelLike(String value) {
            addCriterion("excel like", value, "excel");
            return (Criteria) this;
        }

        public Criteria andExcelNotLike(String value) {
            addCriterion("excel not like", value, "excel");
            return (Criteria) this;
        }

        public Criteria andExcelIn(List<String> values) {
            addCriterion("excel in", values, "excel");
            return (Criteria) this;
        }

        public Criteria andExcelNotIn(List<String> values) {
            addCriterion("excel not in", values, "excel");
            return (Criteria) this;
        }

        public Criteria andExcelBetween(String value1, String value2) {
            addCriterion("excel between", value1, value2, "excel");
            return (Criteria) this;
        }

        public Criteria andExcelNotBetween(String value1, String value2) {
            addCriterion("excel not between", value1, value2, "excel");
            return (Criteria) this;
        }

        public Criteria andDutyIsNull() {
            addCriterion("duty is null");
            return (Criteria) this;
        }

        public Criteria andDutyIsNotNull() {
            addCriterion("duty is not null");
            return (Criteria) this;
        }

        public Criteria andDutyEqualTo(Integer value) {
            addCriterion("duty =", value, "duty");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_model
         *
         * @mbg.generated
         */
        public Criteria andDutyEqualToColumn(LitemallQuoteModel.Column column) {
            addCriterion(new StringBuilder("duty = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDutyNotEqualTo(Integer value) {
            addCriterion("duty <>", value, "duty");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_model
         *
         * @mbg.generated
         */
        public Criteria andDutyNotEqualToColumn(LitemallQuoteModel.Column column) {
            addCriterion(new StringBuilder("duty <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDutyGreaterThan(Integer value) {
            addCriterion("duty >", value, "duty");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_model
         *
         * @mbg.generated
         */
        public Criteria andDutyGreaterThanColumn(LitemallQuoteModel.Column column) {
            addCriterion(new StringBuilder("duty > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDutyGreaterThanOrEqualTo(Integer value) {
            addCriterion("duty >=", value, "duty");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_model
         *
         * @mbg.generated
         */
        public Criteria andDutyGreaterThanOrEqualToColumn(LitemallQuoteModel.Column column) {
            addCriterion(new StringBuilder("duty >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDutyLessThan(Integer value) {
            addCriterion("duty <", value, "duty");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_model
         *
         * @mbg.generated
         */
        public Criteria andDutyLessThanColumn(LitemallQuoteModel.Column column) {
            addCriterion(new StringBuilder("duty < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDutyLessThanOrEqualTo(Integer value) {
            addCriterion("duty <=", value, "duty");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_model
         *
         * @mbg.generated
         */
        public Criteria andDutyLessThanOrEqualToColumn(LitemallQuoteModel.Column column) {
            addCriterion(new StringBuilder("duty <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDutyIn(List<Integer> values) {
            addCriterion("duty in", values, "duty");
            return (Criteria) this;
        }

        public Criteria andDutyNotIn(List<Integer> values) {
            addCriterion("duty not in", values, "duty");
            return (Criteria) this;
        }

        public Criteria andDutyBetween(Integer value1, Integer value2) {
            addCriterion("duty between", value1, value2, "duty");
            return (Criteria) this;
        }

        public Criteria andDutyNotBetween(Integer value1, Integer value2) {
            addCriterion("duty not between", value1, value2, "duty");
            return (Criteria) this;
        }

        public Criteria andCodeIsNull() {
            addCriterion("code is null");
            return (Criteria) this;
        }

        public Criteria andCodeIsNotNull() {
            addCriterion("code is not null");
            return (Criteria) this;
        }

        public Criteria andCodeEqualTo(Integer[] value) {
            addCodeCriterion("code =", value, "code");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_model
         *
         * @mbg.generated
         */
        public Criteria andCodeEqualToColumn(LitemallQuoteModel.Column column) {
            addCriterion(new StringBuilder("code = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCodeNotEqualTo(Integer[] value) {
            addCodeCriterion("code <>", value, "code");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_model
         *
         * @mbg.generated
         */
        public Criteria andCodeNotEqualToColumn(LitemallQuoteModel.Column column) {
            addCriterion(new StringBuilder("code <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCodeGreaterThan(Integer[] value) {
            addCodeCriterion("code >", value, "code");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_model
         *
         * @mbg.generated
         */
        public Criteria andCodeGreaterThanColumn(LitemallQuoteModel.Column column) {
            addCriterion(new StringBuilder("code > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCodeGreaterThanOrEqualTo(Integer[] value) {
            addCodeCriterion("code >=", value, "code");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_model
         *
         * @mbg.generated
         */
        public Criteria andCodeGreaterThanOrEqualToColumn(LitemallQuoteModel.Column column) {
            addCriterion(new StringBuilder("code >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCodeLessThan(Integer[] value) {
            addCodeCriterion("code <", value, "code");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_model
         *
         * @mbg.generated
         */
        public Criteria andCodeLessThanColumn(LitemallQuoteModel.Column column) {
            addCriterion(new StringBuilder("code < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCodeLessThanOrEqualTo(Integer[] value) {
            addCodeCriterion("code <=", value, "code");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_model
         *
         * @mbg.generated
         */
        public Criteria andCodeLessThanOrEqualToColumn(LitemallQuoteModel.Column column) {
            addCriterion(new StringBuilder("code <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCodeLike(Integer[] value) {
            addCodeCriterion("code like", value, "code");
            return (Criteria) this;
        }

        public Criteria andCodeNotLike(Integer[] value) {
            addCodeCriterion("code not like", value, "code");
            return (Criteria) this;
        }

        public Criteria andCodeIn(List<Integer[]> values) {
            addCodeCriterion("code in", values, "code");
            return (Criteria) this;
        }

        public Criteria andCodeNotIn(List<Integer[]> values) {
            addCodeCriterion("code not in", values, "code");
            return (Criteria) this;
        }

        public Criteria andCodeBetween(Integer[] value1, Integer[] value2) {
            addCodeCriterion("code between", value1, value2, "code");
            return (Criteria) this;
        }

        public Criteria andCodeNotBetween(Integer[] value1, Integer[] value2) {
            addCodeCriterion("code not between", value1, value2, "code");
            return (Criteria) this;
        }

        public Criteria andStatusIsNull() {
            addCriterion("`status` is null");
            return (Criteria) this;
        }

        public Criteria andStatusIsNotNull() {
            addCriterion("`status` is not null");
            return (Criteria) this;
        }

        public Criteria andStatusEqualTo(Integer value) {
            addCriterion("`status` =", value, "status");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_model
         *
         * @mbg.generated
         */
        public Criteria andStatusEqualToColumn(LitemallQuoteModel.Column column) {
            addCriterion(new StringBuilder("`status` = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStatusNotEqualTo(Integer value) {
            addCriterion("`status` <>", value, "status");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_model
         *
         * @mbg.generated
         */
        public Criteria andStatusNotEqualToColumn(LitemallQuoteModel.Column column) {
            addCriterion(new StringBuilder("`status` <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStatusGreaterThan(Integer value) {
            addCriterion("`status` >", value, "status");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_model
         *
         * @mbg.generated
         */
        public Criteria andStatusGreaterThanColumn(LitemallQuoteModel.Column column) {
            addCriterion(new StringBuilder("`status` > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStatusGreaterThanOrEqualTo(Integer value) {
            addCriterion("`status` >=", value, "status");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_model
         *
         * @mbg.generated
         */
        public Criteria andStatusGreaterThanOrEqualToColumn(LitemallQuoteModel.Column column) {
            addCriterion(new StringBuilder("`status` >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStatusLessThan(Integer value) {
            addCriterion("`status` <", value, "status");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_model
         *
         * @mbg.generated
         */
        public Criteria andStatusLessThanColumn(LitemallQuoteModel.Column column) {
            addCriterion(new StringBuilder("`status` < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStatusLessThanOrEqualTo(Integer value) {
            addCriterion("`status` <=", value, "status");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_model
         *
         * @mbg.generated
         */
        public Criteria andStatusLessThanOrEqualToColumn(LitemallQuoteModel.Column column) {
            addCriterion(new StringBuilder("`status` <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStatusIn(List<Integer> values) {
            addCriterion("`status` in", values, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotIn(List<Integer> values) {
            addCriterion("`status` not in", values, "status");
            return (Criteria) this;
        }

        public Criteria andStatusBetween(Integer value1, Integer value2) {
            addCriterion("`status` between", value1, value2, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotBetween(Integer value1, Integer value2) {
            addCriterion("`status` not between", value1, value2, "status");
            return (Criteria) this;
        }

        public Criteria andCreatorIsNull() {
            addCriterion("creator is null");
            return (Criteria) this;
        }

        public Criteria andCreatorIsNotNull() {
            addCriterion("creator is not null");
            return (Criteria) this;
        }

        public Criteria andCreatorEqualTo(Integer value) {
            addCriterion("creator =", value, "creator");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_model
         *
         * @mbg.generated
         */
        public Criteria andCreatorEqualToColumn(LitemallQuoteModel.Column column) {
            addCriterion(new StringBuilder("creator = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreatorNotEqualTo(Integer value) {
            addCriterion("creator <>", value, "creator");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_model
         *
         * @mbg.generated
         */
        public Criteria andCreatorNotEqualToColumn(LitemallQuoteModel.Column column) {
            addCriterion(new StringBuilder("creator <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreatorGreaterThan(Integer value) {
            addCriterion("creator >", value, "creator");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_model
         *
         * @mbg.generated
         */
        public Criteria andCreatorGreaterThanColumn(LitemallQuoteModel.Column column) {
            addCriterion(new StringBuilder("creator > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreatorGreaterThanOrEqualTo(Integer value) {
            addCriterion("creator >=", value, "creator");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_model
         *
         * @mbg.generated
         */
        public Criteria andCreatorGreaterThanOrEqualToColumn(LitemallQuoteModel.Column column) {
            addCriterion(new StringBuilder("creator >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreatorLessThan(Integer value) {
            addCriterion("creator <", value, "creator");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_model
         *
         * @mbg.generated
         */
        public Criteria andCreatorLessThanColumn(LitemallQuoteModel.Column column) {
            addCriterion(new StringBuilder("creator < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreatorLessThanOrEqualTo(Integer value) {
            addCriterion("creator <=", value, "creator");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_model
         *
         * @mbg.generated
         */
        public Criteria andCreatorLessThanOrEqualToColumn(LitemallQuoteModel.Column column) {
            addCriterion(new StringBuilder("creator <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreatorIn(List<Integer> values) {
            addCriterion("creator in", values, "creator");
            return (Criteria) this;
        }

        public Criteria andCreatorNotIn(List<Integer> values) {
            addCriterion("creator not in", values, "creator");
            return (Criteria) this;
        }

        public Criteria andCreatorBetween(Integer value1, Integer value2) {
            addCriterion("creator between", value1, value2, "creator");
            return (Criteria) this;
        }

        public Criteria andCreatorNotBetween(Integer value1, Integer value2) {
            addCriterion("creator not between", value1, value2, "creator");
            return (Criteria) this;
        }

        public Criteria andModifyIsNull() {
            addCriterion("`modify` is null");
            return (Criteria) this;
        }

        public Criteria andModifyIsNotNull() {
            addCriterion("`modify` is not null");
            return (Criteria) this;
        }

        public Criteria andModifyEqualTo(Integer value) {
            addCriterion("`modify` =", value, "modify");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_model
         *
         * @mbg.generated
         */
        public Criteria andModifyEqualToColumn(LitemallQuoteModel.Column column) {
            addCriterion(new StringBuilder("`modify` = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyNotEqualTo(Integer value) {
            addCriterion("`modify` <>", value, "modify");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_model
         *
         * @mbg.generated
         */
        public Criteria andModifyNotEqualToColumn(LitemallQuoteModel.Column column) {
            addCriterion(new StringBuilder("`modify` <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyGreaterThan(Integer value) {
            addCriterion("`modify` >", value, "modify");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_model
         *
         * @mbg.generated
         */
        public Criteria andModifyGreaterThanColumn(LitemallQuoteModel.Column column) {
            addCriterion(new StringBuilder("`modify` > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyGreaterThanOrEqualTo(Integer value) {
            addCriterion("`modify` >=", value, "modify");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_model
         *
         * @mbg.generated
         */
        public Criteria andModifyGreaterThanOrEqualToColumn(LitemallQuoteModel.Column column) {
            addCriterion(new StringBuilder("`modify` >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyLessThan(Integer value) {
            addCriterion("`modify` <", value, "modify");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_model
         *
         * @mbg.generated
         */
        public Criteria andModifyLessThanColumn(LitemallQuoteModel.Column column) {
            addCriterion(new StringBuilder("`modify` < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyLessThanOrEqualTo(Integer value) {
            addCriterion("`modify` <=", value, "modify");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_model
         *
         * @mbg.generated
         */
        public Criteria andModifyLessThanOrEqualToColumn(LitemallQuoteModel.Column column) {
            addCriterion(new StringBuilder("`modify` <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyIn(List<Integer> values) {
            addCriterion("`modify` in", values, "modify");
            return (Criteria) this;
        }

        public Criteria andModifyNotIn(List<Integer> values) {
            addCriterion("`modify` not in", values, "modify");
            return (Criteria) this;
        }

        public Criteria andModifyBetween(Integer value1, Integer value2) {
            addCriterion("`modify` between", value1, value2, "modify");
            return (Criteria) this;
        }

        public Criteria andModifyNotBetween(Integer value1, Integer value2) {
            addCriterion("`modify` not between", value1, value2, "modify");
            return (Criteria) this;
        }

        public Criteria andAddTimeIsNull() {
            addCriterion("add_time is null");
            return (Criteria) this;
        }

        public Criteria andAddTimeIsNotNull() {
            addCriterion("add_time is not null");
            return (Criteria) this;
        }

        public Criteria andAddTimeEqualTo(LocalDateTime value) {
            addCriterion("add_time =", value, "addTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_model
         *
         * @mbg.generated
         */
        public Criteria andAddTimeEqualToColumn(LitemallQuoteModel.Column column) {
            addCriterion(new StringBuilder("add_time = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddTimeNotEqualTo(LocalDateTime value) {
            addCriterion("add_time <>", value, "addTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_model
         *
         * @mbg.generated
         */
        public Criteria andAddTimeNotEqualToColumn(LitemallQuoteModel.Column column) {
            addCriterion(new StringBuilder("add_time <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddTimeGreaterThan(LocalDateTime value) {
            addCriterion("add_time >", value, "addTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_model
         *
         * @mbg.generated
         */
        public Criteria andAddTimeGreaterThanColumn(LitemallQuoteModel.Column column) {
            addCriterion(new StringBuilder("add_time > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddTimeGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("add_time >=", value, "addTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_model
         *
         * @mbg.generated
         */
        public Criteria andAddTimeGreaterThanOrEqualToColumn(LitemallQuoteModel.Column column) {
            addCriterion(new StringBuilder("add_time >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddTimeLessThan(LocalDateTime value) {
            addCriterion("add_time <", value, "addTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_model
         *
         * @mbg.generated
         */
        public Criteria andAddTimeLessThanColumn(LitemallQuoteModel.Column column) {
            addCriterion(new StringBuilder("add_time < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddTimeLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("add_time <=", value, "addTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_model
         *
         * @mbg.generated
         */
        public Criteria andAddTimeLessThanOrEqualToColumn(LitemallQuoteModel.Column column) {
            addCriterion(new StringBuilder("add_time <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddTimeIn(List<LocalDateTime> values) {
            addCriterion("add_time in", values, "addTime");
            return (Criteria) this;
        }

        public Criteria andAddTimeNotIn(List<LocalDateTime> values) {
            addCriterion("add_time not in", values, "addTime");
            return (Criteria) this;
        }

        public Criteria andAddTimeBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("add_time between", value1, value2, "addTime");
            return (Criteria) this;
        }

        public Criteria andAddTimeNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("add_time not between", value1, value2, "addTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIsNull() {
            addCriterion("update_time is null");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIsNotNull() {
            addCriterion("update_time is not null");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeEqualTo(LocalDateTime value) {
            addCriterion("update_time =", value, "updateTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_model
         *
         * @mbg.generated
         */
        public Criteria andUpdateTimeEqualToColumn(LitemallQuoteModel.Column column) {
            addCriterion(new StringBuilder("update_time = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotEqualTo(LocalDateTime value) {
            addCriterion("update_time <>", value, "updateTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_model
         *
         * @mbg.generated
         */
        public Criteria andUpdateTimeNotEqualToColumn(LitemallQuoteModel.Column column) {
            addCriterion(new StringBuilder("update_time <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeGreaterThan(LocalDateTime value) {
            addCriterion("update_time >", value, "updateTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_model
         *
         * @mbg.generated
         */
        public Criteria andUpdateTimeGreaterThanColumn(LitemallQuoteModel.Column column) {
            addCriterion(new StringBuilder("update_time > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("update_time >=", value, "updateTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_model
         *
         * @mbg.generated
         */
        public Criteria andUpdateTimeGreaterThanOrEqualToColumn(LitemallQuoteModel.Column column) {
            addCriterion(new StringBuilder("update_time >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeLessThan(LocalDateTime value) {
            addCriterion("update_time <", value, "updateTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_model
         *
         * @mbg.generated
         */
        public Criteria andUpdateTimeLessThanColumn(LitemallQuoteModel.Column column) {
            addCriterion(new StringBuilder("update_time < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("update_time <=", value, "updateTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_model
         *
         * @mbg.generated
         */
        public Criteria andUpdateTimeLessThanOrEqualToColumn(LitemallQuoteModel.Column column) {
            addCriterion(new StringBuilder("update_time <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIn(List<LocalDateTime> values) {
            addCriterion("update_time in", values, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotIn(List<LocalDateTime> values) {
            addCriterion("update_time not in", values, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("update_time between", value1, value2, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("update_time not between", value1, value2, "updateTime");
            return (Criteria) this;
        }

        public Criteria andDeletedIsNull() {
            addCriterion("deleted is null");
            return (Criteria) this;
        }

        public Criteria andDeletedIsNotNull() {
            addCriterion("deleted is not null");
            return (Criteria) this;
        }

        public Criteria andDeletedEqualTo(Boolean value) {
            addCriterion("deleted =", value, "deleted");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_model
         *
         * @mbg.generated
         */
        public Criteria andDeletedEqualToColumn(LitemallQuoteModel.Column column) {
            addCriterion(new StringBuilder("deleted = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeletedNotEqualTo(Boolean value) {
            addCriterion("deleted <>", value, "deleted");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_model
         *
         * @mbg.generated
         */
        public Criteria andDeletedNotEqualToColumn(LitemallQuoteModel.Column column) {
            addCriterion(new StringBuilder("deleted <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeletedGreaterThan(Boolean value) {
            addCriterion("deleted >", value, "deleted");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_model
         *
         * @mbg.generated
         */
        public Criteria andDeletedGreaterThanColumn(LitemallQuoteModel.Column column) {
            addCriterion(new StringBuilder("deleted > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeletedGreaterThanOrEqualTo(Boolean value) {
            addCriterion("deleted >=", value, "deleted");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_model
         *
         * @mbg.generated
         */
        public Criteria andDeletedGreaterThanOrEqualToColumn(LitemallQuoteModel.Column column) {
            addCriterion(new StringBuilder("deleted >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeletedLessThan(Boolean value) {
            addCriterion("deleted <", value, "deleted");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_model
         *
         * @mbg.generated
         */
        public Criteria andDeletedLessThanColumn(LitemallQuoteModel.Column column) {
            addCriterion(new StringBuilder("deleted < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeletedLessThanOrEqualTo(Boolean value) {
            addCriterion("deleted <=", value, "deleted");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_model
         *
         * @mbg.generated
         */
        public Criteria andDeletedLessThanOrEqualToColumn(LitemallQuoteModel.Column column) {
            addCriterion(new StringBuilder("deleted <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeletedIn(List<Boolean> values) {
            addCriterion("deleted in", values, "deleted");
            return (Criteria) this;
        }

        public Criteria andDeletedNotIn(List<Boolean> values) {
            addCriterion("deleted not in", values, "deleted");
            return (Criteria) this;
        }

        public Criteria andDeletedBetween(Boolean value1, Boolean value2) {
            addCriterion("deleted between", value1, value2, "deleted");
            return (Criteria) this;
        }

        public Criteria andDeletedNotBetween(Boolean value1, Boolean value2) {
            addCriterion("deleted not between", value1, value2, "deleted");
            return (Criteria) this;
        }

        public Criteria andApproveCodeIsNull() {
            addCriterion("approve_code is null");
            return (Criteria) this;
        }

        public Criteria andApproveCodeIsNotNull() {
            addCriterion("approve_code is not null");
            return (Criteria) this;
        }

        public Criteria andApproveCodeEqualTo(Integer[] value) {
            addApproveCodeCriterion("approve_code =", value, "approveCode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_model
         *
         * @mbg.generated
         */
        public Criteria andApproveCodeEqualToColumn(LitemallQuoteModel.Column column) {
            addCriterion(new StringBuilder("approve_code = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andApproveCodeNotEqualTo(Integer[] value) {
            addApproveCodeCriterion("approve_code <>", value, "approveCode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_model
         *
         * @mbg.generated
         */
        public Criteria andApproveCodeNotEqualToColumn(LitemallQuoteModel.Column column) {
            addCriterion(new StringBuilder("approve_code <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andApproveCodeGreaterThan(Integer[] value) {
            addApproveCodeCriterion("approve_code >", value, "approveCode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_model
         *
         * @mbg.generated
         */
        public Criteria andApproveCodeGreaterThanColumn(LitemallQuoteModel.Column column) {
            addCriterion(new StringBuilder("approve_code > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andApproveCodeGreaterThanOrEqualTo(Integer[] value) {
            addApproveCodeCriterion("approve_code >=", value, "approveCode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_model
         *
         * @mbg.generated
         */
        public Criteria andApproveCodeGreaterThanOrEqualToColumn(LitemallQuoteModel.Column column) {
            addCriterion(new StringBuilder("approve_code >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andApproveCodeLessThan(Integer[] value) {
            addApproveCodeCriterion("approve_code <", value, "approveCode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_model
         *
         * @mbg.generated
         */
        public Criteria andApproveCodeLessThanColumn(LitemallQuoteModel.Column column) {
            addCriterion(new StringBuilder("approve_code < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andApproveCodeLessThanOrEqualTo(Integer[] value) {
            addApproveCodeCriterion("approve_code <=", value, "approveCode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_model
         *
         * @mbg.generated
         */
        public Criteria andApproveCodeLessThanOrEqualToColumn(LitemallQuoteModel.Column column) {
            addCriterion(new StringBuilder("approve_code <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andApproveCodeLike(Integer[] value) {
            addApproveCodeCriterion("approve_code like", value, "approveCode");
            return (Criteria) this;
        }

        public Criteria andApproveCodeNotLike(Integer[] value) {
            addApproveCodeCriterion("approve_code not like", value, "approveCode");
            return (Criteria) this;
        }

        public Criteria andApproveCodeIn(List<Integer[]> values) {
            addApproveCodeCriterion("approve_code in", values, "approveCode");
            return (Criteria) this;
        }

        public Criteria andApproveCodeNotIn(List<Integer[]> values) {
            addApproveCodeCriterion("approve_code not in", values, "approveCode");
            return (Criteria) this;
        }

        public Criteria andApproveCodeBetween(Integer[] value1, Integer[] value2) {
            addApproveCodeCriterion("approve_code between", value1, value2, "approveCode");
            return (Criteria) this;
        }

        public Criteria andApproveCodeNotBetween(Integer[] value1, Integer[] value2) {
            addApproveCodeCriterion("approve_code not between", value1, value2, "approveCode");
            return (Criteria) this;
        }

        public Criteria andCeoCodeIsNull() {
            addCriterion("ceo_code is null");
            return (Criteria) this;
        }

        public Criteria andCeoCodeIsNotNull() {
            addCriterion("ceo_code is not null");
            return (Criteria) this;
        }

        public Criteria andCeoCodeEqualTo(Integer value) {
            addCriterion("ceo_code =", value, "ceoCode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_model
         *
         * @mbg.generated
         */
        public Criteria andCeoCodeEqualToColumn(LitemallQuoteModel.Column column) {
            addCriterion(new StringBuilder("ceo_code = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCeoCodeNotEqualTo(Integer value) {
            addCriterion("ceo_code <>", value, "ceoCode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_model
         *
         * @mbg.generated
         */
        public Criteria andCeoCodeNotEqualToColumn(LitemallQuoteModel.Column column) {
            addCriterion(new StringBuilder("ceo_code <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCeoCodeGreaterThan(Integer value) {
            addCriterion("ceo_code >", value, "ceoCode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_model
         *
         * @mbg.generated
         */
        public Criteria andCeoCodeGreaterThanColumn(LitemallQuoteModel.Column column) {
            addCriterion(new StringBuilder("ceo_code > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCeoCodeGreaterThanOrEqualTo(Integer value) {
            addCriterion("ceo_code >=", value, "ceoCode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_model
         *
         * @mbg.generated
         */
        public Criteria andCeoCodeGreaterThanOrEqualToColumn(LitemallQuoteModel.Column column) {
            addCriterion(new StringBuilder("ceo_code >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCeoCodeLessThan(Integer value) {
            addCriterion("ceo_code <", value, "ceoCode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_model
         *
         * @mbg.generated
         */
        public Criteria andCeoCodeLessThanColumn(LitemallQuoteModel.Column column) {
            addCriterion(new StringBuilder("ceo_code < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCeoCodeLessThanOrEqualTo(Integer value) {
            addCriterion("ceo_code <=", value, "ceoCode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_model
         *
         * @mbg.generated
         */
        public Criteria andCeoCodeLessThanOrEqualToColumn(LitemallQuoteModel.Column column) {
            addCriterion(new StringBuilder("ceo_code <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCeoCodeIn(List<Integer> values) {
            addCriterion("ceo_code in", values, "ceoCode");
            return (Criteria) this;
        }

        public Criteria andCeoCodeNotIn(List<Integer> values) {
            addCriterion("ceo_code not in", values, "ceoCode");
            return (Criteria) this;
        }

        public Criteria andCeoCodeBetween(Integer value1, Integer value2) {
            addCriterion("ceo_code between", value1, value2, "ceoCode");
            return (Criteria) this;
        }

        public Criteria andCeoCodeNotBetween(Integer value1, Integer value2) {
            addCriterion("ceo_code not between", value1, value2, "ceoCode");
            return (Criteria) this;
        }

        public Criteria andNoticeIsNull() {
            addCriterion("notice is null");
            return (Criteria) this;
        }

        public Criteria andNoticeIsNotNull() {
            addCriterion("notice is not null");
            return (Criteria) this;
        }

        public Criteria andNoticeEqualTo(Integer[] value) {
            addNoticeCriterion("notice =", value, "notice");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_model
         *
         * @mbg.generated
         */
        public Criteria andNoticeEqualToColumn(LitemallQuoteModel.Column column) {
            addCriterion(new StringBuilder("notice = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNoticeNotEqualTo(Integer[] value) {
            addNoticeCriterion("notice <>", value, "notice");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_model
         *
         * @mbg.generated
         */
        public Criteria andNoticeNotEqualToColumn(LitemallQuoteModel.Column column) {
            addCriterion(new StringBuilder("notice <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNoticeGreaterThan(Integer[] value) {
            addNoticeCriterion("notice >", value, "notice");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_model
         *
         * @mbg.generated
         */
        public Criteria andNoticeGreaterThanColumn(LitemallQuoteModel.Column column) {
            addCriterion(new StringBuilder("notice > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNoticeGreaterThanOrEqualTo(Integer[] value) {
            addNoticeCriterion("notice >=", value, "notice");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_model
         *
         * @mbg.generated
         */
        public Criteria andNoticeGreaterThanOrEqualToColumn(LitemallQuoteModel.Column column) {
            addCriterion(new StringBuilder("notice >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNoticeLessThan(Integer[] value) {
            addNoticeCriterion("notice <", value, "notice");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_model
         *
         * @mbg.generated
         */
        public Criteria andNoticeLessThanColumn(LitemallQuoteModel.Column column) {
            addCriterion(new StringBuilder("notice < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNoticeLessThanOrEqualTo(Integer[] value) {
            addNoticeCriterion("notice <=", value, "notice");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_model
         *
         * @mbg.generated
         */
        public Criteria andNoticeLessThanOrEqualToColumn(LitemallQuoteModel.Column column) {
            addCriterion(new StringBuilder("notice <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNoticeLike(Integer[] value) {
            addNoticeCriterion("notice like", value, "notice");
            return (Criteria) this;
        }

        public Criteria andNoticeNotLike(Integer[] value) {
            addNoticeCriterion("notice not like", value, "notice");
            return (Criteria) this;
        }

        public Criteria andNoticeIn(List<Integer[]> values) {
            addNoticeCriterion("notice in", values, "notice");
            return (Criteria) this;
        }

        public Criteria andNoticeNotIn(List<Integer[]> values) {
            addNoticeCriterion("notice not in", values, "notice");
            return (Criteria) this;
        }

        public Criteria andNoticeBetween(Integer[] value1, Integer[] value2) {
            addNoticeCriterion("notice between", value1, value2, "notice");
            return (Criteria) this;
        }

        public Criteria andNoticeNotBetween(Integer[] value1, Integer[] value2) {
            addNoticeCriterion("notice not between", value1, value2, "notice");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table litemall_quote_model
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {
        /**
         * This field was generated by MyBatis Generator.
         * This field corresponds to the database table litemall_quote_model
         *
         * @mbg.generated
         */
        private LitemallQuoteModelExample example;

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_model
         *
         * @mbg.generated
         */
        protected Criteria(LitemallQuoteModelExample example) {
            super();
            this.example = example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_model
         *
         * @mbg.generated
         */
        public LitemallQuoteModelExample example() {
            return this.example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_model
         *
         * @mbg.generated
         */
        @Deprecated
        public Criteria andIf(boolean ifAdd, ICriteriaAdd add) {
            if (ifAdd) {
                add.add(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_model
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then) {
            if (condition) {
                then.criteria(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_model
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then, ICriteriaWhen otherwise) {
            if (condition) {
                then.criteria(this);
            } else {
                otherwise.criteria(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_model
         *
         * @mbg.generated
         */
        public Criteria andLogicalDeleted(boolean deleted) {
            return deleted ? andDeletedEqualTo(LitemallQuoteModel.Deleted.IS_DELETED.value()) : andDeletedNotEqualTo(LitemallQuoteModel.Deleted.IS_DELETED.value());
        }

        @Deprecated
        public interface ICriteriaAdd {
            /**
             * This method was generated by MyBatis Generator.
             * This method corresponds to the database table litemall_quote_model
             *
             * @mbg.generated
             */
            Criteria add(Criteria add);
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table litemall_quote_model
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }

    public interface ICriteriaWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_model
         *
         * @mbg.generated
         */
        void criteria(Criteria criteria);
    }

    public interface IExampleWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_model
         *
         * @mbg.generated
         */
        void example(org.linlinjava.litemall.db.domain.LitemallQuoteModelExample example);
    }
}