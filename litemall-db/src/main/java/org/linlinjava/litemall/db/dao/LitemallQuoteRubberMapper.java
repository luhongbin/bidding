package org.linlinjava.litemall.db.dao;

import java.util.List;
import org.apache.ibatis.annotations.Param;
import org.linlinjava.litemall.db.domain.LitemallQuoteRubber;
import org.linlinjava.litemall.db.domain.LitemallQuoteRubberExample;

public interface LitemallQuoteRubberMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_quote_rubber
     *
     * @mbg.generated
     */
    long countByExample(LitemallQuoteRubberExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_quote_rubber
     *
     * @mbg.generated
     */
    int deleteByExample(LitemallQuoteRubberExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_quote_rubber
     *
     * @mbg.generated
     */
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_quote_rubber
     *
     * @mbg.generated
     */
    int insert(LitemallQuoteRubber record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_quote_rubber
     *
     * @mbg.generated
     */
    int insertSelective(LitemallQuoteRubber record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_quote_rubber
     *
     * @mbg.generated
     */
    LitemallQuoteRubber selectOneByExample(LitemallQuoteRubberExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_quote_rubber
     *
     * @mbg.generated
     */
    LitemallQuoteRubber selectOneByExampleSelective(@Param("example") LitemallQuoteRubberExample example, @Param("selective") LitemallQuoteRubber.Column ... selective);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_quote_rubber
     *
     * @mbg.generated
     */
    LitemallQuoteRubber selectOneByExampleWithBLOBs(LitemallQuoteRubberExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_quote_rubber
     *
     * @mbg.generated
     */
    List<LitemallQuoteRubber> selectByExampleSelective(@Param("example") LitemallQuoteRubberExample example, @Param("selective") LitemallQuoteRubber.Column ... selective);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_quote_rubber
     *
     * @mbg.generated
     */
    List<LitemallQuoteRubber> selectByExampleWithBLOBs(LitemallQuoteRubberExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_quote_rubber
     *
     * @mbg.generated
     */
    List<LitemallQuoteRubber> selectByExample(LitemallQuoteRubberExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_quote_rubber
     *
     * @mbg.generated
     */
    LitemallQuoteRubber selectByPrimaryKeySelective(@Param("id") Integer id, @Param("selective") LitemallQuoteRubber.Column ... selective);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_quote_rubber
     *
     * @mbg.generated
     */
    LitemallQuoteRubber selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_quote_rubber
     *
     * @mbg.generated
     */
    LitemallQuoteRubber selectByPrimaryKeyWithLogicalDelete(@Param("id") Integer id, @Param("andLogicalDeleted") boolean andLogicalDeleted);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_quote_rubber
     *
     * @mbg.generated
     */
    int updateByExampleSelective(@Param("record") LitemallQuoteRubber record, @Param("example") LitemallQuoteRubberExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_quote_rubber
     *
     * @mbg.generated
     */
    int updateByExampleWithBLOBs(@Param("record") LitemallQuoteRubber record, @Param("example") LitemallQuoteRubberExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_quote_rubber
     *
     * @mbg.generated
     */
    int updateByExample(@Param("record") LitemallQuoteRubber record, @Param("example") LitemallQuoteRubberExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_quote_rubber
     *
     * @mbg.generated
     */
    int updateByPrimaryKeySelective(LitemallQuoteRubber record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_quote_rubber
     *
     * @mbg.generated
     */
    int updateByPrimaryKeyWithBLOBs(LitemallQuoteRubber record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_quote_rubber
     *
     * @mbg.generated
     */
    int updateByPrimaryKey(LitemallQuoteRubber record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_quote_rubber
     *
     * @mbg.generated
     */
    int logicalDeleteByExample(@Param("example") LitemallQuoteRubberExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_quote_rubber
     *
     * @mbg.generated
     */
    int logicalDeleteByPrimaryKey(Integer id);
}