package org.linlinjava.litemall.db.domain;

import java.math.BigDecimal;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;

public class LitemallQuoteHardwareExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table litemall_quote_hardware
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table litemall_quote_hardware
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table litemall_quote_hardware
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_quote_hardware
     *
     * @mbg.generated
     */
    public LitemallQuoteHardwareExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_quote_hardware
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_quote_hardware
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_quote_hardware
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_quote_hardware
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_quote_hardware
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_quote_hardware
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_quote_hardware
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_quote_hardware
     *
     * @mbg.generated
     */
    public LitemallQuoteHardwareExample orderBy(String orderByClause) {
        this.setOrderByClause(orderByClause);
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_quote_hardware
     *
     * @mbg.generated
     */
    public LitemallQuoteHardwareExample orderBy(String ... orderByClauses) {
        StringBuffer sb = new StringBuffer();
        for (int i = 0; i < orderByClauses.length; i++) {
            sb.append(orderByClauses[i]);
            if (i < orderByClauses.length - 1) {
                sb.append(" , ");
            }
        }
        this.setOrderByClause(sb.toString());
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_quote_hardware
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_quote_hardware
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria(this);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_quote_hardware
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_quote_hardware
     *
     * @mbg.generated
     */
    public static Criteria newAndCreateCriteria() {
        LitemallQuoteHardwareExample example = new LitemallQuoteHardwareExample();
        return example.createCriteria();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_quote_hardware
     *
     * @mbg.generated
     */
    public LitemallQuoteHardwareExample when(boolean condition, IExampleWhen then) {
        if (condition) {
            then.example(this);
        }
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_quote_hardware
     *
     * @mbg.generated
     */
    public LitemallQuoteHardwareExample when(boolean condition, IExampleWhen then, IExampleWhen otherwise) {
        if (condition) {
            then.example(this);
        } else {
            otherwise.example(this);
        }
        return this;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table litemall_quote_hardware
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_hardware
         *
         * @mbg.generated
         */
        public Criteria andIdEqualToColumn(LitemallQuoteHardware.Column column) {
            addCriterion(new StringBuilder("id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_hardware
         *
         * @mbg.generated
         */
        public Criteria andIdNotEqualToColumn(LitemallQuoteHardware.Column column) {
            addCriterion(new StringBuilder("id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_hardware
         *
         * @mbg.generated
         */
        public Criteria andIdGreaterThanColumn(LitemallQuoteHardware.Column column) {
            addCriterion(new StringBuilder("id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_hardware
         *
         * @mbg.generated
         */
        public Criteria andIdGreaterThanOrEqualToColumn(LitemallQuoteHardware.Column column) {
            addCriterion(new StringBuilder("id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_hardware
         *
         * @mbg.generated
         */
        public Criteria andIdLessThanColumn(LitemallQuoteHardware.Column column) {
            addCriterion(new StringBuilder("id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_hardware
         *
         * @mbg.generated
         */
        public Criteria andIdLessThanOrEqualToColumn(LitemallQuoteHardware.Column column) {
            addCriterion(new StringBuilder("id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andQuoteIdIsNull() {
            addCriterion("quote_id is null");
            return (Criteria) this;
        }

        public Criteria andQuoteIdIsNotNull() {
            addCriterion("quote_id is not null");
            return (Criteria) this;
        }

        public Criteria andQuoteIdEqualTo(Integer value) {
            addCriterion("quote_id =", value, "quoteId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_hardware
         *
         * @mbg.generated
         */
        public Criteria andQuoteIdEqualToColumn(LitemallQuoteHardware.Column column) {
            addCriterion(new StringBuilder("quote_id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andQuoteIdNotEqualTo(Integer value) {
            addCriterion("quote_id <>", value, "quoteId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_hardware
         *
         * @mbg.generated
         */
        public Criteria andQuoteIdNotEqualToColumn(LitemallQuoteHardware.Column column) {
            addCriterion(new StringBuilder("quote_id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andQuoteIdGreaterThan(Integer value) {
            addCriterion("quote_id >", value, "quoteId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_hardware
         *
         * @mbg.generated
         */
        public Criteria andQuoteIdGreaterThanColumn(LitemallQuoteHardware.Column column) {
            addCriterion(new StringBuilder("quote_id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andQuoteIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("quote_id >=", value, "quoteId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_hardware
         *
         * @mbg.generated
         */
        public Criteria andQuoteIdGreaterThanOrEqualToColumn(LitemallQuoteHardware.Column column) {
            addCriterion(new StringBuilder("quote_id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andQuoteIdLessThan(Integer value) {
            addCriterion("quote_id <", value, "quoteId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_hardware
         *
         * @mbg.generated
         */
        public Criteria andQuoteIdLessThanColumn(LitemallQuoteHardware.Column column) {
            addCriterion(new StringBuilder("quote_id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andQuoteIdLessThanOrEqualTo(Integer value) {
            addCriterion("quote_id <=", value, "quoteId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_hardware
         *
         * @mbg.generated
         */
        public Criteria andQuoteIdLessThanOrEqualToColumn(LitemallQuoteHardware.Column column) {
            addCriterion(new StringBuilder("quote_id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andQuoteIdIn(List<Integer> values) {
            addCriterion("quote_id in", values, "quoteId");
            return (Criteria) this;
        }

        public Criteria andQuoteIdNotIn(List<Integer> values) {
            addCriterion("quote_id not in", values, "quoteId");
            return (Criteria) this;
        }

        public Criteria andQuoteIdBetween(Integer value1, Integer value2) {
            addCriterion("quote_id between", value1, value2, "quoteId");
            return (Criteria) this;
        }

        public Criteria andQuoteIdNotBetween(Integer value1, Integer value2) {
            addCriterion("quote_id not between", value1, value2, "quoteId");
            return (Criteria) this;
        }

        public Criteria andCodeIsNull() {
            addCriterion("code is null");
            return (Criteria) this;
        }

        public Criteria andCodeIsNotNull() {
            addCriterion("code is not null");
            return (Criteria) this;
        }

        public Criteria andCodeEqualTo(String value) {
            addCriterion("code =", value, "code");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_hardware
         *
         * @mbg.generated
         */
        public Criteria andCodeEqualToColumn(LitemallQuoteHardware.Column column) {
            addCriterion(new StringBuilder("code = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCodeNotEqualTo(String value) {
            addCriterion("code <>", value, "code");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_hardware
         *
         * @mbg.generated
         */
        public Criteria andCodeNotEqualToColumn(LitemallQuoteHardware.Column column) {
            addCriterion(new StringBuilder("code <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCodeGreaterThan(String value) {
            addCriterion("code >", value, "code");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_hardware
         *
         * @mbg.generated
         */
        public Criteria andCodeGreaterThanColumn(LitemallQuoteHardware.Column column) {
            addCriterion(new StringBuilder("code > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCodeGreaterThanOrEqualTo(String value) {
            addCriterion("code >=", value, "code");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_hardware
         *
         * @mbg.generated
         */
        public Criteria andCodeGreaterThanOrEqualToColumn(LitemallQuoteHardware.Column column) {
            addCriterion(new StringBuilder("code >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCodeLessThan(String value) {
            addCriterion("code <", value, "code");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_hardware
         *
         * @mbg.generated
         */
        public Criteria andCodeLessThanColumn(LitemallQuoteHardware.Column column) {
            addCriterion(new StringBuilder("code < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCodeLessThanOrEqualTo(String value) {
            addCriterion("code <=", value, "code");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_hardware
         *
         * @mbg.generated
         */
        public Criteria andCodeLessThanOrEqualToColumn(LitemallQuoteHardware.Column column) {
            addCriterion(new StringBuilder("code <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCodeLike(String value) {
            addCriterion("code like", value, "code");
            return (Criteria) this;
        }

        public Criteria andCodeNotLike(String value) {
            addCriterion("code not like", value, "code");
            return (Criteria) this;
        }

        public Criteria andCodeIn(List<String> values) {
            addCriterion("code in", values, "code");
            return (Criteria) this;
        }

        public Criteria andCodeNotIn(List<String> values) {
            addCriterion("code not in", values, "code");
            return (Criteria) this;
        }

        public Criteria andCodeBetween(String value1, String value2) {
            addCriterion("code between", value1, value2, "code");
            return (Criteria) this;
        }

        public Criteria andCodeNotBetween(String value1, String value2) {
            addCriterion("code not between", value1, value2, "code");
            return (Criteria) this;
        }

        public Criteria andNameIsNull() {
            addCriterion("`name` is null");
            return (Criteria) this;
        }

        public Criteria andNameIsNotNull() {
            addCriterion("`name` is not null");
            return (Criteria) this;
        }

        public Criteria andNameEqualTo(String value) {
            addCriterion("`name` =", value, "name");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_hardware
         *
         * @mbg.generated
         */
        public Criteria andNameEqualToColumn(LitemallQuoteHardware.Column column) {
            addCriterion(new StringBuilder("`name` = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNameNotEqualTo(String value) {
            addCriterion("`name` <>", value, "name");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_hardware
         *
         * @mbg.generated
         */
        public Criteria andNameNotEqualToColumn(LitemallQuoteHardware.Column column) {
            addCriterion(new StringBuilder("`name` <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNameGreaterThan(String value) {
            addCriterion("`name` >", value, "name");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_hardware
         *
         * @mbg.generated
         */
        public Criteria andNameGreaterThanColumn(LitemallQuoteHardware.Column column) {
            addCriterion(new StringBuilder("`name` > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNameGreaterThanOrEqualTo(String value) {
            addCriterion("`name` >=", value, "name");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_hardware
         *
         * @mbg.generated
         */
        public Criteria andNameGreaterThanOrEqualToColumn(LitemallQuoteHardware.Column column) {
            addCriterion(new StringBuilder("`name` >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNameLessThan(String value) {
            addCriterion("`name` <", value, "name");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_hardware
         *
         * @mbg.generated
         */
        public Criteria andNameLessThanColumn(LitemallQuoteHardware.Column column) {
            addCriterion(new StringBuilder("`name` < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNameLessThanOrEqualTo(String value) {
            addCriterion("`name` <=", value, "name");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_hardware
         *
         * @mbg.generated
         */
        public Criteria andNameLessThanOrEqualToColumn(LitemallQuoteHardware.Column column) {
            addCriterion(new StringBuilder("`name` <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNameLike(String value) {
            addCriterion("`name` like", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotLike(String value) {
            addCriterion("`name` not like", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameIn(List<String> values) {
            addCriterion("`name` in", values, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotIn(List<String> values) {
            addCriterion("`name` not in", values, "name");
            return (Criteria) this;
        }

        public Criteria andNameBetween(String value1, String value2) {
            addCriterion("`name` between", value1, value2, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotBetween(String value1, String value2) {
            addCriterion("`name` not between", value1, value2, "name");
            return (Criteria) this;
        }

        public Criteria andSpecIsNull() {
            addCriterion("spec is null");
            return (Criteria) this;
        }

        public Criteria andSpecIsNotNull() {
            addCriterion("spec is not null");
            return (Criteria) this;
        }

        public Criteria andSpecEqualTo(String value) {
            addCriterion("spec =", value, "spec");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_hardware
         *
         * @mbg.generated
         */
        public Criteria andSpecEqualToColumn(LitemallQuoteHardware.Column column) {
            addCriterion(new StringBuilder("spec = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSpecNotEqualTo(String value) {
            addCriterion("spec <>", value, "spec");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_hardware
         *
         * @mbg.generated
         */
        public Criteria andSpecNotEqualToColumn(LitemallQuoteHardware.Column column) {
            addCriterion(new StringBuilder("spec <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSpecGreaterThan(String value) {
            addCriterion("spec >", value, "spec");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_hardware
         *
         * @mbg.generated
         */
        public Criteria andSpecGreaterThanColumn(LitemallQuoteHardware.Column column) {
            addCriterion(new StringBuilder("spec > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSpecGreaterThanOrEqualTo(String value) {
            addCriterion("spec >=", value, "spec");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_hardware
         *
         * @mbg.generated
         */
        public Criteria andSpecGreaterThanOrEqualToColumn(LitemallQuoteHardware.Column column) {
            addCriterion(new StringBuilder("spec >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSpecLessThan(String value) {
            addCriterion("spec <", value, "spec");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_hardware
         *
         * @mbg.generated
         */
        public Criteria andSpecLessThanColumn(LitemallQuoteHardware.Column column) {
            addCriterion(new StringBuilder("spec < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSpecLessThanOrEqualTo(String value) {
            addCriterion("spec <=", value, "spec");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_hardware
         *
         * @mbg.generated
         */
        public Criteria andSpecLessThanOrEqualToColumn(LitemallQuoteHardware.Column column) {
            addCriterion(new StringBuilder("spec <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSpecLike(String value) {
            addCriterion("spec like", value, "spec");
            return (Criteria) this;
        }

        public Criteria andSpecNotLike(String value) {
            addCriterion("spec not like", value, "spec");
            return (Criteria) this;
        }

        public Criteria andSpecIn(List<String> values) {
            addCriterion("spec in", values, "spec");
            return (Criteria) this;
        }

        public Criteria andSpecNotIn(List<String> values) {
            addCriterion("spec not in", values, "spec");
            return (Criteria) this;
        }

        public Criteria andSpecBetween(String value1, String value2) {
            addCriterion("spec between", value1, value2, "spec");
            return (Criteria) this;
        }

        public Criteria andSpecNotBetween(String value1, String value2) {
            addCriterion("spec not between", value1, value2, "spec");
            return (Criteria) this;
        }

        public Criteria andWeightIsNull() {
            addCriterion("weight is null");
            return (Criteria) this;
        }

        public Criteria andWeightIsNotNull() {
            addCriterion("weight is not null");
            return (Criteria) this;
        }

        public Criteria andWeightEqualTo(BigDecimal value) {
            addCriterion("weight =", value, "weight");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_hardware
         *
         * @mbg.generated
         */
        public Criteria andWeightEqualToColumn(LitemallQuoteHardware.Column column) {
            addCriterion(new StringBuilder("weight = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andWeightNotEqualTo(BigDecimal value) {
            addCriterion("weight <>", value, "weight");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_hardware
         *
         * @mbg.generated
         */
        public Criteria andWeightNotEqualToColumn(LitemallQuoteHardware.Column column) {
            addCriterion(new StringBuilder("weight <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andWeightGreaterThan(BigDecimal value) {
            addCriterion("weight >", value, "weight");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_hardware
         *
         * @mbg.generated
         */
        public Criteria andWeightGreaterThanColumn(LitemallQuoteHardware.Column column) {
            addCriterion(new StringBuilder("weight > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andWeightGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("weight >=", value, "weight");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_hardware
         *
         * @mbg.generated
         */
        public Criteria andWeightGreaterThanOrEqualToColumn(LitemallQuoteHardware.Column column) {
            addCriterion(new StringBuilder("weight >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andWeightLessThan(BigDecimal value) {
            addCriterion("weight <", value, "weight");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_hardware
         *
         * @mbg.generated
         */
        public Criteria andWeightLessThanColumn(LitemallQuoteHardware.Column column) {
            addCriterion(new StringBuilder("weight < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andWeightLessThanOrEqualTo(BigDecimal value) {
            addCriterion("weight <=", value, "weight");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_hardware
         *
         * @mbg.generated
         */
        public Criteria andWeightLessThanOrEqualToColumn(LitemallQuoteHardware.Column column) {
            addCriterion(new StringBuilder("weight <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andWeightIn(List<BigDecimal> values) {
            addCriterion("weight in", values, "weight");
            return (Criteria) this;
        }

        public Criteria andWeightNotIn(List<BigDecimal> values) {
            addCriterion("weight not in", values, "weight");
            return (Criteria) this;
        }

        public Criteria andWeightBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("weight between", value1, value2, "weight");
            return (Criteria) this;
        }

        public Criteria andWeightNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("weight not between", value1, value2, "weight");
            return (Criteria) this;
        }

        public Criteria andMaterialChargeIsNull() {
            addCriterion("material_charge is null");
            return (Criteria) this;
        }

        public Criteria andMaterialChargeIsNotNull() {
            addCriterion("material_charge is not null");
            return (Criteria) this;
        }

        public Criteria andMaterialChargeEqualTo(BigDecimal value) {
            addCriterion("material_charge =", value, "materialCharge");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_hardware
         *
         * @mbg.generated
         */
        public Criteria andMaterialChargeEqualToColumn(LitemallQuoteHardware.Column column) {
            addCriterion(new StringBuilder("material_charge = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMaterialChargeNotEqualTo(BigDecimal value) {
            addCriterion("material_charge <>", value, "materialCharge");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_hardware
         *
         * @mbg.generated
         */
        public Criteria andMaterialChargeNotEqualToColumn(LitemallQuoteHardware.Column column) {
            addCriterion(new StringBuilder("material_charge <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMaterialChargeGreaterThan(BigDecimal value) {
            addCriterion("material_charge >", value, "materialCharge");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_hardware
         *
         * @mbg.generated
         */
        public Criteria andMaterialChargeGreaterThanColumn(LitemallQuoteHardware.Column column) {
            addCriterion(new StringBuilder("material_charge > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMaterialChargeGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("material_charge >=", value, "materialCharge");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_hardware
         *
         * @mbg.generated
         */
        public Criteria andMaterialChargeGreaterThanOrEqualToColumn(LitemallQuoteHardware.Column column) {
            addCriterion(new StringBuilder("material_charge >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMaterialChargeLessThan(BigDecimal value) {
            addCriterion("material_charge <", value, "materialCharge");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_hardware
         *
         * @mbg.generated
         */
        public Criteria andMaterialChargeLessThanColumn(LitemallQuoteHardware.Column column) {
            addCriterion(new StringBuilder("material_charge < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMaterialChargeLessThanOrEqualTo(BigDecimal value) {
            addCriterion("material_charge <=", value, "materialCharge");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_hardware
         *
         * @mbg.generated
         */
        public Criteria andMaterialChargeLessThanOrEqualToColumn(LitemallQuoteHardware.Column column) {
            addCriterion(new StringBuilder("material_charge <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMaterialChargeIn(List<BigDecimal> values) {
            addCriterion("material_charge in", values, "materialCharge");
            return (Criteria) this;
        }

        public Criteria andMaterialChargeNotIn(List<BigDecimal> values) {
            addCriterion("material_charge not in", values, "materialCharge");
            return (Criteria) this;
        }

        public Criteria andMaterialChargeBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("material_charge between", value1, value2, "materialCharge");
            return (Criteria) this;
        }

        public Criteria andMaterialChargeNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("material_charge not between", value1, value2, "materialCharge");
            return (Criteria) this;
        }

        public Criteria andMaterialPerChargeIsNull() {
            addCriterion("material_per_charge is null");
            return (Criteria) this;
        }

        public Criteria andMaterialPerChargeIsNotNull() {
            addCriterion("material_per_charge is not null");
            return (Criteria) this;
        }

        public Criteria andMaterialPerChargeEqualTo(BigDecimal value) {
            addCriterion("material_per_charge =", value, "materialPerCharge");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_hardware
         *
         * @mbg.generated
         */
        public Criteria andMaterialPerChargeEqualToColumn(LitemallQuoteHardware.Column column) {
            addCriterion(new StringBuilder("material_per_charge = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMaterialPerChargeNotEqualTo(BigDecimal value) {
            addCriterion("material_per_charge <>", value, "materialPerCharge");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_hardware
         *
         * @mbg.generated
         */
        public Criteria andMaterialPerChargeNotEqualToColumn(LitemallQuoteHardware.Column column) {
            addCriterion(new StringBuilder("material_per_charge <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMaterialPerChargeGreaterThan(BigDecimal value) {
            addCriterion("material_per_charge >", value, "materialPerCharge");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_hardware
         *
         * @mbg.generated
         */
        public Criteria andMaterialPerChargeGreaterThanColumn(LitemallQuoteHardware.Column column) {
            addCriterion(new StringBuilder("material_per_charge > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMaterialPerChargeGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("material_per_charge >=", value, "materialPerCharge");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_hardware
         *
         * @mbg.generated
         */
        public Criteria andMaterialPerChargeGreaterThanOrEqualToColumn(LitemallQuoteHardware.Column column) {
            addCriterion(new StringBuilder("material_per_charge >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMaterialPerChargeLessThan(BigDecimal value) {
            addCriterion("material_per_charge <", value, "materialPerCharge");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_hardware
         *
         * @mbg.generated
         */
        public Criteria andMaterialPerChargeLessThanColumn(LitemallQuoteHardware.Column column) {
            addCriterion(new StringBuilder("material_per_charge < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMaterialPerChargeLessThanOrEqualTo(BigDecimal value) {
            addCriterion("material_per_charge <=", value, "materialPerCharge");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_hardware
         *
         * @mbg.generated
         */
        public Criteria andMaterialPerChargeLessThanOrEqualToColumn(LitemallQuoteHardware.Column column) {
            addCriterion(new StringBuilder("material_per_charge <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMaterialPerChargeIn(List<BigDecimal> values) {
            addCriterion("material_per_charge in", values, "materialPerCharge");
            return (Criteria) this;
        }

        public Criteria andMaterialPerChargeNotIn(List<BigDecimal> values) {
            addCriterion("material_per_charge not in", values, "materialPerCharge");
            return (Criteria) this;
        }

        public Criteria andMaterialPerChargeBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("material_per_charge between", value1, value2, "materialPerCharge");
            return (Criteria) this;
        }

        public Criteria andMaterialPerChargeNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("material_per_charge not between", value1, value2, "materialPerCharge");
            return (Criteria) this;
        }

        public Criteria andProcessingChargeIsNull() {
            addCriterion("processing_charge is null");
            return (Criteria) this;
        }

        public Criteria andProcessingChargeIsNotNull() {
            addCriterion("processing_charge is not null");
            return (Criteria) this;
        }

        public Criteria andProcessingChargeEqualTo(BigDecimal value) {
            addCriterion("processing_charge =", value, "processingCharge");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_hardware
         *
         * @mbg.generated
         */
        public Criteria andProcessingChargeEqualToColumn(LitemallQuoteHardware.Column column) {
            addCriterion(new StringBuilder("processing_charge = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andProcessingChargeNotEqualTo(BigDecimal value) {
            addCriterion("processing_charge <>", value, "processingCharge");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_hardware
         *
         * @mbg.generated
         */
        public Criteria andProcessingChargeNotEqualToColumn(LitemallQuoteHardware.Column column) {
            addCriterion(new StringBuilder("processing_charge <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andProcessingChargeGreaterThan(BigDecimal value) {
            addCriterion("processing_charge >", value, "processingCharge");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_hardware
         *
         * @mbg.generated
         */
        public Criteria andProcessingChargeGreaterThanColumn(LitemallQuoteHardware.Column column) {
            addCriterion(new StringBuilder("processing_charge > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andProcessingChargeGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("processing_charge >=", value, "processingCharge");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_hardware
         *
         * @mbg.generated
         */
        public Criteria andProcessingChargeGreaterThanOrEqualToColumn(LitemallQuoteHardware.Column column) {
            addCriterion(new StringBuilder("processing_charge >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andProcessingChargeLessThan(BigDecimal value) {
            addCriterion("processing_charge <", value, "processingCharge");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_hardware
         *
         * @mbg.generated
         */
        public Criteria andProcessingChargeLessThanColumn(LitemallQuoteHardware.Column column) {
            addCriterion(new StringBuilder("processing_charge < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andProcessingChargeLessThanOrEqualTo(BigDecimal value) {
            addCriterion("processing_charge <=", value, "processingCharge");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_hardware
         *
         * @mbg.generated
         */
        public Criteria andProcessingChargeLessThanOrEqualToColumn(LitemallQuoteHardware.Column column) {
            addCriterion(new StringBuilder("processing_charge <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andProcessingChargeIn(List<BigDecimal> values) {
            addCriterion("processing_charge in", values, "processingCharge");
            return (Criteria) this;
        }

        public Criteria andProcessingChargeNotIn(List<BigDecimal> values) {
            addCriterion("processing_charge not in", values, "processingCharge");
            return (Criteria) this;
        }

        public Criteria andProcessingChargeBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("processing_charge between", value1, value2, "processingCharge");
            return (Criteria) this;
        }

        public Criteria andProcessingChargeNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("processing_charge not between", value1, value2, "processingCharge");
            return (Criteria) this;
        }

        public Criteria andElectroplateChargeIsNull() {
            addCriterion("electroplate_charge is null");
            return (Criteria) this;
        }

        public Criteria andElectroplateChargeIsNotNull() {
            addCriterion("electroplate_charge is not null");
            return (Criteria) this;
        }

        public Criteria andElectroplateChargeEqualTo(BigDecimal value) {
            addCriterion("electroplate_charge =", value, "electroplateCharge");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_hardware
         *
         * @mbg.generated
         */
        public Criteria andElectroplateChargeEqualToColumn(LitemallQuoteHardware.Column column) {
            addCriterion(new StringBuilder("electroplate_charge = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andElectroplateChargeNotEqualTo(BigDecimal value) {
            addCriterion("electroplate_charge <>", value, "electroplateCharge");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_hardware
         *
         * @mbg.generated
         */
        public Criteria andElectroplateChargeNotEqualToColumn(LitemallQuoteHardware.Column column) {
            addCriterion(new StringBuilder("electroplate_charge <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andElectroplateChargeGreaterThan(BigDecimal value) {
            addCriterion("electroplate_charge >", value, "electroplateCharge");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_hardware
         *
         * @mbg.generated
         */
        public Criteria andElectroplateChargeGreaterThanColumn(LitemallQuoteHardware.Column column) {
            addCriterion(new StringBuilder("electroplate_charge > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andElectroplateChargeGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("electroplate_charge >=", value, "electroplateCharge");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_hardware
         *
         * @mbg.generated
         */
        public Criteria andElectroplateChargeGreaterThanOrEqualToColumn(LitemallQuoteHardware.Column column) {
            addCriterion(new StringBuilder("electroplate_charge >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andElectroplateChargeLessThan(BigDecimal value) {
            addCriterion("electroplate_charge <", value, "electroplateCharge");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_hardware
         *
         * @mbg.generated
         */
        public Criteria andElectroplateChargeLessThanColumn(LitemallQuoteHardware.Column column) {
            addCriterion(new StringBuilder("electroplate_charge < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andElectroplateChargeLessThanOrEqualTo(BigDecimal value) {
            addCriterion("electroplate_charge <=", value, "electroplateCharge");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_hardware
         *
         * @mbg.generated
         */
        public Criteria andElectroplateChargeLessThanOrEqualToColumn(LitemallQuoteHardware.Column column) {
            addCriterion(new StringBuilder("electroplate_charge <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andElectroplateChargeIn(List<BigDecimal> values) {
            addCriterion("electroplate_charge in", values, "electroplateCharge");
            return (Criteria) this;
        }

        public Criteria andElectroplateChargeNotIn(List<BigDecimal> values) {
            addCriterion("electroplate_charge not in", values, "electroplateCharge");
            return (Criteria) this;
        }

        public Criteria andElectroplateChargeBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("electroplate_charge between", value1, value2, "electroplateCharge");
            return (Criteria) this;
        }

        public Criteria andElectroplateChargeNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("electroplate_charge not between", value1, value2, "electroplateCharge");
            return (Criteria) this;
        }

        public Criteria andOtherChargeIsNull() {
            addCriterion("other_charge is null");
            return (Criteria) this;
        }

        public Criteria andOtherChargeIsNotNull() {
            addCriterion("other_charge is not null");
            return (Criteria) this;
        }

        public Criteria andOtherChargeEqualTo(BigDecimal value) {
            addCriterion("other_charge =", value, "otherCharge");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_hardware
         *
         * @mbg.generated
         */
        public Criteria andOtherChargeEqualToColumn(LitemallQuoteHardware.Column column) {
            addCriterion(new StringBuilder("other_charge = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherChargeNotEqualTo(BigDecimal value) {
            addCriterion("other_charge <>", value, "otherCharge");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_hardware
         *
         * @mbg.generated
         */
        public Criteria andOtherChargeNotEqualToColumn(LitemallQuoteHardware.Column column) {
            addCriterion(new StringBuilder("other_charge <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherChargeGreaterThan(BigDecimal value) {
            addCriterion("other_charge >", value, "otherCharge");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_hardware
         *
         * @mbg.generated
         */
        public Criteria andOtherChargeGreaterThanColumn(LitemallQuoteHardware.Column column) {
            addCriterion(new StringBuilder("other_charge > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherChargeGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("other_charge >=", value, "otherCharge");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_hardware
         *
         * @mbg.generated
         */
        public Criteria andOtherChargeGreaterThanOrEqualToColumn(LitemallQuoteHardware.Column column) {
            addCriterion(new StringBuilder("other_charge >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherChargeLessThan(BigDecimal value) {
            addCriterion("other_charge <", value, "otherCharge");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_hardware
         *
         * @mbg.generated
         */
        public Criteria andOtherChargeLessThanColumn(LitemallQuoteHardware.Column column) {
            addCriterion(new StringBuilder("other_charge < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherChargeLessThanOrEqualTo(BigDecimal value) {
            addCriterion("other_charge <=", value, "otherCharge");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_hardware
         *
         * @mbg.generated
         */
        public Criteria andOtherChargeLessThanOrEqualToColumn(LitemallQuoteHardware.Column column) {
            addCriterion(new StringBuilder("other_charge <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherChargeIn(List<BigDecimal> values) {
            addCriterion("other_charge in", values, "otherCharge");
            return (Criteria) this;
        }

        public Criteria andOtherChargeNotIn(List<BigDecimal> values) {
            addCriterion("other_charge not in", values, "otherCharge");
            return (Criteria) this;
        }

        public Criteria andOtherChargeBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("other_charge between", value1, value2, "otherCharge");
            return (Criteria) this;
        }

        public Criteria andOtherChargeNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("other_charge not between", value1, value2, "otherCharge");
            return (Criteria) this;
        }

        public Criteria andPriceIsNull() {
            addCriterion("price is null");
            return (Criteria) this;
        }

        public Criteria andPriceIsNotNull() {
            addCriterion("price is not null");
            return (Criteria) this;
        }

        public Criteria andPriceEqualTo(BigDecimal value) {
            addCriterion("price =", value, "price");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_hardware
         *
         * @mbg.generated
         */
        public Criteria andPriceEqualToColumn(LitemallQuoteHardware.Column column) {
            addCriterion(new StringBuilder("price = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPriceNotEqualTo(BigDecimal value) {
            addCriterion("price <>", value, "price");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_hardware
         *
         * @mbg.generated
         */
        public Criteria andPriceNotEqualToColumn(LitemallQuoteHardware.Column column) {
            addCriterion(new StringBuilder("price <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPriceGreaterThan(BigDecimal value) {
            addCriterion("price >", value, "price");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_hardware
         *
         * @mbg.generated
         */
        public Criteria andPriceGreaterThanColumn(LitemallQuoteHardware.Column column) {
            addCriterion(new StringBuilder("price > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPriceGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("price >=", value, "price");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_hardware
         *
         * @mbg.generated
         */
        public Criteria andPriceGreaterThanOrEqualToColumn(LitemallQuoteHardware.Column column) {
            addCriterion(new StringBuilder("price >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPriceLessThan(BigDecimal value) {
            addCriterion("price <", value, "price");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_hardware
         *
         * @mbg.generated
         */
        public Criteria andPriceLessThanColumn(LitemallQuoteHardware.Column column) {
            addCriterion(new StringBuilder("price < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPriceLessThanOrEqualTo(BigDecimal value) {
            addCriterion("price <=", value, "price");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_hardware
         *
         * @mbg.generated
         */
        public Criteria andPriceLessThanOrEqualToColumn(LitemallQuoteHardware.Column column) {
            addCriterion(new StringBuilder("price <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPriceIn(List<BigDecimal> values) {
            addCriterion("price in", values, "price");
            return (Criteria) this;
        }

        public Criteria andPriceNotIn(List<BigDecimal> values) {
            addCriterion("price not in", values, "price");
            return (Criteria) this;
        }

        public Criteria andPriceBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("price between", value1, value2, "price");
            return (Criteria) this;
        }

        public Criteria andPriceNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("price not between", value1, value2, "price");
            return (Criteria) this;
        }

        public Criteria andStatusIsNull() {
            addCriterion("`status` is null");
            return (Criteria) this;
        }

        public Criteria andStatusIsNotNull() {
            addCriterion("`status` is not null");
            return (Criteria) this;
        }

        public Criteria andStatusEqualTo(Short value) {
            addCriterion("`status` =", value, "status");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_hardware
         *
         * @mbg.generated
         */
        public Criteria andStatusEqualToColumn(LitemallQuoteHardware.Column column) {
            addCriterion(new StringBuilder("`status` = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStatusNotEqualTo(Short value) {
            addCriterion("`status` <>", value, "status");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_hardware
         *
         * @mbg.generated
         */
        public Criteria andStatusNotEqualToColumn(LitemallQuoteHardware.Column column) {
            addCriterion(new StringBuilder("`status` <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStatusGreaterThan(Short value) {
            addCriterion("`status` >", value, "status");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_hardware
         *
         * @mbg.generated
         */
        public Criteria andStatusGreaterThanColumn(LitemallQuoteHardware.Column column) {
            addCriterion(new StringBuilder("`status` > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStatusGreaterThanOrEqualTo(Short value) {
            addCriterion("`status` >=", value, "status");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_hardware
         *
         * @mbg.generated
         */
        public Criteria andStatusGreaterThanOrEqualToColumn(LitemallQuoteHardware.Column column) {
            addCriterion(new StringBuilder("`status` >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStatusLessThan(Short value) {
            addCriterion("`status` <", value, "status");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_hardware
         *
         * @mbg.generated
         */
        public Criteria andStatusLessThanColumn(LitemallQuoteHardware.Column column) {
            addCriterion(new StringBuilder("`status` < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStatusLessThanOrEqualTo(Short value) {
            addCriterion("`status` <=", value, "status");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_hardware
         *
         * @mbg.generated
         */
        public Criteria andStatusLessThanOrEqualToColumn(LitemallQuoteHardware.Column column) {
            addCriterion(new StringBuilder("`status` <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStatusIn(List<Short> values) {
            addCriterion("`status` in", values, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotIn(List<Short> values) {
            addCriterion("`status` not in", values, "status");
            return (Criteria) this;
        }

        public Criteria andStatusBetween(Short value1, Short value2) {
            addCriterion("`status` between", value1, value2, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotBetween(Short value1, Short value2) {
            addCriterion("`status` not between", value1, value2, "status");
            return (Criteria) this;
        }

        public Criteria andNoteIsNull() {
            addCriterion("note is null");
            return (Criteria) this;
        }

        public Criteria andNoteIsNotNull() {
            addCriterion("note is not null");
            return (Criteria) this;
        }

        public Criteria andNoteEqualTo(String value) {
            addCriterion("note =", value, "note");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_hardware
         *
         * @mbg.generated
         */
        public Criteria andNoteEqualToColumn(LitemallQuoteHardware.Column column) {
            addCriterion(new StringBuilder("note = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNoteNotEqualTo(String value) {
            addCriterion("note <>", value, "note");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_hardware
         *
         * @mbg.generated
         */
        public Criteria andNoteNotEqualToColumn(LitemallQuoteHardware.Column column) {
            addCriterion(new StringBuilder("note <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNoteGreaterThan(String value) {
            addCriterion("note >", value, "note");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_hardware
         *
         * @mbg.generated
         */
        public Criteria andNoteGreaterThanColumn(LitemallQuoteHardware.Column column) {
            addCriterion(new StringBuilder("note > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNoteGreaterThanOrEqualTo(String value) {
            addCriterion("note >=", value, "note");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_hardware
         *
         * @mbg.generated
         */
        public Criteria andNoteGreaterThanOrEqualToColumn(LitemallQuoteHardware.Column column) {
            addCriterion(new StringBuilder("note >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNoteLessThan(String value) {
            addCriterion("note <", value, "note");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_hardware
         *
         * @mbg.generated
         */
        public Criteria andNoteLessThanColumn(LitemallQuoteHardware.Column column) {
            addCriterion(new StringBuilder("note < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNoteLessThanOrEqualTo(String value) {
            addCriterion("note <=", value, "note");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_hardware
         *
         * @mbg.generated
         */
        public Criteria andNoteLessThanOrEqualToColumn(LitemallQuoteHardware.Column column) {
            addCriterion(new StringBuilder("note <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNoteLike(String value) {
            addCriterion("note like", value, "note");
            return (Criteria) this;
        }

        public Criteria andNoteNotLike(String value) {
            addCriterion("note not like", value, "note");
            return (Criteria) this;
        }

        public Criteria andNoteIn(List<String> values) {
            addCriterion("note in", values, "note");
            return (Criteria) this;
        }

        public Criteria andNoteNotIn(List<String> values) {
            addCriterion("note not in", values, "note");
            return (Criteria) this;
        }

        public Criteria andNoteBetween(String value1, String value2) {
            addCriterion("note between", value1, value2, "note");
            return (Criteria) this;
        }

        public Criteria andNoteNotBetween(String value1, String value2) {
            addCriterion("note not between", value1, value2, "note");
            return (Criteria) this;
        }

        public Criteria andAddTimeIsNull() {
            addCriterion("add_time is null");
            return (Criteria) this;
        }

        public Criteria andAddTimeIsNotNull() {
            addCriterion("add_time is not null");
            return (Criteria) this;
        }

        public Criteria andAddTimeEqualTo(LocalDateTime value) {
            addCriterion("add_time =", value, "addTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_hardware
         *
         * @mbg.generated
         */
        public Criteria andAddTimeEqualToColumn(LitemallQuoteHardware.Column column) {
            addCriterion(new StringBuilder("add_time = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddTimeNotEqualTo(LocalDateTime value) {
            addCriterion("add_time <>", value, "addTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_hardware
         *
         * @mbg.generated
         */
        public Criteria andAddTimeNotEqualToColumn(LitemallQuoteHardware.Column column) {
            addCriterion(new StringBuilder("add_time <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddTimeGreaterThan(LocalDateTime value) {
            addCriterion("add_time >", value, "addTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_hardware
         *
         * @mbg.generated
         */
        public Criteria andAddTimeGreaterThanColumn(LitemallQuoteHardware.Column column) {
            addCriterion(new StringBuilder("add_time > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddTimeGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("add_time >=", value, "addTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_hardware
         *
         * @mbg.generated
         */
        public Criteria andAddTimeGreaterThanOrEqualToColumn(LitemallQuoteHardware.Column column) {
            addCriterion(new StringBuilder("add_time >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddTimeLessThan(LocalDateTime value) {
            addCriterion("add_time <", value, "addTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_hardware
         *
         * @mbg.generated
         */
        public Criteria andAddTimeLessThanColumn(LitemallQuoteHardware.Column column) {
            addCriterion(new StringBuilder("add_time < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddTimeLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("add_time <=", value, "addTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_hardware
         *
         * @mbg.generated
         */
        public Criteria andAddTimeLessThanOrEqualToColumn(LitemallQuoteHardware.Column column) {
            addCriterion(new StringBuilder("add_time <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddTimeIn(List<LocalDateTime> values) {
            addCriterion("add_time in", values, "addTime");
            return (Criteria) this;
        }

        public Criteria andAddTimeNotIn(List<LocalDateTime> values) {
            addCriterion("add_time not in", values, "addTime");
            return (Criteria) this;
        }

        public Criteria andAddTimeBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("add_time between", value1, value2, "addTime");
            return (Criteria) this;
        }

        public Criteria andAddTimeNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("add_time not between", value1, value2, "addTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIsNull() {
            addCriterion("update_time is null");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIsNotNull() {
            addCriterion("update_time is not null");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeEqualTo(LocalDateTime value) {
            addCriterion("update_time =", value, "updateTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_hardware
         *
         * @mbg.generated
         */
        public Criteria andUpdateTimeEqualToColumn(LitemallQuoteHardware.Column column) {
            addCriterion(new StringBuilder("update_time = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotEqualTo(LocalDateTime value) {
            addCriterion("update_time <>", value, "updateTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_hardware
         *
         * @mbg.generated
         */
        public Criteria andUpdateTimeNotEqualToColumn(LitemallQuoteHardware.Column column) {
            addCriterion(new StringBuilder("update_time <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeGreaterThan(LocalDateTime value) {
            addCriterion("update_time >", value, "updateTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_hardware
         *
         * @mbg.generated
         */
        public Criteria andUpdateTimeGreaterThanColumn(LitemallQuoteHardware.Column column) {
            addCriterion(new StringBuilder("update_time > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("update_time >=", value, "updateTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_hardware
         *
         * @mbg.generated
         */
        public Criteria andUpdateTimeGreaterThanOrEqualToColumn(LitemallQuoteHardware.Column column) {
            addCriterion(new StringBuilder("update_time >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeLessThan(LocalDateTime value) {
            addCriterion("update_time <", value, "updateTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_hardware
         *
         * @mbg.generated
         */
        public Criteria andUpdateTimeLessThanColumn(LitemallQuoteHardware.Column column) {
            addCriterion(new StringBuilder("update_time < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("update_time <=", value, "updateTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_hardware
         *
         * @mbg.generated
         */
        public Criteria andUpdateTimeLessThanOrEqualToColumn(LitemallQuoteHardware.Column column) {
            addCriterion(new StringBuilder("update_time <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIn(List<LocalDateTime> values) {
            addCriterion("update_time in", values, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotIn(List<LocalDateTime> values) {
            addCriterion("update_time not in", values, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("update_time between", value1, value2, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("update_time not between", value1, value2, "updateTime");
            return (Criteria) this;
        }

        public Criteria andDeletedIsNull() {
            addCriterion("deleted is null");
            return (Criteria) this;
        }

        public Criteria andDeletedIsNotNull() {
            addCriterion("deleted is not null");
            return (Criteria) this;
        }

        public Criteria andDeletedEqualTo(Boolean value) {
            addCriterion("deleted =", value, "deleted");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_hardware
         *
         * @mbg.generated
         */
        public Criteria andDeletedEqualToColumn(LitemallQuoteHardware.Column column) {
            addCriterion(new StringBuilder("deleted = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeletedNotEqualTo(Boolean value) {
            addCriterion("deleted <>", value, "deleted");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_hardware
         *
         * @mbg.generated
         */
        public Criteria andDeletedNotEqualToColumn(LitemallQuoteHardware.Column column) {
            addCriterion(new StringBuilder("deleted <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeletedGreaterThan(Boolean value) {
            addCriterion("deleted >", value, "deleted");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_hardware
         *
         * @mbg.generated
         */
        public Criteria andDeletedGreaterThanColumn(LitemallQuoteHardware.Column column) {
            addCriterion(new StringBuilder("deleted > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeletedGreaterThanOrEqualTo(Boolean value) {
            addCriterion("deleted >=", value, "deleted");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_hardware
         *
         * @mbg.generated
         */
        public Criteria andDeletedGreaterThanOrEqualToColumn(LitemallQuoteHardware.Column column) {
            addCriterion(new StringBuilder("deleted >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeletedLessThan(Boolean value) {
            addCriterion("deleted <", value, "deleted");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_hardware
         *
         * @mbg.generated
         */
        public Criteria andDeletedLessThanColumn(LitemallQuoteHardware.Column column) {
            addCriterion(new StringBuilder("deleted < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeletedLessThanOrEqualTo(Boolean value) {
            addCriterion("deleted <=", value, "deleted");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_hardware
         *
         * @mbg.generated
         */
        public Criteria andDeletedLessThanOrEqualToColumn(LitemallQuoteHardware.Column column) {
            addCriterion(new StringBuilder("deleted <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeletedIn(List<Boolean> values) {
            addCriterion("deleted in", values, "deleted");
            return (Criteria) this;
        }

        public Criteria andDeletedNotIn(List<Boolean> values) {
            addCriterion("deleted not in", values, "deleted");
            return (Criteria) this;
        }

        public Criteria andDeletedBetween(Boolean value1, Boolean value2) {
            addCriterion("deleted between", value1, value2, "deleted");
            return (Criteria) this;
        }

        public Criteria andDeletedNotBetween(Boolean value1, Boolean value2) {
            addCriterion("deleted not between", value1, value2, "deleted");
            return (Criteria) this;
        }

        public Criteria andBillIdIsNull() {
            addCriterion("bill_id is null");
            return (Criteria) this;
        }

        public Criteria andBillIdIsNotNull() {
            addCriterion("bill_id is not null");
            return (Criteria) this;
        }

        public Criteria andBillIdEqualTo(Boolean value) {
            addCriterion("bill_id =", value, "billId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_hardware
         *
         * @mbg.generated
         */
        public Criteria andBillIdEqualToColumn(LitemallQuoteHardware.Column column) {
            addCriterion(new StringBuilder("bill_id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBillIdNotEqualTo(Boolean value) {
            addCriterion("bill_id <>", value, "billId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_hardware
         *
         * @mbg.generated
         */
        public Criteria andBillIdNotEqualToColumn(LitemallQuoteHardware.Column column) {
            addCriterion(new StringBuilder("bill_id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBillIdGreaterThan(Boolean value) {
            addCriterion("bill_id >", value, "billId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_hardware
         *
         * @mbg.generated
         */
        public Criteria andBillIdGreaterThanColumn(LitemallQuoteHardware.Column column) {
            addCriterion(new StringBuilder("bill_id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBillIdGreaterThanOrEqualTo(Boolean value) {
            addCriterion("bill_id >=", value, "billId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_hardware
         *
         * @mbg.generated
         */
        public Criteria andBillIdGreaterThanOrEqualToColumn(LitemallQuoteHardware.Column column) {
            addCriterion(new StringBuilder("bill_id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBillIdLessThan(Boolean value) {
            addCriterion("bill_id <", value, "billId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_hardware
         *
         * @mbg.generated
         */
        public Criteria andBillIdLessThanColumn(LitemallQuoteHardware.Column column) {
            addCriterion(new StringBuilder("bill_id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBillIdLessThanOrEqualTo(Boolean value) {
            addCriterion("bill_id <=", value, "billId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_hardware
         *
         * @mbg.generated
         */
        public Criteria andBillIdLessThanOrEqualToColumn(LitemallQuoteHardware.Column column) {
            addCriterion(new StringBuilder("bill_id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBillIdIn(List<Boolean> values) {
            addCriterion("bill_id in", values, "billId");
            return (Criteria) this;
        }

        public Criteria andBillIdNotIn(List<Boolean> values) {
            addCriterion("bill_id not in", values, "billId");
            return (Criteria) this;
        }

        public Criteria andBillIdBetween(Boolean value1, Boolean value2) {
            addCriterion("bill_id between", value1, value2, "billId");
            return (Criteria) this;
        }

        public Criteria andBillIdNotBetween(Boolean value1, Boolean value2) {
            addCriterion("bill_id not between", value1, value2, "billId");
            return (Criteria) this;
        }

        public Criteria andIsDutyIsNull() {
            addCriterion("is_duty is null");
            return (Criteria) this;
        }

        public Criteria andIsDutyIsNotNull() {
            addCriterion("is_duty is not null");
            return (Criteria) this;
        }

        public Criteria andIsDutyEqualTo(Boolean value) {
            addCriterion("is_duty =", value, "isDuty");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_hardware
         *
         * @mbg.generated
         */
        public Criteria andIsDutyEqualToColumn(LitemallQuoteHardware.Column column) {
            addCriterion(new StringBuilder("is_duty = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIsDutyNotEqualTo(Boolean value) {
            addCriterion("is_duty <>", value, "isDuty");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_hardware
         *
         * @mbg.generated
         */
        public Criteria andIsDutyNotEqualToColumn(LitemallQuoteHardware.Column column) {
            addCriterion(new StringBuilder("is_duty <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIsDutyGreaterThan(Boolean value) {
            addCriterion("is_duty >", value, "isDuty");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_hardware
         *
         * @mbg.generated
         */
        public Criteria andIsDutyGreaterThanColumn(LitemallQuoteHardware.Column column) {
            addCriterion(new StringBuilder("is_duty > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIsDutyGreaterThanOrEqualTo(Boolean value) {
            addCriterion("is_duty >=", value, "isDuty");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_hardware
         *
         * @mbg.generated
         */
        public Criteria andIsDutyGreaterThanOrEqualToColumn(LitemallQuoteHardware.Column column) {
            addCriterion(new StringBuilder("is_duty >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIsDutyLessThan(Boolean value) {
            addCriterion("is_duty <", value, "isDuty");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_hardware
         *
         * @mbg.generated
         */
        public Criteria andIsDutyLessThanColumn(LitemallQuoteHardware.Column column) {
            addCriterion(new StringBuilder("is_duty < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIsDutyLessThanOrEqualTo(Boolean value) {
            addCriterion("is_duty <=", value, "isDuty");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_hardware
         *
         * @mbg.generated
         */
        public Criteria andIsDutyLessThanOrEqualToColumn(LitemallQuoteHardware.Column column) {
            addCriterion(new StringBuilder("is_duty <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIsDutyIn(List<Boolean> values) {
            addCriterion("is_duty in", values, "isDuty");
            return (Criteria) this;
        }

        public Criteria andIsDutyNotIn(List<Boolean> values) {
            addCriterion("is_duty not in", values, "isDuty");
            return (Criteria) this;
        }

        public Criteria andIsDutyBetween(Boolean value1, Boolean value2) {
            addCriterion("is_duty between", value1, value2, "isDuty");
            return (Criteria) this;
        }

        public Criteria andIsDutyNotBetween(Boolean value1, Boolean value2) {
            addCriterion("is_duty not between", value1, value2, "isDuty");
            return (Criteria) this;
        }

        public Criteria andIsCeoIsNull() {
            addCriterion("is_ceo is null");
            return (Criteria) this;
        }

        public Criteria andIsCeoIsNotNull() {
            addCriterion("is_ceo is not null");
            return (Criteria) this;
        }

        public Criteria andIsCeoEqualTo(Boolean value) {
            addCriterion("is_ceo =", value, "isCeo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_hardware
         *
         * @mbg.generated
         */
        public Criteria andIsCeoEqualToColumn(LitemallQuoteHardware.Column column) {
            addCriterion(new StringBuilder("is_ceo = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIsCeoNotEqualTo(Boolean value) {
            addCriterion("is_ceo <>", value, "isCeo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_hardware
         *
         * @mbg.generated
         */
        public Criteria andIsCeoNotEqualToColumn(LitemallQuoteHardware.Column column) {
            addCriterion(new StringBuilder("is_ceo <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIsCeoGreaterThan(Boolean value) {
            addCriterion("is_ceo >", value, "isCeo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_hardware
         *
         * @mbg.generated
         */
        public Criteria andIsCeoGreaterThanColumn(LitemallQuoteHardware.Column column) {
            addCriterion(new StringBuilder("is_ceo > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIsCeoGreaterThanOrEqualTo(Boolean value) {
            addCriterion("is_ceo >=", value, "isCeo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_hardware
         *
         * @mbg.generated
         */
        public Criteria andIsCeoGreaterThanOrEqualToColumn(LitemallQuoteHardware.Column column) {
            addCriterion(new StringBuilder("is_ceo >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIsCeoLessThan(Boolean value) {
            addCriterion("is_ceo <", value, "isCeo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_hardware
         *
         * @mbg.generated
         */
        public Criteria andIsCeoLessThanColumn(LitemallQuoteHardware.Column column) {
            addCriterion(new StringBuilder("is_ceo < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIsCeoLessThanOrEqualTo(Boolean value) {
            addCriterion("is_ceo <=", value, "isCeo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_hardware
         *
         * @mbg.generated
         */
        public Criteria andIsCeoLessThanOrEqualToColumn(LitemallQuoteHardware.Column column) {
            addCriterion(new StringBuilder("is_ceo <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIsCeoIn(List<Boolean> values) {
            addCriterion("is_ceo in", values, "isCeo");
            return (Criteria) this;
        }

        public Criteria andIsCeoNotIn(List<Boolean> values) {
            addCriterion("is_ceo not in", values, "isCeo");
            return (Criteria) this;
        }

        public Criteria andIsCeoBetween(Boolean value1, Boolean value2) {
            addCriterion("is_ceo between", value1, value2, "isCeo");
            return (Criteria) this;
        }

        public Criteria andIsCeoNotBetween(Boolean value1, Boolean value2) {
            addCriterion("is_ceo not between", value1, value2, "isCeo");
            return (Criteria) this;
        }

        public Criteria andIsRecheckIsNull() {
            addCriterion("is_recheck is null");
            return (Criteria) this;
        }

        public Criteria andIsRecheckIsNotNull() {
            addCriterion("is_recheck is not null");
            return (Criteria) this;
        }

        public Criteria andIsRecheckEqualTo(Boolean value) {
            addCriterion("is_recheck =", value, "isRecheck");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_hardware
         *
         * @mbg.generated
         */
        public Criteria andIsRecheckEqualToColumn(LitemallQuoteHardware.Column column) {
            addCriterion(new StringBuilder("is_recheck = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIsRecheckNotEqualTo(Boolean value) {
            addCriterion("is_recheck <>", value, "isRecheck");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_hardware
         *
         * @mbg.generated
         */
        public Criteria andIsRecheckNotEqualToColumn(LitemallQuoteHardware.Column column) {
            addCriterion(new StringBuilder("is_recheck <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIsRecheckGreaterThan(Boolean value) {
            addCriterion("is_recheck >", value, "isRecheck");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_hardware
         *
         * @mbg.generated
         */
        public Criteria andIsRecheckGreaterThanColumn(LitemallQuoteHardware.Column column) {
            addCriterion(new StringBuilder("is_recheck > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIsRecheckGreaterThanOrEqualTo(Boolean value) {
            addCriterion("is_recheck >=", value, "isRecheck");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_hardware
         *
         * @mbg.generated
         */
        public Criteria andIsRecheckGreaterThanOrEqualToColumn(LitemallQuoteHardware.Column column) {
            addCriterion(new StringBuilder("is_recheck >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIsRecheckLessThan(Boolean value) {
            addCriterion("is_recheck <", value, "isRecheck");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_hardware
         *
         * @mbg.generated
         */
        public Criteria andIsRecheckLessThanColumn(LitemallQuoteHardware.Column column) {
            addCriterion(new StringBuilder("is_recheck < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIsRecheckLessThanOrEqualTo(Boolean value) {
            addCriterion("is_recheck <=", value, "isRecheck");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_hardware
         *
         * @mbg.generated
         */
        public Criteria andIsRecheckLessThanOrEqualToColumn(LitemallQuoteHardware.Column column) {
            addCriterion(new StringBuilder("is_recheck <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIsRecheckIn(List<Boolean> values) {
            addCriterion("is_recheck in", values, "isRecheck");
            return (Criteria) this;
        }

        public Criteria andIsRecheckNotIn(List<Boolean> values) {
            addCriterion("is_recheck not in", values, "isRecheck");
            return (Criteria) this;
        }

        public Criteria andIsRecheckBetween(Boolean value1, Boolean value2) {
            addCriterion("is_recheck between", value1, value2, "isRecheck");
            return (Criteria) this;
        }

        public Criteria andIsRecheckNotBetween(Boolean value1, Boolean value2) {
            addCriterion("is_recheck not between", value1, value2, "isRecheck");
            return (Criteria) this;
        }

        public Criteria andMaterialIsNull() {
            addCriterion("material is null");
            return (Criteria) this;
        }

        public Criteria andMaterialIsNotNull() {
            addCriterion("material is not null");
            return (Criteria) this;
        }

        public Criteria andMaterialEqualTo(String value) {
            addCriterion("material =", value, "material");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_hardware
         *
         * @mbg.generated
         */
        public Criteria andMaterialEqualToColumn(LitemallQuoteHardware.Column column) {
            addCriterion(new StringBuilder("material = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMaterialNotEqualTo(String value) {
            addCriterion("material <>", value, "material");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_hardware
         *
         * @mbg.generated
         */
        public Criteria andMaterialNotEqualToColumn(LitemallQuoteHardware.Column column) {
            addCriterion(new StringBuilder("material <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMaterialGreaterThan(String value) {
            addCriterion("material >", value, "material");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_hardware
         *
         * @mbg.generated
         */
        public Criteria andMaterialGreaterThanColumn(LitemallQuoteHardware.Column column) {
            addCriterion(new StringBuilder("material > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMaterialGreaterThanOrEqualTo(String value) {
            addCriterion("material >=", value, "material");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_hardware
         *
         * @mbg.generated
         */
        public Criteria andMaterialGreaterThanOrEqualToColumn(LitemallQuoteHardware.Column column) {
            addCriterion(new StringBuilder("material >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMaterialLessThan(String value) {
            addCriterion("material <", value, "material");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_hardware
         *
         * @mbg.generated
         */
        public Criteria andMaterialLessThanColumn(LitemallQuoteHardware.Column column) {
            addCriterion(new StringBuilder("material < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMaterialLessThanOrEqualTo(String value) {
            addCriterion("material <=", value, "material");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_hardware
         *
         * @mbg.generated
         */
        public Criteria andMaterialLessThanOrEqualToColumn(LitemallQuoteHardware.Column column) {
            addCriterion(new StringBuilder("material <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMaterialLike(String value) {
            addCriterion("material like", value, "material");
            return (Criteria) this;
        }

        public Criteria andMaterialNotLike(String value) {
            addCriterion("material not like", value, "material");
            return (Criteria) this;
        }

        public Criteria andMaterialIn(List<String> values) {
            addCriterion("material in", values, "material");
            return (Criteria) this;
        }

        public Criteria andMaterialNotIn(List<String> values) {
            addCriterion("material not in", values, "material");
            return (Criteria) this;
        }

        public Criteria andMaterialBetween(String value1, String value2) {
            addCriterion("material between", value1, value2, "material");
            return (Criteria) this;
        }

        public Criteria andMaterialNotBetween(String value1, String value2) {
            addCriterion("material not between", value1, value2, "material");
            return (Criteria) this;
        }

        public Criteria andQuantityYearIsNull() {
            addCriterion("quantity_year is null");
            return (Criteria) this;
        }

        public Criteria andQuantityYearIsNotNull() {
            addCriterion("quantity_year is not null");
            return (Criteria) this;
        }

        public Criteria andQuantityYearEqualTo(BigDecimal value) {
            addCriterion("quantity_year =", value, "quantityYear");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_hardware
         *
         * @mbg.generated
         */
        public Criteria andQuantityYearEqualToColumn(LitemallQuoteHardware.Column column) {
            addCriterion(new StringBuilder("quantity_year = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andQuantityYearNotEqualTo(BigDecimal value) {
            addCriterion("quantity_year <>", value, "quantityYear");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_hardware
         *
         * @mbg.generated
         */
        public Criteria andQuantityYearNotEqualToColumn(LitemallQuoteHardware.Column column) {
            addCriterion(new StringBuilder("quantity_year <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andQuantityYearGreaterThan(BigDecimal value) {
            addCriterion("quantity_year >", value, "quantityYear");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_hardware
         *
         * @mbg.generated
         */
        public Criteria andQuantityYearGreaterThanColumn(LitemallQuoteHardware.Column column) {
            addCriterion(new StringBuilder("quantity_year > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andQuantityYearGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("quantity_year >=", value, "quantityYear");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_hardware
         *
         * @mbg.generated
         */
        public Criteria andQuantityYearGreaterThanOrEqualToColumn(LitemallQuoteHardware.Column column) {
            addCriterion(new StringBuilder("quantity_year >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andQuantityYearLessThan(BigDecimal value) {
            addCriterion("quantity_year <", value, "quantityYear");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_hardware
         *
         * @mbg.generated
         */
        public Criteria andQuantityYearLessThanColumn(LitemallQuoteHardware.Column column) {
            addCriterion(new StringBuilder("quantity_year < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andQuantityYearLessThanOrEqualTo(BigDecimal value) {
            addCriterion("quantity_year <=", value, "quantityYear");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_hardware
         *
         * @mbg.generated
         */
        public Criteria andQuantityYearLessThanOrEqualToColumn(LitemallQuoteHardware.Column column) {
            addCriterion(new StringBuilder("quantity_year <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andQuantityYearIn(List<BigDecimal> values) {
            addCriterion("quantity_year in", values, "quantityYear");
            return (Criteria) this;
        }

        public Criteria andQuantityYearNotIn(List<BigDecimal> values) {
            addCriterion("quantity_year not in", values, "quantityYear");
            return (Criteria) this;
        }

        public Criteria andQuantityYearBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("quantity_year between", value1, value2, "quantityYear");
            return (Criteria) this;
        }

        public Criteria andQuantityYearNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("quantity_year not between", value1, value2, "quantityYear");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table litemall_quote_hardware
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {
        /**
         * This field was generated by MyBatis Generator.
         * This field corresponds to the database table litemall_quote_hardware
         *
         * @mbg.generated
         */
        private LitemallQuoteHardwareExample example;

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_hardware
         *
         * @mbg.generated
         */
        protected Criteria(LitemallQuoteHardwareExample example) {
            super();
            this.example = example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_hardware
         *
         * @mbg.generated
         */
        public LitemallQuoteHardwareExample example() {
            return this.example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_hardware
         *
         * @mbg.generated
         */
        @Deprecated
        public Criteria andIf(boolean ifAdd, ICriteriaAdd add) {
            if (ifAdd) {
                add.add(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_hardware
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then) {
            if (condition) {
                then.criteria(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_hardware
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then, ICriteriaWhen otherwise) {
            if (condition) {
                then.criteria(this);
            } else {
                otherwise.criteria(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_hardware
         *
         * @mbg.generated
         */
        public Criteria andLogicalDeleted(boolean deleted) {
            return deleted ? andDeletedEqualTo(LitemallQuoteHardware.Deleted.IS_DELETED.value()) : andDeletedNotEqualTo(LitemallQuoteHardware.Deleted.IS_DELETED.value());
        }

        @Deprecated
        public interface ICriteriaAdd {
            /**
             * This method was generated by MyBatis Generator.
             * This method corresponds to the database table litemall_quote_hardware
             *
             * @mbg.generated
             */
            Criteria add(Criteria add);
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table litemall_quote_hardware
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }

    public interface ICriteriaWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_hardware
         *
         * @mbg.generated
         */
        void criteria(Criteria criteria);
    }

    public interface IExampleWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_quote_hardware
         *
         * @mbg.generated
         */
        void example(org.linlinjava.litemall.db.domain.LitemallQuoteHardwareExample example);
    }
}