package org.linlinjava.litemall.db.domain;

import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;

public class LitemallRequoteExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table litemall_requote
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table litemall_requote
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table litemall_requote
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_requote
     *
     * @mbg.generated
     */
    public LitemallRequoteExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_requote
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_requote
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_requote
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_requote
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_requote
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_requote
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_requote
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_requote
     *
     * @mbg.generated
     */
    public LitemallRequoteExample orderBy(String orderByClause) {
        this.setOrderByClause(orderByClause);
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_requote
     *
     * @mbg.generated
     */
    public LitemallRequoteExample orderBy(String ... orderByClauses) {
        StringBuffer sb = new StringBuffer();
        for (int i = 0; i < orderByClauses.length; i++) {
            sb.append(orderByClauses[i]);
            if (i < orderByClauses.length - 1) {
                sb.append(" , ");
            }
        }
        this.setOrderByClause(sb.toString());
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_requote
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_requote
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria(this);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_requote
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_requote
     *
     * @mbg.generated
     */
    public static Criteria newAndCreateCriteria() {
        LitemallRequoteExample example = new LitemallRequoteExample();
        return example.createCriteria();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_requote
     *
     * @mbg.generated
     */
    public LitemallRequoteExample when(boolean condition, IExampleWhen then) {
        if (condition) {
            then.example(this);
        }
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_requote
     *
     * @mbg.generated
     */
    public LitemallRequoteExample when(boolean condition, IExampleWhen then, IExampleWhen otherwise) {
        if (condition) {
            then.example(this);
        } else {
            otherwise.example(this);
        }
        return this;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table litemall_requote
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_requote
         *
         * @mbg.generated
         */
        public Criteria andIdEqualToColumn(LitemallRequote.Column column) {
            addCriterion(new StringBuilder("id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_requote
         *
         * @mbg.generated
         */
        public Criteria andIdNotEqualToColumn(LitemallRequote.Column column) {
            addCriterion(new StringBuilder("id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_requote
         *
         * @mbg.generated
         */
        public Criteria andIdGreaterThanColumn(LitemallRequote.Column column) {
            addCriterion(new StringBuilder("id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_requote
         *
         * @mbg.generated
         */
        public Criteria andIdGreaterThanOrEqualToColumn(LitemallRequote.Column column) {
            addCriterion(new StringBuilder("id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_requote
         *
         * @mbg.generated
         */
        public Criteria andIdLessThanColumn(LitemallRequote.Column column) {
            addCriterion(new StringBuilder("id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_requote
         *
         * @mbg.generated
         */
        public Criteria andIdLessThanOrEqualToColumn(LitemallRequote.Column column) {
            addCriterion(new StringBuilder("id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andQuoteIdIsNull() {
            addCriterion("quote_id is null");
            return (Criteria) this;
        }

        public Criteria andQuoteIdIsNotNull() {
            addCriterion("quote_id is not null");
            return (Criteria) this;
        }

        public Criteria andQuoteIdEqualTo(Integer value) {
            addCriterion("quote_id =", value, "quoteId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_requote
         *
         * @mbg.generated
         */
        public Criteria andQuoteIdEqualToColumn(LitemallRequote.Column column) {
            addCriterion(new StringBuilder("quote_id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andQuoteIdNotEqualTo(Integer value) {
            addCriterion("quote_id <>", value, "quoteId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_requote
         *
         * @mbg.generated
         */
        public Criteria andQuoteIdNotEqualToColumn(LitemallRequote.Column column) {
            addCriterion(new StringBuilder("quote_id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andQuoteIdGreaterThan(Integer value) {
            addCriterion("quote_id >", value, "quoteId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_requote
         *
         * @mbg.generated
         */
        public Criteria andQuoteIdGreaterThanColumn(LitemallRequote.Column column) {
            addCriterion(new StringBuilder("quote_id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andQuoteIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("quote_id >=", value, "quoteId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_requote
         *
         * @mbg.generated
         */
        public Criteria andQuoteIdGreaterThanOrEqualToColumn(LitemallRequote.Column column) {
            addCriterion(new StringBuilder("quote_id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andQuoteIdLessThan(Integer value) {
            addCriterion("quote_id <", value, "quoteId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_requote
         *
         * @mbg.generated
         */
        public Criteria andQuoteIdLessThanColumn(LitemallRequote.Column column) {
            addCriterion(new StringBuilder("quote_id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andQuoteIdLessThanOrEqualTo(Integer value) {
            addCriterion("quote_id <=", value, "quoteId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_requote
         *
         * @mbg.generated
         */
        public Criteria andQuoteIdLessThanOrEqualToColumn(LitemallRequote.Column column) {
            addCriterion(new StringBuilder("quote_id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andQuoteIdIn(List<Integer> values) {
            addCriterion("quote_id in", values, "quoteId");
            return (Criteria) this;
        }

        public Criteria andQuoteIdNotIn(List<Integer> values) {
            addCriterion("quote_id not in", values, "quoteId");
            return (Criteria) this;
        }

        public Criteria andQuoteIdBetween(Integer value1, Integer value2) {
            addCriterion("quote_id between", value1, value2, "quoteId");
            return (Criteria) this;
        }

        public Criteria andQuoteIdNotBetween(Integer value1, Integer value2) {
            addCriterion("quote_id not between", value1, value2, "quoteId");
            return (Criteria) this;
        }

        public Criteria andAdminIdIsNull() {
            addCriterion("admin_id is null");
            return (Criteria) this;
        }

        public Criteria andAdminIdIsNotNull() {
            addCriterion("admin_id is not null");
            return (Criteria) this;
        }

        public Criteria andAdminIdEqualTo(Integer value) {
            addCriterion("admin_id =", value, "adminId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_requote
         *
         * @mbg.generated
         */
        public Criteria andAdminIdEqualToColumn(LitemallRequote.Column column) {
            addCriterion(new StringBuilder("admin_id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAdminIdNotEqualTo(Integer value) {
            addCriterion("admin_id <>", value, "adminId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_requote
         *
         * @mbg.generated
         */
        public Criteria andAdminIdNotEqualToColumn(LitemallRequote.Column column) {
            addCriterion(new StringBuilder("admin_id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAdminIdGreaterThan(Integer value) {
            addCriterion("admin_id >", value, "adminId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_requote
         *
         * @mbg.generated
         */
        public Criteria andAdminIdGreaterThanColumn(LitemallRequote.Column column) {
            addCriterion(new StringBuilder("admin_id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAdminIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("admin_id >=", value, "adminId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_requote
         *
         * @mbg.generated
         */
        public Criteria andAdminIdGreaterThanOrEqualToColumn(LitemallRequote.Column column) {
            addCriterion(new StringBuilder("admin_id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAdminIdLessThan(Integer value) {
            addCriterion("admin_id <", value, "adminId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_requote
         *
         * @mbg.generated
         */
        public Criteria andAdminIdLessThanColumn(LitemallRequote.Column column) {
            addCriterion(new StringBuilder("admin_id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAdminIdLessThanOrEqualTo(Integer value) {
            addCriterion("admin_id <=", value, "adminId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_requote
         *
         * @mbg.generated
         */
        public Criteria andAdminIdLessThanOrEqualToColumn(LitemallRequote.Column column) {
            addCriterion(new StringBuilder("admin_id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAdminIdIn(List<Integer> values) {
            addCriterion("admin_id in", values, "adminId");
            return (Criteria) this;
        }

        public Criteria andAdminIdNotIn(List<Integer> values) {
            addCriterion("admin_id not in", values, "adminId");
            return (Criteria) this;
        }

        public Criteria andAdminIdBetween(Integer value1, Integer value2) {
            addCriterion("admin_id between", value1, value2, "adminId");
            return (Criteria) this;
        }

        public Criteria andAdminIdNotBetween(Integer value1, Integer value2) {
            addCriterion("admin_id not between", value1, value2, "adminId");
            return (Criteria) this;
        }

        public Criteria andAdminNameIsNull() {
            addCriterion("admin_name is null");
            return (Criteria) this;
        }

        public Criteria andAdminNameIsNotNull() {
            addCriterion("admin_name is not null");
            return (Criteria) this;
        }

        public Criteria andAdminNameEqualTo(String value) {
            addCriterion("admin_name =", value, "adminName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_requote
         *
         * @mbg.generated
         */
        public Criteria andAdminNameEqualToColumn(LitemallRequote.Column column) {
            addCriterion(new StringBuilder("admin_name = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAdminNameNotEqualTo(String value) {
            addCriterion("admin_name <>", value, "adminName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_requote
         *
         * @mbg.generated
         */
        public Criteria andAdminNameNotEqualToColumn(LitemallRequote.Column column) {
            addCriterion(new StringBuilder("admin_name <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAdminNameGreaterThan(String value) {
            addCriterion("admin_name >", value, "adminName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_requote
         *
         * @mbg.generated
         */
        public Criteria andAdminNameGreaterThanColumn(LitemallRequote.Column column) {
            addCriterion(new StringBuilder("admin_name > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAdminNameGreaterThanOrEqualTo(String value) {
            addCriterion("admin_name >=", value, "adminName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_requote
         *
         * @mbg.generated
         */
        public Criteria andAdminNameGreaterThanOrEqualToColumn(LitemallRequote.Column column) {
            addCriterion(new StringBuilder("admin_name >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAdminNameLessThan(String value) {
            addCriterion("admin_name <", value, "adminName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_requote
         *
         * @mbg.generated
         */
        public Criteria andAdminNameLessThanColumn(LitemallRequote.Column column) {
            addCriterion(new StringBuilder("admin_name < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAdminNameLessThanOrEqualTo(String value) {
            addCriterion("admin_name <=", value, "adminName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_requote
         *
         * @mbg.generated
         */
        public Criteria andAdminNameLessThanOrEqualToColumn(LitemallRequote.Column column) {
            addCriterion(new StringBuilder("admin_name <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAdminNameLike(String value) {
            addCriterion("admin_name like", value, "adminName");
            return (Criteria) this;
        }

        public Criteria andAdminNameNotLike(String value) {
            addCriterion("admin_name not like", value, "adminName");
            return (Criteria) this;
        }

        public Criteria andAdminNameIn(List<String> values) {
            addCriterion("admin_name in", values, "adminName");
            return (Criteria) this;
        }

        public Criteria andAdminNameNotIn(List<String> values) {
            addCriterion("admin_name not in", values, "adminName");
            return (Criteria) this;
        }

        public Criteria andAdminNameBetween(String value1, String value2) {
            addCriterion("admin_name between", value1, value2, "adminName");
            return (Criteria) this;
        }

        public Criteria andAdminNameNotBetween(String value1, String value2) {
            addCriterion("admin_name not between", value1, value2, "adminName");
            return (Criteria) this;
        }

        public Criteria andQuoteDateIsNull() {
            addCriterion("quote_date is null");
            return (Criteria) this;
        }

        public Criteria andQuoteDateIsNotNull() {
            addCriterion("quote_date is not null");
            return (Criteria) this;
        }

        public Criteria andQuoteDateEqualTo(LocalDateTime value) {
            addCriterion("quote_date =", value, "quoteDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_requote
         *
         * @mbg.generated
         */
        public Criteria andQuoteDateEqualToColumn(LitemallRequote.Column column) {
            addCriterion(new StringBuilder("quote_date = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andQuoteDateNotEqualTo(LocalDateTime value) {
            addCriterion("quote_date <>", value, "quoteDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_requote
         *
         * @mbg.generated
         */
        public Criteria andQuoteDateNotEqualToColumn(LitemallRequote.Column column) {
            addCriterion(new StringBuilder("quote_date <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andQuoteDateGreaterThan(LocalDateTime value) {
            addCriterion("quote_date >", value, "quoteDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_requote
         *
         * @mbg.generated
         */
        public Criteria andQuoteDateGreaterThanColumn(LitemallRequote.Column column) {
            addCriterion(new StringBuilder("quote_date > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andQuoteDateGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("quote_date >=", value, "quoteDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_requote
         *
         * @mbg.generated
         */
        public Criteria andQuoteDateGreaterThanOrEqualToColumn(LitemallRequote.Column column) {
            addCriterion(new StringBuilder("quote_date >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andQuoteDateLessThan(LocalDateTime value) {
            addCriterion("quote_date <", value, "quoteDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_requote
         *
         * @mbg.generated
         */
        public Criteria andQuoteDateLessThanColumn(LitemallRequote.Column column) {
            addCriterion(new StringBuilder("quote_date < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andQuoteDateLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("quote_date <=", value, "quoteDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_requote
         *
         * @mbg.generated
         */
        public Criteria andQuoteDateLessThanOrEqualToColumn(LitemallRequote.Column column) {
            addCriterion(new StringBuilder("quote_date <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andQuoteDateIn(List<LocalDateTime> values) {
            addCriterion("quote_date in", values, "quoteDate");
            return (Criteria) this;
        }

        public Criteria andQuoteDateNotIn(List<LocalDateTime> values) {
            addCriterion("quote_date not in", values, "quoteDate");
            return (Criteria) this;
        }

        public Criteria andQuoteDateBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("quote_date between", value1, value2, "quoteDate");
            return (Criteria) this;
        }

        public Criteria andQuoteDateNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("quote_date not between", value1, value2, "quoteDate");
            return (Criteria) this;
        }

        public Criteria andNoteIsNull() {
            addCriterion("note is null");
            return (Criteria) this;
        }

        public Criteria andNoteIsNotNull() {
            addCriterion("note is not null");
            return (Criteria) this;
        }

        public Criteria andNoteEqualTo(String value) {
            addCriterion("note =", value, "note");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_requote
         *
         * @mbg.generated
         */
        public Criteria andNoteEqualToColumn(LitemallRequote.Column column) {
            addCriterion(new StringBuilder("note = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNoteNotEqualTo(String value) {
            addCriterion("note <>", value, "note");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_requote
         *
         * @mbg.generated
         */
        public Criteria andNoteNotEqualToColumn(LitemallRequote.Column column) {
            addCriterion(new StringBuilder("note <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNoteGreaterThan(String value) {
            addCriterion("note >", value, "note");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_requote
         *
         * @mbg.generated
         */
        public Criteria andNoteGreaterThanColumn(LitemallRequote.Column column) {
            addCriterion(new StringBuilder("note > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNoteGreaterThanOrEqualTo(String value) {
            addCriterion("note >=", value, "note");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_requote
         *
         * @mbg.generated
         */
        public Criteria andNoteGreaterThanOrEqualToColumn(LitemallRequote.Column column) {
            addCriterion(new StringBuilder("note >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNoteLessThan(String value) {
            addCriterion("note <", value, "note");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_requote
         *
         * @mbg.generated
         */
        public Criteria andNoteLessThanColumn(LitemallRequote.Column column) {
            addCriterion(new StringBuilder("note < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNoteLessThanOrEqualTo(String value) {
            addCriterion("note <=", value, "note");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_requote
         *
         * @mbg.generated
         */
        public Criteria andNoteLessThanOrEqualToColumn(LitemallRequote.Column column) {
            addCriterion(new StringBuilder("note <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNoteLike(String value) {
            addCriterion("note like", value, "note");
            return (Criteria) this;
        }

        public Criteria andNoteNotLike(String value) {
            addCriterion("note not like", value, "note");
            return (Criteria) this;
        }

        public Criteria andNoteIn(List<String> values) {
            addCriterion("note in", values, "note");
            return (Criteria) this;
        }

        public Criteria andNoteNotIn(List<String> values) {
            addCriterion("note not in", values, "note");
            return (Criteria) this;
        }

        public Criteria andNoteBetween(String value1, String value2) {
            addCriterion("note between", value1, value2, "note");
            return (Criteria) this;
        }

        public Criteria andNoteNotBetween(String value1, String value2) {
            addCriterion("note not between", value1, value2, "note");
            return (Criteria) this;
        }

        public Criteria andRequoteExcelIsNull() {
            addCriterion("requote_excel is null");
            return (Criteria) this;
        }

        public Criteria andRequoteExcelIsNotNull() {
            addCriterion("requote_excel is not null");
            return (Criteria) this;
        }

        public Criteria andRequoteExcelEqualTo(String value) {
            addCriterion("requote_excel =", value, "requoteExcel");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_requote
         *
         * @mbg.generated
         */
        public Criteria andRequoteExcelEqualToColumn(LitemallRequote.Column column) {
            addCriterion(new StringBuilder("requote_excel = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRequoteExcelNotEqualTo(String value) {
            addCriterion("requote_excel <>", value, "requoteExcel");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_requote
         *
         * @mbg.generated
         */
        public Criteria andRequoteExcelNotEqualToColumn(LitemallRequote.Column column) {
            addCriterion(new StringBuilder("requote_excel <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRequoteExcelGreaterThan(String value) {
            addCriterion("requote_excel >", value, "requoteExcel");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_requote
         *
         * @mbg.generated
         */
        public Criteria andRequoteExcelGreaterThanColumn(LitemallRequote.Column column) {
            addCriterion(new StringBuilder("requote_excel > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRequoteExcelGreaterThanOrEqualTo(String value) {
            addCriterion("requote_excel >=", value, "requoteExcel");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_requote
         *
         * @mbg.generated
         */
        public Criteria andRequoteExcelGreaterThanOrEqualToColumn(LitemallRequote.Column column) {
            addCriterion(new StringBuilder("requote_excel >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRequoteExcelLessThan(String value) {
            addCriterion("requote_excel <", value, "requoteExcel");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_requote
         *
         * @mbg.generated
         */
        public Criteria andRequoteExcelLessThanColumn(LitemallRequote.Column column) {
            addCriterion(new StringBuilder("requote_excel < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRequoteExcelLessThanOrEqualTo(String value) {
            addCriterion("requote_excel <=", value, "requoteExcel");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_requote
         *
         * @mbg.generated
         */
        public Criteria andRequoteExcelLessThanOrEqualToColumn(LitemallRequote.Column column) {
            addCriterion(new StringBuilder("requote_excel <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRequoteExcelLike(String value) {
            addCriterion("requote_excel like", value, "requoteExcel");
            return (Criteria) this;
        }

        public Criteria andRequoteExcelNotLike(String value) {
            addCriterion("requote_excel not like", value, "requoteExcel");
            return (Criteria) this;
        }

        public Criteria andRequoteExcelIn(List<String> values) {
            addCriterion("requote_excel in", values, "requoteExcel");
            return (Criteria) this;
        }

        public Criteria andRequoteExcelNotIn(List<String> values) {
            addCriterion("requote_excel not in", values, "requoteExcel");
            return (Criteria) this;
        }

        public Criteria andRequoteExcelBetween(String value1, String value2) {
            addCriterion("requote_excel between", value1, value2, "requoteExcel");
            return (Criteria) this;
        }

        public Criteria andRequoteExcelNotBetween(String value1, String value2) {
            addCriterion("requote_excel not between", value1, value2, "requoteExcel");
            return (Criteria) this;
        }

        public Criteria andStatusIsNull() {
            addCriterion("`status` is null");
            return (Criteria) this;
        }

        public Criteria andStatusIsNotNull() {
            addCriterion("`status` is not null");
            return (Criteria) this;
        }

        public Criteria andStatusEqualTo(Short value) {
            addCriterion("`status` =", value, "status");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_requote
         *
         * @mbg.generated
         */
        public Criteria andStatusEqualToColumn(LitemallRequote.Column column) {
            addCriterion(new StringBuilder("`status` = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStatusNotEqualTo(Short value) {
            addCriterion("`status` <>", value, "status");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_requote
         *
         * @mbg.generated
         */
        public Criteria andStatusNotEqualToColumn(LitemallRequote.Column column) {
            addCriterion(new StringBuilder("`status` <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStatusGreaterThan(Short value) {
            addCriterion("`status` >", value, "status");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_requote
         *
         * @mbg.generated
         */
        public Criteria andStatusGreaterThanColumn(LitemallRequote.Column column) {
            addCriterion(new StringBuilder("`status` > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStatusGreaterThanOrEqualTo(Short value) {
            addCriterion("`status` >=", value, "status");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_requote
         *
         * @mbg.generated
         */
        public Criteria andStatusGreaterThanOrEqualToColumn(LitemallRequote.Column column) {
            addCriterion(new StringBuilder("`status` >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStatusLessThan(Short value) {
            addCriterion("`status` <", value, "status");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_requote
         *
         * @mbg.generated
         */
        public Criteria andStatusLessThanColumn(LitemallRequote.Column column) {
            addCriterion(new StringBuilder("`status` < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStatusLessThanOrEqualTo(Short value) {
            addCriterion("`status` <=", value, "status");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_requote
         *
         * @mbg.generated
         */
        public Criteria andStatusLessThanOrEqualToColumn(LitemallRequote.Column column) {
            addCriterion(new StringBuilder("`status` <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStatusIn(List<Short> values) {
            addCriterion("`status` in", values, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotIn(List<Short> values) {
            addCriterion("`status` not in", values, "status");
            return (Criteria) this;
        }

        public Criteria andStatusBetween(Short value1, Short value2) {
            addCriterion("`status` between", value1, value2, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotBetween(Short value1, Short value2) {
            addCriterion("`status` not between", value1, value2, "status");
            return (Criteria) this;
        }

        public Criteria andQuoteModelExcelSupplyIsNull() {
            addCriterion("quote_model_excel_supply is null");
            return (Criteria) this;
        }

        public Criteria andQuoteModelExcelSupplyIsNotNull() {
            addCriterion("quote_model_excel_supply is not null");
            return (Criteria) this;
        }

        public Criteria andQuoteModelExcelSupplyEqualTo(String value) {
            addCriterion("quote_model_excel_supply =", value, "quoteModelExcelSupply");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_requote
         *
         * @mbg.generated
         */
        public Criteria andQuoteModelExcelSupplyEqualToColumn(LitemallRequote.Column column) {
            addCriterion(new StringBuilder("quote_model_excel_supply = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andQuoteModelExcelSupplyNotEqualTo(String value) {
            addCriterion("quote_model_excel_supply <>", value, "quoteModelExcelSupply");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_requote
         *
         * @mbg.generated
         */
        public Criteria andQuoteModelExcelSupplyNotEqualToColumn(LitemallRequote.Column column) {
            addCriterion(new StringBuilder("quote_model_excel_supply <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andQuoteModelExcelSupplyGreaterThan(String value) {
            addCriterion("quote_model_excel_supply >", value, "quoteModelExcelSupply");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_requote
         *
         * @mbg.generated
         */
        public Criteria andQuoteModelExcelSupplyGreaterThanColumn(LitemallRequote.Column column) {
            addCriterion(new StringBuilder("quote_model_excel_supply > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andQuoteModelExcelSupplyGreaterThanOrEqualTo(String value) {
            addCriterion("quote_model_excel_supply >=", value, "quoteModelExcelSupply");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_requote
         *
         * @mbg.generated
         */
        public Criteria andQuoteModelExcelSupplyGreaterThanOrEqualToColumn(LitemallRequote.Column column) {
            addCriterion(new StringBuilder("quote_model_excel_supply >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andQuoteModelExcelSupplyLessThan(String value) {
            addCriterion("quote_model_excel_supply <", value, "quoteModelExcelSupply");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_requote
         *
         * @mbg.generated
         */
        public Criteria andQuoteModelExcelSupplyLessThanColumn(LitemallRequote.Column column) {
            addCriterion(new StringBuilder("quote_model_excel_supply < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andQuoteModelExcelSupplyLessThanOrEqualTo(String value) {
            addCriterion("quote_model_excel_supply <=", value, "quoteModelExcelSupply");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_requote
         *
         * @mbg.generated
         */
        public Criteria andQuoteModelExcelSupplyLessThanOrEqualToColumn(LitemallRequote.Column column) {
            addCriterion(new StringBuilder("quote_model_excel_supply <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andQuoteModelExcelSupplyLike(String value) {
            addCriterion("quote_model_excel_supply like", value, "quoteModelExcelSupply");
            return (Criteria) this;
        }

        public Criteria andQuoteModelExcelSupplyNotLike(String value) {
            addCriterion("quote_model_excel_supply not like", value, "quoteModelExcelSupply");
            return (Criteria) this;
        }

        public Criteria andQuoteModelExcelSupplyIn(List<String> values) {
            addCriterion("quote_model_excel_supply in", values, "quoteModelExcelSupply");
            return (Criteria) this;
        }

        public Criteria andQuoteModelExcelSupplyNotIn(List<String> values) {
            addCriterion("quote_model_excel_supply not in", values, "quoteModelExcelSupply");
            return (Criteria) this;
        }

        public Criteria andQuoteModelExcelSupplyBetween(String value1, String value2) {
            addCriterion("quote_model_excel_supply between", value1, value2, "quoteModelExcelSupply");
            return (Criteria) this;
        }

        public Criteria andQuoteModelExcelSupplyNotBetween(String value1, String value2) {
            addCriterion("quote_model_excel_supply not between", value1, value2, "quoteModelExcelSupply");
            return (Criteria) this;
        }

        public Criteria andSubmitDateIsNull() {
            addCriterion("submit_date is null");
            return (Criteria) this;
        }

        public Criteria andSubmitDateIsNotNull() {
            addCriterion("submit_date is not null");
            return (Criteria) this;
        }

        public Criteria andSubmitDateEqualTo(LocalDateTime value) {
            addCriterion("submit_date =", value, "submitDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_requote
         *
         * @mbg.generated
         */
        public Criteria andSubmitDateEqualToColumn(LitemallRequote.Column column) {
            addCriterion(new StringBuilder("submit_date = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSubmitDateNotEqualTo(LocalDateTime value) {
            addCriterion("submit_date <>", value, "submitDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_requote
         *
         * @mbg.generated
         */
        public Criteria andSubmitDateNotEqualToColumn(LitemallRequote.Column column) {
            addCriterion(new StringBuilder("submit_date <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSubmitDateGreaterThan(LocalDateTime value) {
            addCriterion("submit_date >", value, "submitDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_requote
         *
         * @mbg.generated
         */
        public Criteria andSubmitDateGreaterThanColumn(LitemallRequote.Column column) {
            addCriterion(new StringBuilder("submit_date > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSubmitDateGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("submit_date >=", value, "submitDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_requote
         *
         * @mbg.generated
         */
        public Criteria andSubmitDateGreaterThanOrEqualToColumn(LitemallRequote.Column column) {
            addCriterion(new StringBuilder("submit_date >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSubmitDateLessThan(LocalDateTime value) {
            addCriterion("submit_date <", value, "submitDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_requote
         *
         * @mbg.generated
         */
        public Criteria andSubmitDateLessThanColumn(LitemallRequote.Column column) {
            addCriterion(new StringBuilder("submit_date < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSubmitDateLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("submit_date <=", value, "submitDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_requote
         *
         * @mbg.generated
         */
        public Criteria andSubmitDateLessThanOrEqualToColumn(LitemallRequote.Column column) {
            addCriterion(new StringBuilder("submit_date <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSubmitDateIn(List<LocalDateTime> values) {
            addCriterion("submit_date in", values, "submitDate");
            return (Criteria) this;
        }

        public Criteria andSubmitDateNotIn(List<LocalDateTime> values) {
            addCriterion("submit_date not in", values, "submitDate");
            return (Criteria) this;
        }

        public Criteria andSubmitDateBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("submit_date between", value1, value2, "submitDate");
            return (Criteria) this;
        }

        public Criteria andSubmitDateNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("submit_date not between", value1, value2, "submitDate");
            return (Criteria) this;
        }

        public Criteria andDeadDateIsNull() {
            addCriterion("dead_date is null");
            return (Criteria) this;
        }

        public Criteria andDeadDateIsNotNull() {
            addCriterion("dead_date is not null");
            return (Criteria) this;
        }

        public Criteria andDeadDateEqualTo(LocalDateTime value) {
            addCriterion("dead_date =", value, "deadDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_requote
         *
         * @mbg.generated
         */
        public Criteria andDeadDateEqualToColumn(LitemallRequote.Column column) {
            addCriterion(new StringBuilder("dead_date = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeadDateNotEqualTo(LocalDateTime value) {
            addCriterion("dead_date <>", value, "deadDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_requote
         *
         * @mbg.generated
         */
        public Criteria andDeadDateNotEqualToColumn(LitemallRequote.Column column) {
            addCriterion(new StringBuilder("dead_date <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeadDateGreaterThan(LocalDateTime value) {
            addCriterion("dead_date >", value, "deadDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_requote
         *
         * @mbg.generated
         */
        public Criteria andDeadDateGreaterThanColumn(LitemallRequote.Column column) {
            addCriterion(new StringBuilder("dead_date > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeadDateGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("dead_date >=", value, "deadDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_requote
         *
         * @mbg.generated
         */
        public Criteria andDeadDateGreaterThanOrEqualToColumn(LitemallRequote.Column column) {
            addCriterion(new StringBuilder("dead_date >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeadDateLessThan(LocalDateTime value) {
            addCriterion("dead_date <", value, "deadDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_requote
         *
         * @mbg.generated
         */
        public Criteria andDeadDateLessThanColumn(LitemallRequote.Column column) {
            addCriterion(new StringBuilder("dead_date < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeadDateLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("dead_date <=", value, "deadDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_requote
         *
         * @mbg.generated
         */
        public Criteria andDeadDateLessThanOrEqualToColumn(LitemallRequote.Column column) {
            addCriterion(new StringBuilder("dead_date <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeadDateIn(List<LocalDateTime> values) {
            addCriterion("dead_date in", values, "deadDate");
            return (Criteria) this;
        }

        public Criteria andDeadDateNotIn(List<LocalDateTime> values) {
            addCriterion("dead_date not in", values, "deadDate");
            return (Criteria) this;
        }

        public Criteria andDeadDateBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("dead_date between", value1, value2, "deadDate");
            return (Criteria) this;
        }

        public Criteria andDeadDateNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("dead_date not between", value1, value2, "deadDate");
            return (Criteria) this;
        }

        public Criteria andAddTimeIsNull() {
            addCriterion("add_time is null");
            return (Criteria) this;
        }

        public Criteria andAddTimeIsNotNull() {
            addCriterion("add_time is not null");
            return (Criteria) this;
        }

        public Criteria andAddTimeEqualTo(LocalDateTime value) {
            addCriterion("add_time =", value, "addTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_requote
         *
         * @mbg.generated
         */
        public Criteria andAddTimeEqualToColumn(LitemallRequote.Column column) {
            addCriterion(new StringBuilder("add_time = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddTimeNotEqualTo(LocalDateTime value) {
            addCriterion("add_time <>", value, "addTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_requote
         *
         * @mbg.generated
         */
        public Criteria andAddTimeNotEqualToColumn(LitemallRequote.Column column) {
            addCriterion(new StringBuilder("add_time <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddTimeGreaterThan(LocalDateTime value) {
            addCriterion("add_time >", value, "addTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_requote
         *
         * @mbg.generated
         */
        public Criteria andAddTimeGreaterThanColumn(LitemallRequote.Column column) {
            addCriterion(new StringBuilder("add_time > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddTimeGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("add_time >=", value, "addTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_requote
         *
         * @mbg.generated
         */
        public Criteria andAddTimeGreaterThanOrEqualToColumn(LitemallRequote.Column column) {
            addCriterion(new StringBuilder("add_time >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddTimeLessThan(LocalDateTime value) {
            addCriterion("add_time <", value, "addTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_requote
         *
         * @mbg.generated
         */
        public Criteria andAddTimeLessThanColumn(LitemallRequote.Column column) {
            addCriterion(new StringBuilder("add_time < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddTimeLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("add_time <=", value, "addTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_requote
         *
         * @mbg.generated
         */
        public Criteria andAddTimeLessThanOrEqualToColumn(LitemallRequote.Column column) {
            addCriterion(new StringBuilder("add_time <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddTimeIn(List<LocalDateTime> values) {
            addCriterion("add_time in", values, "addTime");
            return (Criteria) this;
        }

        public Criteria andAddTimeNotIn(List<LocalDateTime> values) {
            addCriterion("add_time not in", values, "addTime");
            return (Criteria) this;
        }

        public Criteria andAddTimeBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("add_time between", value1, value2, "addTime");
            return (Criteria) this;
        }

        public Criteria andAddTimeNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("add_time not between", value1, value2, "addTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIsNull() {
            addCriterion("update_time is null");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIsNotNull() {
            addCriterion("update_time is not null");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeEqualTo(LocalDateTime value) {
            addCriterion("update_time =", value, "updateTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_requote
         *
         * @mbg.generated
         */
        public Criteria andUpdateTimeEqualToColumn(LitemallRequote.Column column) {
            addCriterion(new StringBuilder("update_time = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotEqualTo(LocalDateTime value) {
            addCriterion("update_time <>", value, "updateTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_requote
         *
         * @mbg.generated
         */
        public Criteria andUpdateTimeNotEqualToColumn(LitemallRequote.Column column) {
            addCriterion(new StringBuilder("update_time <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeGreaterThan(LocalDateTime value) {
            addCriterion("update_time >", value, "updateTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_requote
         *
         * @mbg.generated
         */
        public Criteria andUpdateTimeGreaterThanColumn(LitemallRequote.Column column) {
            addCriterion(new StringBuilder("update_time > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("update_time >=", value, "updateTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_requote
         *
         * @mbg.generated
         */
        public Criteria andUpdateTimeGreaterThanOrEqualToColumn(LitemallRequote.Column column) {
            addCriterion(new StringBuilder("update_time >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeLessThan(LocalDateTime value) {
            addCriterion("update_time <", value, "updateTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_requote
         *
         * @mbg.generated
         */
        public Criteria andUpdateTimeLessThanColumn(LitemallRequote.Column column) {
            addCriterion(new StringBuilder("update_time < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("update_time <=", value, "updateTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_requote
         *
         * @mbg.generated
         */
        public Criteria andUpdateTimeLessThanOrEqualToColumn(LitemallRequote.Column column) {
            addCriterion(new StringBuilder("update_time <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIn(List<LocalDateTime> values) {
            addCriterion("update_time in", values, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotIn(List<LocalDateTime> values) {
            addCriterion("update_time not in", values, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("update_time between", value1, value2, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("update_time not between", value1, value2, "updateTime");
            return (Criteria) this;
        }

        public Criteria andDeletedIsNull() {
            addCriterion("deleted is null");
            return (Criteria) this;
        }

        public Criteria andDeletedIsNotNull() {
            addCriterion("deleted is not null");
            return (Criteria) this;
        }

        public Criteria andDeletedEqualTo(Boolean value) {
            addCriterion("deleted =", value, "deleted");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_requote
         *
         * @mbg.generated
         */
        public Criteria andDeletedEqualToColumn(LitemallRequote.Column column) {
            addCriterion(new StringBuilder("deleted = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeletedNotEqualTo(Boolean value) {
            addCriterion("deleted <>", value, "deleted");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_requote
         *
         * @mbg.generated
         */
        public Criteria andDeletedNotEqualToColumn(LitemallRequote.Column column) {
            addCriterion(new StringBuilder("deleted <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeletedGreaterThan(Boolean value) {
            addCriterion("deleted >", value, "deleted");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_requote
         *
         * @mbg.generated
         */
        public Criteria andDeletedGreaterThanColumn(LitemallRequote.Column column) {
            addCriterion(new StringBuilder("deleted > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeletedGreaterThanOrEqualTo(Boolean value) {
            addCriterion("deleted >=", value, "deleted");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_requote
         *
         * @mbg.generated
         */
        public Criteria andDeletedGreaterThanOrEqualToColumn(LitemallRequote.Column column) {
            addCriterion(new StringBuilder("deleted >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeletedLessThan(Boolean value) {
            addCriterion("deleted <", value, "deleted");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_requote
         *
         * @mbg.generated
         */
        public Criteria andDeletedLessThanColumn(LitemallRequote.Column column) {
            addCriterion(new StringBuilder("deleted < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeletedLessThanOrEqualTo(Boolean value) {
            addCriterion("deleted <=", value, "deleted");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_requote
         *
         * @mbg.generated
         */
        public Criteria andDeletedLessThanOrEqualToColumn(LitemallRequote.Column column) {
            addCriterion(new StringBuilder("deleted <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeletedIn(List<Boolean> values) {
            addCriterion("deleted in", values, "deleted");
            return (Criteria) this;
        }

        public Criteria andDeletedNotIn(List<Boolean> values) {
            addCriterion("deleted not in", values, "deleted");
            return (Criteria) this;
        }

        public Criteria andDeletedBetween(Boolean value1, Boolean value2) {
            addCriterion("deleted between", value1, value2, "deleted");
            return (Criteria) this;
        }

        public Criteria andDeletedNotBetween(Boolean value1, Boolean value2) {
            addCriterion("deleted not between", value1, value2, "deleted");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table litemall_requote
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {
        /**
         * This field was generated by MyBatis Generator.
         * This field corresponds to the database table litemall_requote
         *
         * @mbg.generated
         */
        private LitemallRequoteExample example;

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_requote
         *
         * @mbg.generated
         */
        protected Criteria(LitemallRequoteExample example) {
            super();
            this.example = example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_requote
         *
         * @mbg.generated
         */
        public LitemallRequoteExample example() {
            return this.example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_requote
         *
         * @mbg.generated
         */
        @Deprecated
        public Criteria andIf(boolean ifAdd, ICriteriaAdd add) {
            if (ifAdd) {
                add.add(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_requote
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then) {
            if (condition) {
                then.criteria(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_requote
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then, ICriteriaWhen otherwise) {
            if (condition) {
                then.criteria(this);
            } else {
                otherwise.criteria(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_requote
         *
         * @mbg.generated
         */
        public Criteria andLogicalDeleted(boolean deleted) {
            return deleted ? andDeletedEqualTo(LitemallRequote.Deleted.IS_DELETED.value()) : andDeletedNotEqualTo(LitemallRequote.Deleted.IS_DELETED.value());
        }

        @Deprecated
        public interface ICriteriaAdd {
            /**
             * This method was generated by MyBatis Generator.
             * This method corresponds to the database table litemall_requote
             *
             * @mbg.generated
             */
            Criteria add(Criteria add);
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table litemall_requote
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }

    public interface ICriteriaWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_requote
         *
         * @mbg.generated
         */
        void criteria(Criteria criteria);
    }

    public interface IExampleWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_requote
         *
         * @mbg.generated
         */
        void example(org.linlinjava.litemall.db.domain.LitemallRequoteExample example);
    }
}