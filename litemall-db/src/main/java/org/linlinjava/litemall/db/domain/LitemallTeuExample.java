package org.linlinjava.litemall.db.domain;

import java.math.BigDecimal;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;

public class LitemallTeuExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table litemall_teu
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table litemall_teu
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table litemall_teu
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_teu
     *
     * @mbg.generated
     */
    public LitemallTeuExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_teu
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_teu
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_teu
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_teu
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_teu
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_teu
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_teu
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_teu
     *
     * @mbg.generated
     */
    public LitemallTeuExample orderBy(String orderByClause) {
        this.setOrderByClause(orderByClause);
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_teu
     *
     * @mbg.generated
     */
    public LitemallTeuExample orderBy(String ... orderByClauses) {
        StringBuffer sb = new StringBuffer();
        for (int i = 0; i < orderByClauses.length; i++) {
            sb.append(orderByClauses[i]);
            if (i < orderByClauses.length - 1) {
                sb.append(" , ");
            }
        }
        this.setOrderByClause(sb.toString());
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_teu
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_teu
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria(this);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_teu
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_teu
     *
     * @mbg.generated
     */
    public static Criteria newAndCreateCriteria() {
        LitemallTeuExample example = new LitemallTeuExample();
        return example.createCriteria();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_teu
     *
     * @mbg.generated
     */
    public LitemallTeuExample when(boolean condition, IExampleWhen then) {
        if (condition) {
            then.example(this);
        }
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_teu
     *
     * @mbg.generated
     */
    public LitemallTeuExample when(boolean condition, IExampleWhen then, IExampleWhen otherwise) {
        if (condition) {
            then.example(this);
        } else {
            otherwise.example(this);
        }
        return this;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table litemall_teu
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_teu
         *
         * @mbg.generated
         */
        public Criteria andIdEqualToColumn(LitemallTeu.Column column) {
            addCriterion(new StringBuilder("id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_teu
         *
         * @mbg.generated
         */
        public Criteria andIdNotEqualToColumn(LitemallTeu.Column column) {
            addCriterion(new StringBuilder("id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_teu
         *
         * @mbg.generated
         */
        public Criteria andIdGreaterThanColumn(LitemallTeu.Column column) {
            addCriterion(new StringBuilder("id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_teu
         *
         * @mbg.generated
         */
        public Criteria andIdGreaterThanOrEqualToColumn(LitemallTeu.Column column) {
            addCriterion(new StringBuilder("id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_teu
         *
         * @mbg.generated
         */
        public Criteria andIdLessThanColumn(LitemallTeu.Column column) {
            addCriterion(new StringBuilder("id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_teu
         *
         * @mbg.generated
         */
        public Criteria andIdLessThanOrEqualToColumn(LitemallTeu.Column column) {
            addCriterion(new StringBuilder("id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andUserIdIsNull() {
            addCriterion("user_id is null");
            return (Criteria) this;
        }

        public Criteria andUserIdIsNotNull() {
            addCriterion("user_id is not null");
            return (Criteria) this;
        }

        public Criteria andUserIdEqualTo(Integer value) {
            addCriterion("user_id =", value, "userId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_teu
         *
         * @mbg.generated
         */
        public Criteria andUserIdEqualToColumn(LitemallTeu.Column column) {
            addCriterion(new StringBuilder("user_id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUserIdNotEqualTo(Integer value) {
            addCriterion("user_id <>", value, "userId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_teu
         *
         * @mbg.generated
         */
        public Criteria andUserIdNotEqualToColumn(LitemallTeu.Column column) {
            addCriterion(new StringBuilder("user_id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUserIdGreaterThan(Integer value) {
            addCriterion("user_id >", value, "userId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_teu
         *
         * @mbg.generated
         */
        public Criteria andUserIdGreaterThanColumn(LitemallTeu.Column column) {
            addCriterion(new StringBuilder("user_id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUserIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("user_id >=", value, "userId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_teu
         *
         * @mbg.generated
         */
        public Criteria andUserIdGreaterThanOrEqualToColumn(LitemallTeu.Column column) {
            addCriterion(new StringBuilder("user_id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUserIdLessThan(Integer value) {
            addCriterion("user_id <", value, "userId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_teu
         *
         * @mbg.generated
         */
        public Criteria andUserIdLessThanColumn(LitemallTeu.Column column) {
            addCriterion(new StringBuilder("user_id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUserIdLessThanOrEqualTo(Integer value) {
            addCriterion("user_id <=", value, "userId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_teu
         *
         * @mbg.generated
         */
        public Criteria andUserIdLessThanOrEqualToColumn(LitemallTeu.Column column) {
            addCriterion(new StringBuilder("user_id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUserIdIn(List<Integer> values) {
            addCriterion("user_id in", values, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotIn(List<Integer> values) {
            addCriterion("user_id not in", values, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdBetween(Integer value1, Integer value2) {
            addCriterion("user_id between", value1, value2, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotBetween(Integer value1, Integer value2) {
            addCriterion("user_id not between", value1, value2, "userId");
            return (Criteria) this;
        }

        public Criteria andUsernameIsNull() {
            addCriterion("username is null");
            return (Criteria) this;
        }

        public Criteria andUsernameIsNotNull() {
            addCriterion("username is not null");
            return (Criteria) this;
        }

        public Criteria andUsernameEqualTo(String value) {
            addCriterion("username =", value, "username");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_teu
         *
         * @mbg.generated
         */
        public Criteria andUsernameEqualToColumn(LitemallTeu.Column column) {
            addCriterion(new StringBuilder("username = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUsernameNotEqualTo(String value) {
            addCriterion("username <>", value, "username");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_teu
         *
         * @mbg.generated
         */
        public Criteria andUsernameNotEqualToColumn(LitemallTeu.Column column) {
            addCriterion(new StringBuilder("username <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUsernameGreaterThan(String value) {
            addCriterion("username >", value, "username");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_teu
         *
         * @mbg.generated
         */
        public Criteria andUsernameGreaterThanColumn(LitemallTeu.Column column) {
            addCriterion(new StringBuilder("username > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUsernameGreaterThanOrEqualTo(String value) {
            addCriterion("username >=", value, "username");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_teu
         *
         * @mbg.generated
         */
        public Criteria andUsernameGreaterThanOrEqualToColumn(LitemallTeu.Column column) {
            addCriterion(new StringBuilder("username >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUsernameLessThan(String value) {
            addCriterion("username <", value, "username");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_teu
         *
         * @mbg.generated
         */
        public Criteria andUsernameLessThanColumn(LitemallTeu.Column column) {
            addCriterion(new StringBuilder("username < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUsernameLessThanOrEqualTo(String value) {
            addCriterion("username <=", value, "username");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_teu
         *
         * @mbg.generated
         */
        public Criteria andUsernameLessThanOrEqualToColumn(LitemallTeu.Column column) {
            addCriterion(new StringBuilder("username <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUsernameLike(String value) {
            addCriterion("username like", value, "username");
            return (Criteria) this;
        }

        public Criteria andUsernameNotLike(String value) {
            addCriterion("username not like", value, "username");
            return (Criteria) this;
        }

        public Criteria andUsernameIn(List<String> values) {
            addCriterion("username in", values, "username");
            return (Criteria) this;
        }

        public Criteria andUsernameNotIn(List<String> values) {
            addCriterion("username not in", values, "username");
            return (Criteria) this;
        }

        public Criteria andUsernameBetween(String value1, String value2) {
            addCriterion("username between", value1, value2, "username");
            return (Criteria) this;
        }

        public Criteria andUsernameNotBetween(String value1, String value2) {
            addCriterion("username not between", value1, value2, "username");
            return (Criteria) this;
        }

        public Criteria andTeuTypeCnIsNull() {
            addCriterion("teu_type_cn is null");
            return (Criteria) this;
        }

        public Criteria andTeuTypeCnIsNotNull() {
            addCriterion("teu_type_cn is not null");
            return (Criteria) this;
        }

        public Criteria andTeuTypeCnEqualTo(String value) {
            addCriterion("teu_type_cn =", value, "teuTypeCn");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_teu
         *
         * @mbg.generated
         */
        public Criteria andTeuTypeCnEqualToColumn(LitemallTeu.Column column) {
            addCriterion(new StringBuilder("teu_type_cn = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTeuTypeCnNotEqualTo(String value) {
            addCriterion("teu_type_cn <>", value, "teuTypeCn");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_teu
         *
         * @mbg.generated
         */
        public Criteria andTeuTypeCnNotEqualToColumn(LitemallTeu.Column column) {
            addCriterion(new StringBuilder("teu_type_cn <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTeuTypeCnGreaterThan(String value) {
            addCriterion("teu_type_cn >", value, "teuTypeCn");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_teu
         *
         * @mbg.generated
         */
        public Criteria andTeuTypeCnGreaterThanColumn(LitemallTeu.Column column) {
            addCriterion(new StringBuilder("teu_type_cn > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTeuTypeCnGreaterThanOrEqualTo(String value) {
            addCriterion("teu_type_cn >=", value, "teuTypeCn");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_teu
         *
         * @mbg.generated
         */
        public Criteria andTeuTypeCnGreaterThanOrEqualToColumn(LitemallTeu.Column column) {
            addCriterion(new StringBuilder("teu_type_cn >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTeuTypeCnLessThan(String value) {
            addCriterion("teu_type_cn <", value, "teuTypeCn");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_teu
         *
         * @mbg.generated
         */
        public Criteria andTeuTypeCnLessThanColumn(LitemallTeu.Column column) {
            addCriterion(new StringBuilder("teu_type_cn < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTeuTypeCnLessThanOrEqualTo(String value) {
            addCriterion("teu_type_cn <=", value, "teuTypeCn");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_teu
         *
         * @mbg.generated
         */
        public Criteria andTeuTypeCnLessThanOrEqualToColumn(LitemallTeu.Column column) {
            addCriterion(new StringBuilder("teu_type_cn <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTeuTypeCnLike(String value) {
            addCriterion("teu_type_cn like", value, "teuTypeCn");
            return (Criteria) this;
        }

        public Criteria andTeuTypeCnNotLike(String value) {
            addCriterion("teu_type_cn not like", value, "teuTypeCn");
            return (Criteria) this;
        }

        public Criteria andTeuTypeCnIn(List<String> values) {
            addCriterion("teu_type_cn in", values, "teuTypeCn");
            return (Criteria) this;
        }

        public Criteria andTeuTypeCnNotIn(List<String> values) {
            addCriterion("teu_type_cn not in", values, "teuTypeCn");
            return (Criteria) this;
        }

        public Criteria andTeuTypeCnBetween(String value1, String value2) {
            addCriterion("teu_type_cn between", value1, value2, "teuTypeCn");
            return (Criteria) this;
        }

        public Criteria andTeuTypeCnNotBetween(String value1, String value2) {
            addCriterion("teu_type_cn not between", value1, value2, "teuTypeCn");
            return (Criteria) this;
        }

        public Criteria andTeuTypeEnIsNull() {
            addCriterion("teu_type_en is null");
            return (Criteria) this;
        }

        public Criteria andTeuTypeEnIsNotNull() {
            addCriterion("teu_type_en is not null");
            return (Criteria) this;
        }

        public Criteria andTeuTypeEnEqualTo(String value) {
            addCriterion("teu_type_en =", value, "teuTypeEn");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_teu
         *
         * @mbg.generated
         */
        public Criteria andTeuTypeEnEqualToColumn(LitemallTeu.Column column) {
            addCriterion(new StringBuilder("teu_type_en = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTeuTypeEnNotEqualTo(String value) {
            addCriterion("teu_type_en <>", value, "teuTypeEn");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_teu
         *
         * @mbg.generated
         */
        public Criteria andTeuTypeEnNotEqualToColumn(LitemallTeu.Column column) {
            addCriterion(new StringBuilder("teu_type_en <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTeuTypeEnGreaterThan(String value) {
            addCriterion("teu_type_en >", value, "teuTypeEn");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_teu
         *
         * @mbg.generated
         */
        public Criteria andTeuTypeEnGreaterThanColumn(LitemallTeu.Column column) {
            addCriterion(new StringBuilder("teu_type_en > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTeuTypeEnGreaterThanOrEqualTo(String value) {
            addCriterion("teu_type_en >=", value, "teuTypeEn");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_teu
         *
         * @mbg.generated
         */
        public Criteria andTeuTypeEnGreaterThanOrEqualToColumn(LitemallTeu.Column column) {
            addCriterion(new StringBuilder("teu_type_en >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTeuTypeEnLessThan(String value) {
            addCriterion("teu_type_en <", value, "teuTypeEn");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_teu
         *
         * @mbg.generated
         */
        public Criteria andTeuTypeEnLessThanColumn(LitemallTeu.Column column) {
            addCriterion(new StringBuilder("teu_type_en < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTeuTypeEnLessThanOrEqualTo(String value) {
            addCriterion("teu_type_en <=", value, "teuTypeEn");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_teu
         *
         * @mbg.generated
         */
        public Criteria andTeuTypeEnLessThanOrEqualToColumn(LitemallTeu.Column column) {
            addCriterion(new StringBuilder("teu_type_en <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTeuTypeEnLike(String value) {
            addCriterion("teu_type_en like", value, "teuTypeEn");
            return (Criteria) this;
        }

        public Criteria andTeuTypeEnNotLike(String value) {
            addCriterion("teu_type_en not like", value, "teuTypeEn");
            return (Criteria) this;
        }

        public Criteria andTeuTypeEnIn(List<String> values) {
            addCriterion("teu_type_en in", values, "teuTypeEn");
            return (Criteria) this;
        }

        public Criteria andTeuTypeEnNotIn(List<String> values) {
            addCriterion("teu_type_en not in", values, "teuTypeEn");
            return (Criteria) this;
        }

        public Criteria andTeuTypeEnBetween(String value1, String value2) {
            addCriterion("teu_type_en between", value1, value2, "teuTypeEn");
            return (Criteria) this;
        }

        public Criteria andTeuTypeEnNotBetween(String value1, String value2) {
            addCriterion("teu_type_en not between", value1, value2, "teuTypeEn");
            return (Criteria) this;
        }

        public Criteria andTeuNameCnIsNull() {
            addCriterion("teu_name_cn is null");
            return (Criteria) this;
        }

        public Criteria andTeuNameCnIsNotNull() {
            addCriterion("teu_name_cn is not null");
            return (Criteria) this;
        }

        public Criteria andTeuNameCnEqualTo(String value) {
            addCriterion("teu_name_cn =", value, "teuNameCn");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_teu
         *
         * @mbg.generated
         */
        public Criteria andTeuNameCnEqualToColumn(LitemallTeu.Column column) {
            addCriterion(new StringBuilder("teu_name_cn = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTeuNameCnNotEqualTo(String value) {
            addCriterion("teu_name_cn <>", value, "teuNameCn");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_teu
         *
         * @mbg.generated
         */
        public Criteria andTeuNameCnNotEqualToColumn(LitemallTeu.Column column) {
            addCriterion(new StringBuilder("teu_name_cn <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTeuNameCnGreaterThan(String value) {
            addCriterion("teu_name_cn >", value, "teuNameCn");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_teu
         *
         * @mbg.generated
         */
        public Criteria andTeuNameCnGreaterThanColumn(LitemallTeu.Column column) {
            addCriterion(new StringBuilder("teu_name_cn > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTeuNameCnGreaterThanOrEqualTo(String value) {
            addCriterion("teu_name_cn >=", value, "teuNameCn");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_teu
         *
         * @mbg.generated
         */
        public Criteria andTeuNameCnGreaterThanOrEqualToColumn(LitemallTeu.Column column) {
            addCriterion(new StringBuilder("teu_name_cn >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTeuNameCnLessThan(String value) {
            addCriterion("teu_name_cn <", value, "teuNameCn");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_teu
         *
         * @mbg.generated
         */
        public Criteria andTeuNameCnLessThanColumn(LitemallTeu.Column column) {
            addCriterion(new StringBuilder("teu_name_cn < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTeuNameCnLessThanOrEqualTo(String value) {
            addCriterion("teu_name_cn <=", value, "teuNameCn");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_teu
         *
         * @mbg.generated
         */
        public Criteria andTeuNameCnLessThanOrEqualToColumn(LitemallTeu.Column column) {
            addCriterion(new StringBuilder("teu_name_cn <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTeuNameCnLike(String value) {
            addCriterion("teu_name_cn like", value, "teuNameCn");
            return (Criteria) this;
        }

        public Criteria andTeuNameCnNotLike(String value) {
            addCriterion("teu_name_cn not like", value, "teuNameCn");
            return (Criteria) this;
        }

        public Criteria andTeuNameCnIn(List<String> values) {
            addCriterion("teu_name_cn in", values, "teuNameCn");
            return (Criteria) this;
        }

        public Criteria andTeuNameCnNotIn(List<String> values) {
            addCriterion("teu_name_cn not in", values, "teuNameCn");
            return (Criteria) this;
        }

        public Criteria andTeuNameCnBetween(String value1, String value2) {
            addCriterion("teu_name_cn between", value1, value2, "teuNameCn");
            return (Criteria) this;
        }

        public Criteria andTeuNameCnNotBetween(String value1, String value2) {
            addCriterion("teu_name_cn not between", value1, value2, "teuNameCn");
            return (Criteria) this;
        }

        public Criteria andTeuNameEnIsNull() {
            addCriterion("teu_name_en is null");
            return (Criteria) this;
        }

        public Criteria andTeuNameEnIsNotNull() {
            addCriterion("teu_name_en is not null");
            return (Criteria) this;
        }

        public Criteria andTeuNameEnEqualTo(String value) {
            addCriterion("teu_name_en =", value, "teuNameEn");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_teu
         *
         * @mbg.generated
         */
        public Criteria andTeuNameEnEqualToColumn(LitemallTeu.Column column) {
            addCriterion(new StringBuilder("teu_name_en = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTeuNameEnNotEqualTo(String value) {
            addCriterion("teu_name_en <>", value, "teuNameEn");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_teu
         *
         * @mbg.generated
         */
        public Criteria andTeuNameEnNotEqualToColumn(LitemallTeu.Column column) {
            addCriterion(new StringBuilder("teu_name_en <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTeuNameEnGreaterThan(String value) {
            addCriterion("teu_name_en >", value, "teuNameEn");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_teu
         *
         * @mbg.generated
         */
        public Criteria andTeuNameEnGreaterThanColumn(LitemallTeu.Column column) {
            addCriterion(new StringBuilder("teu_name_en > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTeuNameEnGreaterThanOrEqualTo(String value) {
            addCriterion("teu_name_en >=", value, "teuNameEn");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_teu
         *
         * @mbg.generated
         */
        public Criteria andTeuNameEnGreaterThanOrEqualToColumn(LitemallTeu.Column column) {
            addCriterion(new StringBuilder("teu_name_en >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTeuNameEnLessThan(String value) {
            addCriterion("teu_name_en <", value, "teuNameEn");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_teu
         *
         * @mbg.generated
         */
        public Criteria andTeuNameEnLessThanColumn(LitemallTeu.Column column) {
            addCriterion(new StringBuilder("teu_name_en < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTeuNameEnLessThanOrEqualTo(String value) {
            addCriterion("teu_name_en <=", value, "teuNameEn");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_teu
         *
         * @mbg.generated
         */
        public Criteria andTeuNameEnLessThanOrEqualToColumn(LitemallTeu.Column column) {
            addCriterion(new StringBuilder("teu_name_en <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTeuNameEnLike(String value) {
            addCriterion("teu_name_en like", value, "teuNameEn");
            return (Criteria) this;
        }

        public Criteria andTeuNameEnNotLike(String value) {
            addCriterion("teu_name_en not like", value, "teuNameEn");
            return (Criteria) this;
        }

        public Criteria andTeuNameEnIn(List<String> values) {
            addCriterion("teu_name_en in", values, "teuNameEn");
            return (Criteria) this;
        }

        public Criteria andTeuNameEnNotIn(List<String> values) {
            addCriterion("teu_name_en not in", values, "teuNameEn");
            return (Criteria) this;
        }

        public Criteria andTeuNameEnBetween(String value1, String value2) {
            addCriterion("teu_name_en between", value1, value2, "teuNameEn");
            return (Criteria) this;
        }

        public Criteria andTeuNameEnNotBetween(String value1, String value2) {
            addCriterion("teu_name_en not between", value1, value2, "teuNameEn");
            return (Criteria) this;
        }

        public Criteria andLengthIsNull() {
            addCriterion("`length` is null");
            return (Criteria) this;
        }

        public Criteria andLengthIsNotNull() {
            addCriterion("`length` is not null");
            return (Criteria) this;
        }

        public Criteria andLengthEqualTo(BigDecimal value) {
            addCriterion("`length` =", value, "length");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_teu
         *
         * @mbg.generated
         */
        public Criteria andLengthEqualToColumn(LitemallTeu.Column column) {
            addCriterion(new StringBuilder("`length` = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLengthNotEqualTo(BigDecimal value) {
            addCriterion("`length` <>", value, "length");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_teu
         *
         * @mbg.generated
         */
        public Criteria andLengthNotEqualToColumn(LitemallTeu.Column column) {
            addCriterion(new StringBuilder("`length` <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLengthGreaterThan(BigDecimal value) {
            addCriterion("`length` >", value, "length");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_teu
         *
         * @mbg.generated
         */
        public Criteria andLengthGreaterThanColumn(LitemallTeu.Column column) {
            addCriterion(new StringBuilder("`length` > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLengthGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("`length` >=", value, "length");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_teu
         *
         * @mbg.generated
         */
        public Criteria andLengthGreaterThanOrEqualToColumn(LitemallTeu.Column column) {
            addCriterion(new StringBuilder("`length` >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLengthLessThan(BigDecimal value) {
            addCriterion("`length` <", value, "length");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_teu
         *
         * @mbg.generated
         */
        public Criteria andLengthLessThanColumn(LitemallTeu.Column column) {
            addCriterion(new StringBuilder("`length` < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLengthLessThanOrEqualTo(BigDecimal value) {
            addCriterion("`length` <=", value, "length");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_teu
         *
         * @mbg.generated
         */
        public Criteria andLengthLessThanOrEqualToColumn(LitemallTeu.Column column) {
            addCriterion(new StringBuilder("`length` <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLengthIn(List<BigDecimal> values) {
            addCriterion("`length` in", values, "length");
            return (Criteria) this;
        }

        public Criteria andLengthNotIn(List<BigDecimal> values) {
            addCriterion("`length` not in", values, "length");
            return (Criteria) this;
        }

        public Criteria andLengthBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("`length` between", value1, value2, "length");
            return (Criteria) this;
        }

        public Criteria andLengthNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("`length` not between", value1, value2, "length");
            return (Criteria) this;
        }

        public Criteria andWidthIsNull() {
            addCriterion("width is null");
            return (Criteria) this;
        }

        public Criteria andWidthIsNotNull() {
            addCriterion("width is not null");
            return (Criteria) this;
        }

        public Criteria andWidthEqualTo(BigDecimal value) {
            addCriterion("width =", value, "width");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_teu
         *
         * @mbg.generated
         */
        public Criteria andWidthEqualToColumn(LitemallTeu.Column column) {
            addCriterion(new StringBuilder("width = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andWidthNotEqualTo(BigDecimal value) {
            addCriterion("width <>", value, "width");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_teu
         *
         * @mbg.generated
         */
        public Criteria andWidthNotEqualToColumn(LitemallTeu.Column column) {
            addCriterion(new StringBuilder("width <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andWidthGreaterThan(BigDecimal value) {
            addCriterion("width >", value, "width");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_teu
         *
         * @mbg.generated
         */
        public Criteria andWidthGreaterThanColumn(LitemallTeu.Column column) {
            addCriterion(new StringBuilder("width > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andWidthGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("width >=", value, "width");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_teu
         *
         * @mbg.generated
         */
        public Criteria andWidthGreaterThanOrEqualToColumn(LitemallTeu.Column column) {
            addCriterion(new StringBuilder("width >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andWidthLessThan(BigDecimal value) {
            addCriterion("width <", value, "width");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_teu
         *
         * @mbg.generated
         */
        public Criteria andWidthLessThanColumn(LitemallTeu.Column column) {
            addCriterion(new StringBuilder("width < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andWidthLessThanOrEqualTo(BigDecimal value) {
            addCriterion("width <=", value, "width");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_teu
         *
         * @mbg.generated
         */
        public Criteria andWidthLessThanOrEqualToColumn(LitemallTeu.Column column) {
            addCriterion(new StringBuilder("width <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andWidthIn(List<BigDecimal> values) {
            addCriterion("width in", values, "width");
            return (Criteria) this;
        }

        public Criteria andWidthNotIn(List<BigDecimal> values) {
            addCriterion("width not in", values, "width");
            return (Criteria) this;
        }

        public Criteria andWidthBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("width between", value1, value2, "width");
            return (Criteria) this;
        }

        public Criteria andWidthNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("width not between", value1, value2, "width");
            return (Criteria) this;
        }

        public Criteria andHeightIsNull() {
            addCriterion("height is null");
            return (Criteria) this;
        }

        public Criteria andHeightIsNotNull() {
            addCriterion("height is not null");
            return (Criteria) this;
        }

        public Criteria andHeightEqualTo(BigDecimal value) {
            addCriterion("height =", value, "height");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_teu
         *
         * @mbg.generated
         */
        public Criteria andHeightEqualToColumn(LitemallTeu.Column column) {
            addCriterion(new StringBuilder("height = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHeightNotEqualTo(BigDecimal value) {
            addCriterion("height <>", value, "height");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_teu
         *
         * @mbg.generated
         */
        public Criteria andHeightNotEqualToColumn(LitemallTeu.Column column) {
            addCriterion(new StringBuilder("height <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHeightGreaterThan(BigDecimal value) {
            addCriterion("height >", value, "height");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_teu
         *
         * @mbg.generated
         */
        public Criteria andHeightGreaterThanColumn(LitemallTeu.Column column) {
            addCriterion(new StringBuilder("height > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHeightGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("height >=", value, "height");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_teu
         *
         * @mbg.generated
         */
        public Criteria andHeightGreaterThanOrEqualToColumn(LitemallTeu.Column column) {
            addCriterion(new StringBuilder("height >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHeightLessThan(BigDecimal value) {
            addCriterion("height <", value, "height");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_teu
         *
         * @mbg.generated
         */
        public Criteria andHeightLessThanColumn(LitemallTeu.Column column) {
            addCriterion(new StringBuilder("height < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHeightLessThanOrEqualTo(BigDecimal value) {
            addCriterion("height <=", value, "height");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_teu
         *
         * @mbg.generated
         */
        public Criteria andHeightLessThanOrEqualToColumn(LitemallTeu.Column column) {
            addCriterion(new StringBuilder("height <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHeightIn(List<BigDecimal> values) {
            addCriterion("height in", values, "height");
            return (Criteria) this;
        }

        public Criteria andHeightNotIn(List<BigDecimal> values) {
            addCriterion("height not in", values, "height");
            return (Criteria) this;
        }

        public Criteria andHeightBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("height between", value1, value2, "height");
            return (Criteria) this;
        }

        public Criteria andHeightNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("height not between", value1, value2, "height");
            return (Criteria) this;
        }

        public Criteria andCubeIsNull() {
            addCriterion("`cube` is null");
            return (Criteria) this;
        }

        public Criteria andCubeIsNotNull() {
            addCriterion("`cube` is not null");
            return (Criteria) this;
        }

        public Criteria andCubeEqualTo(BigDecimal value) {
            addCriterion("`cube` =", value, "cube");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_teu
         *
         * @mbg.generated
         */
        public Criteria andCubeEqualToColumn(LitemallTeu.Column column) {
            addCriterion(new StringBuilder("`cube` = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCubeNotEqualTo(BigDecimal value) {
            addCriterion("`cube` <>", value, "cube");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_teu
         *
         * @mbg.generated
         */
        public Criteria andCubeNotEqualToColumn(LitemallTeu.Column column) {
            addCriterion(new StringBuilder("`cube` <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCubeGreaterThan(BigDecimal value) {
            addCriterion("`cube` >", value, "cube");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_teu
         *
         * @mbg.generated
         */
        public Criteria andCubeGreaterThanColumn(LitemallTeu.Column column) {
            addCriterion(new StringBuilder("`cube` > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCubeGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("`cube` >=", value, "cube");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_teu
         *
         * @mbg.generated
         */
        public Criteria andCubeGreaterThanOrEqualToColumn(LitemallTeu.Column column) {
            addCriterion(new StringBuilder("`cube` >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCubeLessThan(BigDecimal value) {
            addCriterion("`cube` <", value, "cube");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_teu
         *
         * @mbg.generated
         */
        public Criteria andCubeLessThanColumn(LitemallTeu.Column column) {
            addCriterion(new StringBuilder("`cube` < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCubeLessThanOrEqualTo(BigDecimal value) {
            addCriterion("`cube` <=", value, "cube");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_teu
         *
         * @mbg.generated
         */
        public Criteria andCubeLessThanOrEqualToColumn(LitemallTeu.Column column) {
            addCriterion(new StringBuilder("`cube` <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCubeIn(List<BigDecimal> values) {
            addCriterion("`cube` in", values, "cube");
            return (Criteria) this;
        }

        public Criteria andCubeNotIn(List<BigDecimal> values) {
            addCriterion("`cube` not in", values, "cube");
            return (Criteria) this;
        }

        public Criteria andCubeBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("`cube` between", value1, value2, "cube");
            return (Criteria) this;
        }

        public Criteria andCubeNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("`cube` not between", value1, value2, "cube");
            return (Criteria) this;
        }

        public Criteria andTareWeightIsNull() {
            addCriterion("tare_weight is null");
            return (Criteria) this;
        }

        public Criteria andTareWeightIsNotNull() {
            addCriterion("tare_weight is not null");
            return (Criteria) this;
        }

        public Criteria andTareWeightEqualTo(BigDecimal value) {
            addCriterion("tare_weight =", value, "tareWeight");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_teu
         *
         * @mbg.generated
         */
        public Criteria andTareWeightEqualToColumn(LitemallTeu.Column column) {
            addCriterion(new StringBuilder("tare_weight = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTareWeightNotEqualTo(BigDecimal value) {
            addCriterion("tare_weight <>", value, "tareWeight");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_teu
         *
         * @mbg.generated
         */
        public Criteria andTareWeightNotEqualToColumn(LitemallTeu.Column column) {
            addCriterion(new StringBuilder("tare_weight <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTareWeightGreaterThan(BigDecimal value) {
            addCriterion("tare_weight >", value, "tareWeight");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_teu
         *
         * @mbg.generated
         */
        public Criteria andTareWeightGreaterThanColumn(LitemallTeu.Column column) {
            addCriterion(new StringBuilder("tare_weight > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTareWeightGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("tare_weight >=", value, "tareWeight");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_teu
         *
         * @mbg.generated
         */
        public Criteria andTareWeightGreaterThanOrEqualToColumn(LitemallTeu.Column column) {
            addCriterion(new StringBuilder("tare_weight >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTareWeightLessThan(BigDecimal value) {
            addCriterion("tare_weight <", value, "tareWeight");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_teu
         *
         * @mbg.generated
         */
        public Criteria andTareWeightLessThanColumn(LitemallTeu.Column column) {
            addCriterion(new StringBuilder("tare_weight < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTareWeightLessThanOrEqualTo(BigDecimal value) {
            addCriterion("tare_weight <=", value, "tareWeight");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_teu
         *
         * @mbg.generated
         */
        public Criteria andTareWeightLessThanOrEqualToColumn(LitemallTeu.Column column) {
            addCriterion(new StringBuilder("tare_weight <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTareWeightIn(List<BigDecimal> values) {
            addCriterion("tare_weight in", values, "tareWeight");
            return (Criteria) this;
        }

        public Criteria andTareWeightNotIn(List<BigDecimal> values) {
            addCriterion("tare_weight not in", values, "tareWeight");
            return (Criteria) this;
        }

        public Criteria andTareWeightBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("tare_weight between", value1, value2, "tareWeight");
            return (Criteria) this;
        }

        public Criteria andTareWeightNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("tare_weight not between", value1, value2, "tareWeight");
            return (Criteria) this;
        }

        public Criteria andGrossWeightIsNull() {
            addCriterion("gross_weight is null");
            return (Criteria) this;
        }

        public Criteria andGrossWeightIsNotNull() {
            addCriterion("gross_weight is not null");
            return (Criteria) this;
        }

        public Criteria andGrossWeightEqualTo(BigDecimal value) {
            addCriterion("gross_weight =", value, "grossWeight");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_teu
         *
         * @mbg.generated
         */
        public Criteria andGrossWeightEqualToColumn(LitemallTeu.Column column) {
            addCriterion(new StringBuilder("gross_weight = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGrossWeightNotEqualTo(BigDecimal value) {
            addCriterion("gross_weight <>", value, "grossWeight");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_teu
         *
         * @mbg.generated
         */
        public Criteria andGrossWeightNotEqualToColumn(LitemallTeu.Column column) {
            addCriterion(new StringBuilder("gross_weight <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGrossWeightGreaterThan(BigDecimal value) {
            addCriterion("gross_weight >", value, "grossWeight");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_teu
         *
         * @mbg.generated
         */
        public Criteria andGrossWeightGreaterThanColumn(LitemallTeu.Column column) {
            addCriterion(new StringBuilder("gross_weight > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGrossWeightGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("gross_weight >=", value, "grossWeight");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_teu
         *
         * @mbg.generated
         */
        public Criteria andGrossWeightGreaterThanOrEqualToColumn(LitemallTeu.Column column) {
            addCriterion(new StringBuilder("gross_weight >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGrossWeightLessThan(BigDecimal value) {
            addCriterion("gross_weight <", value, "grossWeight");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_teu
         *
         * @mbg.generated
         */
        public Criteria andGrossWeightLessThanColumn(LitemallTeu.Column column) {
            addCriterion(new StringBuilder("gross_weight < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGrossWeightLessThanOrEqualTo(BigDecimal value) {
            addCriterion("gross_weight <=", value, "grossWeight");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_teu
         *
         * @mbg.generated
         */
        public Criteria andGrossWeightLessThanOrEqualToColumn(LitemallTeu.Column column) {
            addCriterion(new StringBuilder("gross_weight <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGrossWeightIn(List<BigDecimal> values) {
            addCriterion("gross_weight in", values, "grossWeight");
            return (Criteria) this;
        }

        public Criteria andGrossWeightNotIn(List<BigDecimal> values) {
            addCriterion("gross_weight not in", values, "grossWeight");
            return (Criteria) this;
        }

        public Criteria andGrossWeightBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("gross_weight between", value1, value2, "grossWeight");
            return (Criteria) this;
        }

        public Criteria andGrossWeightNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("gross_weight not between", value1, value2, "grossWeight");
            return (Criteria) this;
        }

        public Criteria andMaxPayloadIsNull() {
            addCriterion("max_payload is null");
            return (Criteria) this;
        }

        public Criteria andMaxPayloadIsNotNull() {
            addCriterion("max_payload is not null");
            return (Criteria) this;
        }

        public Criteria andMaxPayloadEqualTo(BigDecimal value) {
            addCriterion("max_payload =", value, "maxPayload");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_teu
         *
         * @mbg.generated
         */
        public Criteria andMaxPayloadEqualToColumn(LitemallTeu.Column column) {
            addCriterion(new StringBuilder("max_payload = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMaxPayloadNotEqualTo(BigDecimal value) {
            addCriterion("max_payload <>", value, "maxPayload");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_teu
         *
         * @mbg.generated
         */
        public Criteria andMaxPayloadNotEqualToColumn(LitemallTeu.Column column) {
            addCriterion(new StringBuilder("max_payload <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMaxPayloadGreaterThan(BigDecimal value) {
            addCriterion("max_payload >", value, "maxPayload");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_teu
         *
         * @mbg.generated
         */
        public Criteria andMaxPayloadGreaterThanColumn(LitemallTeu.Column column) {
            addCriterion(new StringBuilder("max_payload > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMaxPayloadGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("max_payload >=", value, "maxPayload");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_teu
         *
         * @mbg.generated
         */
        public Criteria andMaxPayloadGreaterThanOrEqualToColumn(LitemallTeu.Column column) {
            addCriterion(new StringBuilder("max_payload >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMaxPayloadLessThan(BigDecimal value) {
            addCriterion("max_payload <", value, "maxPayload");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_teu
         *
         * @mbg.generated
         */
        public Criteria andMaxPayloadLessThanColumn(LitemallTeu.Column column) {
            addCriterion(new StringBuilder("max_payload < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMaxPayloadLessThanOrEqualTo(BigDecimal value) {
            addCriterion("max_payload <=", value, "maxPayload");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_teu
         *
         * @mbg.generated
         */
        public Criteria andMaxPayloadLessThanOrEqualToColumn(LitemallTeu.Column column) {
            addCriterion(new StringBuilder("max_payload <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMaxPayloadIn(List<BigDecimal> values) {
            addCriterion("max_payload in", values, "maxPayload");
            return (Criteria) this;
        }

        public Criteria andMaxPayloadNotIn(List<BigDecimal> values) {
            addCriterion("max_payload not in", values, "maxPayload");
            return (Criteria) this;
        }

        public Criteria andMaxPayloadBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("max_payload between", value1, value2, "maxPayload");
            return (Criteria) this;
        }

        public Criteria andMaxPayloadNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("max_payload not between", value1, value2, "maxPayload");
            return (Criteria) this;
        }

        public Criteria andStatusIsNull() {
            addCriterion("`status` is null");
            return (Criteria) this;
        }

        public Criteria andStatusIsNotNull() {
            addCriterion("`status` is not null");
            return (Criteria) this;
        }

        public Criteria andStatusEqualTo(Byte value) {
            addCriterion("`status` =", value, "status");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_teu
         *
         * @mbg.generated
         */
        public Criteria andStatusEqualToColumn(LitemallTeu.Column column) {
            addCriterion(new StringBuilder("`status` = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStatusNotEqualTo(Byte value) {
            addCriterion("`status` <>", value, "status");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_teu
         *
         * @mbg.generated
         */
        public Criteria andStatusNotEqualToColumn(LitemallTeu.Column column) {
            addCriterion(new StringBuilder("`status` <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStatusGreaterThan(Byte value) {
            addCriterion("`status` >", value, "status");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_teu
         *
         * @mbg.generated
         */
        public Criteria andStatusGreaterThanColumn(LitemallTeu.Column column) {
            addCriterion(new StringBuilder("`status` > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStatusGreaterThanOrEqualTo(Byte value) {
            addCriterion("`status` >=", value, "status");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_teu
         *
         * @mbg.generated
         */
        public Criteria andStatusGreaterThanOrEqualToColumn(LitemallTeu.Column column) {
            addCriterion(new StringBuilder("`status` >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStatusLessThan(Byte value) {
            addCriterion("`status` <", value, "status");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_teu
         *
         * @mbg.generated
         */
        public Criteria andStatusLessThanColumn(LitemallTeu.Column column) {
            addCriterion(new StringBuilder("`status` < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStatusLessThanOrEqualTo(Byte value) {
            addCriterion("`status` <=", value, "status");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_teu
         *
         * @mbg.generated
         */
        public Criteria andStatusLessThanOrEqualToColumn(LitemallTeu.Column column) {
            addCriterion(new StringBuilder("`status` <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStatusIn(List<Byte> values) {
            addCriterion("`status` in", values, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotIn(List<Byte> values) {
            addCriterion("`status` not in", values, "status");
            return (Criteria) this;
        }

        public Criteria andStatusBetween(Byte value1, Byte value2) {
            addCriterion("`status` between", value1, value2, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotBetween(Byte value1, Byte value2) {
            addCriterion("`status` not between", value1, value2, "status");
            return (Criteria) this;
        }

        public Criteria andAddTimeIsNull() {
            addCriterion("add_time is null");
            return (Criteria) this;
        }

        public Criteria andAddTimeIsNotNull() {
            addCriterion("add_time is not null");
            return (Criteria) this;
        }

        public Criteria andAddTimeEqualTo(LocalDateTime value) {
            addCriterion("add_time =", value, "addTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_teu
         *
         * @mbg.generated
         */
        public Criteria andAddTimeEqualToColumn(LitemallTeu.Column column) {
            addCriterion(new StringBuilder("add_time = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddTimeNotEqualTo(LocalDateTime value) {
            addCriterion("add_time <>", value, "addTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_teu
         *
         * @mbg.generated
         */
        public Criteria andAddTimeNotEqualToColumn(LitemallTeu.Column column) {
            addCriterion(new StringBuilder("add_time <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddTimeGreaterThan(LocalDateTime value) {
            addCriterion("add_time >", value, "addTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_teu
         *
         * @mbg.generated
         */
        public Criteria andAddTimeGreaterThanColumn(LitemallTeu.Column column) {
            addCriterion(new StringBuilder("add_time > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddTimeGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("add_time >=", value, "addTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_teu
         *
         * @mbg.generated
         */
        public Criteria andAddTimeGreaterThanOrEqualToColumn(LitemallTeu.Column column) {
            addCriterion(new StringBuilder("add_time >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddTimeLessThan(LocalDateTime value) {
            addCriterion("add_time <", value, "addTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_teu
         *
         * @mbg.generated
         */
        public Criteria andAddTimeLessThanColumn(LitemallTeu.Column column) {
            addCriterion(new StringBuilder("add_time < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddTimeLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("add_time <=", value, "addTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_teu
         *
         * @mbg.generated
         */
        public Criteria andAddTimeLessThanOrEqualToColumn(LitemallTeu.Column column) {
            addCriterion(new StringBuilder("add_time <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddTimeIn(List<LocalDateTime> values) {
            addCriterion("add_time in", values, "addTime");
            return (Criteria) this;
        }

        public Criteria andAddTimeNotIn(List<LocalDateTime> values) {
            addCriterion("add_time not in", values, "addTime");
            return (Criteria) this;
        }

        public Criteria andAddTimeBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("add_time between", value1, value2, "addTime");
            return (Criteria) this;
        }

        public Criteria andAddTimeNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("add_time not between", value1, value2, "addTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIsNull() {
            addCriterion("update_time is null");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIsNotNull() {
            addCriterion("update_time is not null");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeEqualTo(LocalDateTime value) {
            addCriterion("update_time =", value, "updateTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_teu
         *
         * @mbg.generated
         */
        public Criteria andUpdateTimeEqualToColumn(LitemallTeu.Column column) {
            addCriterion(new StringBuilder("update_time = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotEqualTo(LocalDateTime value) {
            addCriterion("update_time <>", value, "updateTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_teu
         *
         * @mbg.generated
         */
        public Criteria andUpdateTimeNotEqualToColumn(LitemallTeu.Column column) {
            addCriterion(new StringBuilder("update_time <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeGreaterThan(LocalDateTime value) {
            addCriterion("update_time >", value, "updateTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_teu
         *
         * @mbg.generated
         */
        public Criteria andUpdateTimeGreaterThanColumn(LitemallTeu.Column column) {
            addCriterion(new StringBuilder("update_time > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("update_time >=", value, "updateTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_teu
         *
         * @mbg.generated
         */
        public Criteria andUpdateTimeGreaterThanOrEqualToColumn(LitemallTeu.Column column) {
            addCriterion(new StringBuilder("update_time >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeLessThan(LocalDateTime value) {
            addCriterion("update_time <", value, "updateTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_teu
         *
         * @mbg.generated
         */
        public Criteria andUpdateTimeLessThanColumn(LitemallTeu.Column column) {
            addCriterion(new StringBuilder("update_time < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("update_time <=", value, "updateTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_teu
         *
         * @mbg.generated
         */
        public Criteria andUpdateTimeLessThanOrEqualToColumn(LitemallTeu.Column column) {
            addCriterion(new StringBuilder("update_time <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIn(List<LocalDateTime> values) {
            addCriterion("update_time in", values, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotIn(List<LocalDateTime> values) {
            addCriterion("update_time not in", values, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("update_time between", value1, value2, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("update_time not between", value1, value2, "updateTime");
            return (Criteria) this;
        }

        public Criteria andDeletedIsNull() {
            addCriterion("deleted is null");
            return (Criteria) this;
        }

        public Criteria andDeletedIsNotNull() {
            addCriterion("deleted is not null");
            return (Criteria) this;
        }

        public Criteria andDeletedEqualTo(Boolean value) {
            addCriterion("deleted =", value, "deleted");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_teu
         *
         * @mbg.generated
         */
        public Criteria andDeletedEqualToColumn(LitemallTeu.Column column) {
            addCriterion(new StringBuilder("deleted = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeletedNotEqualTo(Boolean value) {
            addCriterion("deleted <>", value, "deleted");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_teu
         *
         * @mbg.generated
         */
        public Criteria andDeletedNotEqualToColumn(LitemallTeu.Column column) {
            addCriterion(new StringBuilder("deleted <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeletedGreaterThan(Boolean value) {
            addCriterion("deleted >", value, "deleted");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_teu
         *
         * @mbg.generated
         */
        public Criteria andDeletedGreaterThanColumn(LitemallTeu.Column column) {
            addCriterion(new StringBuilder("deleted > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeletedGreaterThanOrEqualTo(Boolean value) {
            addCriterion("deleted >=", value, "deleted");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_teu
         *
         * @mbg.generated
         */
        public Criteria andDeletedGreaterThanOrEqualToColumn(LitemallTeu.Column column) {
            addCriterion(new StringBuilder("deleted >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeletedLessThan(Boolean value) {
            addCriterion("deleted <", value, "deleted");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_teu
         *
         * @mbg.generated
         */
        public Criteria andDeletedLessThanColumn(LitemallTeu.Column column) {
            addCriterion(new StringBuilder("deleted < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeletedLessThanOrEqualTo(Boolean value) {
            addCriterion("deleted <=", value, "deleted");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_teu
         *
         * @mbg.generated
         */
        public Criteria andDeletedLessThanOrEqualToColumn(LitemallTeu.Column column) {
            addCriterion(new StringBuilder("deleted <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeletedIn(List<Boolean> values) {
            addCriterion("deleted in", values, "deleted");
            return (Criteria) this;
        }

        public Criteria andDeletedNotIn(List<Boolean> values) {
            addCriterion("deleted not in", values, "deleted");
            return (Criteria) this;
        }

        public Criteria andDeletedBetween(Boolean value1, Boolean value2) {
            addCriterion("deleted between", value1, value2, "deleted");
            return (Criteria) this;
        }

        public Criteria andDeletedNotBetween(Boolean value1, Boolean value2) {
            addCriterion("deleted not between", value1, value2, "deleted");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table litemall_teu
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {
        /**
         * This field was generated by MyBatis Generator.
         * This field corresponds to the database table litemall_teu
         *
         * @mbg.generated
         */
        private LitemallTeuExample example;

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_teu
         *
         * @mbg.generated
         */
        protected Criteria(LitemallTeuExample example) {
            super();
            this.example = example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_teu
         *
         * @mbg.generated
         */
        public LitemallTeuExample example() {
            return this.example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_teu
         *
         * @mbg.generated
         */
        @Deprecated
        public Criteria andIf(boolean ifAdd, ICriteriaAdd add) {
            if (ifAdd) {
                add.add(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_teu
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then) {
            if (condition) {
                then.criteria(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_teu
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then, ICriteriaWhen otherwise) {
            if (condition) {
                then.criteria(this);
            } else {
                otherwise.criteria(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_teu
         *
         * @mbg.generated
         */
        public Criteria andLogicalDeleted(boolean deleted) {
            return deleted ? andDeletedEqualTo(LitemallTeu.Deleted.IS_DELETED.value()) : andDeletedNotEqualTo(LitemallTeu.Deleted.IS_DELETED.value());
        }

        @Deprecated
        public interface ICriteriaAdd {
            /**
             * This method was generated by MyBatis Generator.
             * This method corresponds to the database table litemall_teu
             *
             * @mbg.generated
             */
            Criteria add(Criteria add);
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table litemall_teu
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }

    public interface ICriteriaWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_teu
         *
         * @mbg.generated
         */
        void criteria(Criteria criteria);
    }

    public interface IExampleWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_teu
         *
         * @mbg.generated
         */
        void example(org.linlinjava.litemall.db.domain.LitemallTeuExample example);
    }
}